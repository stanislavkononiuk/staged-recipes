!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CONDA_BUILD_CACHE	.ci_support/compute_build_graph.py	/^CONDA_BUILD_CACHE = os.environ.get("CONDA_BUILD_CACHE")$/;"	v
DEBUG	.travis_scripts/create_feedstocks.py	/^DEBUG = False$/;"	v
_buildable	.ci_support/compute_build_graph.py	/^def _buildable(name, version, recipes_dir, worker, config, finalize):$/;"	f
_deps_to_version_dict	.ci_support/compute_build_graph.py	/^def _deps_to_version_dict(deps):$/;"	f
_fix_any	.ci_support/compute_build_graph.py	/^def _fix_any(value, config):$/;"	f
_get_base_folders	.ci_support/compute_build_graph.py	/^def _get_base_folders(base_dir, changed_files):$/;"	f
_get_or_render_metadata	.ci_support/compute_build_graph.py	/^def _get_or_render_metadata(meta_file_or_recipe_dir, worker, finalize, config=None):$/;"	f
_git_changed_files	.ci_support/compute_build_graph.py	/^def _git_changed_files(git_rev, stop_rev=None, git_root=''):$/;"	f
_installable	.ci_support/compute_build_graph.py	/^def _installable(name, version, build_string, config, conda_resolve):$/;"	f
_rendered_recipes	.ci_support/compute_build_graph.py	/^_rendered_recipes = {}$/;"	v
add_dependency_nodes_and_edges	.ci_support/compute_build_graph.py	/^def add_dependency_nodes_and_edges(node, graph, run, worker, conda_resolve, recipes_dir=None,$/;"	f
add_intradependencies	.ci_support/compute_build_graph.py	/^def add_intradependencies(graph):$/;"	f
add_recipe_to_graph	.ci_support/compute_build_graph.py	/^def add_recipe_to_graph(recipe_dir, graph, run, worker, conda_resolve,$/;"	f
args	.ci_support/build_all.py	/^    args = parser.parse_args()$/;"	v
build_all	.ci_support/build_all.py	/^def build_all(recipes_dir, arch):$/;"	f
build_folders	.ci_support/build_all.py	/^def build_folders(recipes_dir, folders, arch, channel_urls):$/;"	f
changed_files	.travis_scripts/create_feedstocks.py	/^    changed_files = changed_files.splitlines()$/;"	v
changed_files	.travis_scripts/create_feedstocks.py	/^    changed_files = subprocess.check_output($/;"	v
collapse_subpackage_nodes	.ci_support/compute_build_graph.py	/^def collapse_subpackage_nodes(graph):$/;"	f
construct_graph	.ci_support/compute_build_graph.py	/^def construct_graph(recipes_dir, worker, run, conda_resolve, folders=(),$/;"	f
exit_code	.travis_scripts/create_feedstocks.py	/^    exit_code = 0$/;"	v
expand_run	.ci_support/compute_build_graph.py	/^def expand_run(graph, conda_resolve, worker, run, steps=0, max_downstream=5,$/;"	f
expand_run_upstream	.ci_support/compute_build_graph.py	/^def expand_run_upstream(graph, conda_resolve, worker, run, steps=0, max_downstream=5,$/;"	f
expand_step	.ci_support/compute_build_graph.py	/^    def expand_step(task_graph, full_graph, downstream):$/;"	f	function:expand_run
feedstock_token_exists	.travis_scripts/create_feedstocks.py	/^def feedstock_token_exists(organization, name):$/;"	f
get_build_deps	.ci_support/compute_build_graph.py	/^def get_build_deps(meta):$/;"	f
get_config	.ci_support/build_all.py	/^def get_config(arch, channel_urls):$/;"	f
get_host_platform	.ci_support/build_all.py	/^def get_host_platform():$/;"	f
get_run_test_deps	.ci_support/compute_build_graph.py	/^def get_run_test_deps(meta):$/;"	f
gh	.travis_scripts/create_feedstocks.py	/^    gh = None$/;"	v
gh_drone	.travis_scripts/create_feedstocks.py	/^    gh_drone = Github(os.environ['GH_DRONE_TOKEN'])$/;"	v
gh_drone_remaining	.travis_scripts/create_feedstocks.py	/^    gh_drone_remaining = print_rate_limiting_info(gh_drone, 'GH_DRONE_TOKEN')$/;"	v
git_changed_recipes	.ci_support/compute_build_graph.py	/^def git_changed_recipes(git_rev='HEAD@{1}', stop_rev=None, git_root='.'):$/;"	f
git_changed_submodules	.ci_support/compute_build_graph.py	/^def git_changed_submodules(git_rev='HEAD@{1}', stop_rev=None, git_root='.'):$/;"	f
git_new_submodules	.ci_support/compute_build_graph.py	/^def git_new_submodules(git_rev='HEAD@{1}', stop_rev=None, git_root='.'):$/;"	f
git_renamed_folders	.ci_support/compute_build_graph.py	/^def git_renamed_folders(git_rev='HEAD@{1}', stop_rev=None, git_root='.'):$/;"	f
hash_length	.ci_support/compute_build_graph.py	/^hash_length = api.Config().hash_length$/;"	v
help	.ci_support/build_all.py	/^                        help='Directory where the recipes are')$/;"	v
help	.ci_support/build_all.py	/^                        help='target architecture (64 or 32)')$/;"	v
is_merged_pr	.travis_scripts/create_feedstocks.py	/^    is_merged_pr = ($/;"	v
list_recipes	.travis_scripts/create_feedstocks.py	/^def list_recipes():$/;"	f
log	.ci_support/compute_build_graph.py	/^log = logging.getLogger(__file__)$/;"	v
main	.travis_scripts/trigger_travis_build.py	/^def main(argv):$/;"	f
match_peer_job	.ci_support/compute_build_graph.py	/^def match_peer_job(target_matchspec, other_m, this_m=None):$/;"	f
new_file_conflicts	.travis_scripts/create_feedstocks.py	/^    new_file_conflicts = filter(lambda _: _.startswith("AU "), changed_files)$/;"	v
new_file_conflicts	.travis_scripts/create_feedstocks.py	/^    new_file_conflicts = map($/;"	v
order_build	.ci_support/compute_build_graph.py	/^def order_build(graph):$/;"	f
owner_info	.travis_scripts/create_feedstocks.py	/^    owner_info = ['--organization', 'conda-forge']$/;"	v
package_key	.ci_support/compute_build_graph.py	/^def package_key(metadata, worker_label, run='build'):$/;"	f
parser	.ci_support/build_all.py	/^    parser = argparse.ArgumentParser()$/;"	v
print_rate_limiting_info	.travis_scripts/create_feedstocks.py	/^def print_rate_limiting_info(gh, user):$/;"	f
rebuild_travis	.travis_scripts/trigger_travis_build.py	/^def rebuild_travis(repo_slug):$/;"	f
recipe_directory_name	.travis_scripts/create_feedstocks.py	/^recipe_directory_name = 'recipes'$/;"	v
removed_recipes	.travis_scripts/create_feedstocks.py	/^    removed_recipes = filter(lambda _: _.startswith("D "), changed_files)$/;"	v
removed_recipes	.travis_scripts/create_feedstocks.py	/^    removed_recipes = map($/;"	v
removed_recipes	.travis_scripts/create_feedstocks.py	/^    removed_recipes = map(lambda _: _.replace("D", "", 1).lstrip(), removed_recipes)$/;"	v
removed_recipes	.travis_scripts/create_feedstocks.py	/^    removed_recipes = map(lambda _: _.split(os.path.sep)[0], removed_recipes)$/;"	v
removed_recipes	.travis_scripts/create_feedstocks.py	/^    removed_recipes = sorted(set(removed_recipes))$/;"	v
reorder_cyclical_test_dependencies	.ci_support/compute_build_graph.py	/^def reorder_cyclical_test_dependencies(graph):$/;"	f
repo_exists	.travis_scripts/create_feedstocks.py	/^def repo_exists(gh, organization, name):$/;"	f
sleep_until_reset	.travis_scripts/create_feedstocks.py	/^def sleep_until_reset(gh):$/;"	f
smithy_conf	.travis_scripts/create_feedstocks.py	/^    smithy_conf = os.path.expanduser('~\/.conda-smithy')$/;"	v
tmp_dir	.travis_scripts/create_feedstocks.py	/^def tmp_dir(*args, **kwargs):$/;"	f
write_token	.travis_scripts/create_feedstocks.py	/^    def write_token(name, token):$/;"	f
