{% set version = '1.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-distcomp
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/distcomp_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/distcomp/distcomp_{{ version }}.tar.gz
  sha256: e4c27ccd1c9d205016f36c6c34f0c67256534af368eb70639c4369d38fed59ac

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-r6 >=2.0
    - r-digest
    - r-httr >=1.0.0
    - r-jsonlite
    - r-shiny
    - r-stringr
    - r-survival
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-r6 >=2.0
    - r-digest
    - r-httr >=1.0.0
    - r-jsonlite
    - r-shiny
    - r-stringr
    - r-survival

test:
  commands:
    - $R -e "library('distcomp')"           # [not win]
    - "\"%R%\" -e \"library('distcomp')\""  # [win]

about:
  home: http://dx.doi.org/10.18637/jss.v077.i13
  license: LGPL-2.0-or-later
  summary: "Implementing algorithms and fitting models when sites (possibly remote) share computation
    summaries rather than actual data over HTTP with a master R process (using ''opencpu'',
    for example). A stratified Cox model and a singular value decomposition are provided.
    The former makes direct use of code from the R ''survival'' package. (That is, the
    underlying Cox model code is derived from that in the R ''survival'' package.) Sites
    may provide data via several means: CSV files, Redcap API, etc. An extensible design
    allows for new methods to be added in the future and includes facilities for local
    prototyping and testing. Web applications are provided (via ''shiny'') for the implemented
    methods to help in designing and deploying the computations."
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r

# Title: Computations over Distributed Data without Aggregation
# Maintainer: Balasubramanian Narasimhan <naras@stat.Stanford.EDU>
# Package: distcomp
# Version: 1.1
# VignetteBuilder: knitr
# URL: http://dx.doi.org/10.18637/jss.v077.i13
# Depends: survival, stats, R (>= 3.1.0)
# Imports: utils, shiny, httr (>= 1.0.0), digest, jsonlite, stringr, R6 (>= 2.0)
# Suggests: opencpu, knitr, covr
# Authors@R: c(person("Balasubramanian", "Narasimhan", role=c("aut", "cre"), email = "naras@stat.Stanford.EDU"), person("Marina", "Bendersky", role=c("aut")), person("Sam", "Gross", role=c("aut")), person(c("Terry", "M."), "Therneau", role=c("ctb")), person("Thomas", "Lumley", role=c("ctb")))
# Description: Implementing algorithms and fitting models when sites (possibly remote) share computation summaries rather than actual data over HTTP with a master R process (using 'opencpu', for example). A stratified Cox model and a singular value decomposition are provided. The former makes direct use of code from the R 'survival' package. (That is, the underlying Cox model code is derived from that in the R 'survival' package.) Sites may provide data via several means: CSV files, Redcap API, etc. An extensible design allows for new methods to be added in the future and includes facilities for local prototyping and testing. Web applications are provided (via 'shiny') for the implemented methods to help in designing and deploying the computations.
# Copyright: inst/COPYRIGHTS
# Encoding: UTF-8
# License: LGPL (>= 2)
# RoxygenNote: 6.1.1
# NeedsCompilation: yes
# Packaged: 2019-09-23 18:32:37 UTC; naras
# Author: Balasubramanian Narasimhan [aut, cre], Marina Bendersky [aut], Sam Gross [aut], Terry M. Therneau [ctb], Thomas Lumley [ctb]
# Repository: CRAN
# Date/Publication: 2019-09-23 18:50:03 UTC
