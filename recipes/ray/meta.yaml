# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "ray" %}
{% set version = "0.8.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/ray-project/ray/releases/download/{{ version }}/ray-{{ version }}.tar.gz
  # and otherwise fall back to archive: 
  # url: https://github.com/simplejson/simplejson/archive/{{ version }}.tar.gz
  url: https://github.com/ray-project/ray/archive/ray-0.8.0.tar.gz
  sha256: 2da0a27e00febd16e9421261a3b3ef5352bf37378e28d1adabbf73879f910748
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # Ray is not exactly pure Python, but it's pip-installable without any conda dependencies so I think we can use noarch python here?
  # This is the friendly automated conda-forge-linting service. noarch packages can't have selectors. If the selectors are necessary, please remove noarch python.
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  skip: True  # [py<36]
  # script: "{{ PYTHON }} -m pip install . -vv"
  # script: "cd python && {{ PYTHON }} -m pip install . --no-deps -vv"
  script:
  - ray/ci/travis/install-bazel.sh
  - cd ray/python
  - {{ PYTHON }} -m pip install . --verbose

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - numpy
    - filelock
    - funcsigs
    - click
    - colorama
    - pytest
    - pyyaml
    - redis
    - six >=1.0.0
    - flatbuffers
    - cython >=0.29
  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - ray
    - ray.tests

about:
  home: https://github.com/ray-project/ray
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: Apache-2.0
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: Apache
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE
  summary: 'Ray is a fast and simple framework for building and running distributed applications.'

  # The remaining entries in this section are optional, but recommended.
  description: |
    Ray is a fast and simple framework for building and running
    distributed applications.
  doc_url: https://ray.readthedocs.io/
  dev_url: https://github.com/ray-project/ray

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - dHannasch
