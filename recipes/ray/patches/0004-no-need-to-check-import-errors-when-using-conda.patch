From 2e30ad8749d7a8496649a35b629200f8ed4fcd0a Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Sun, 29 Mar 2020 20:26:58 +0200
Subject: [PATCH 4/4] no need to check import errors when using conda

---
 python/ray/__init__.py | 36 ++++++++++++++++++------------------
 1 file changed, 18 insertions(+), 18 deletions(-)

diff --git a/python/ray/__init__.py b/python/ray/__init__.py
index f2901a3a..d7aac6ae 100644
--- a/python/ray/__init__.py
+++ b/python/ray/__init__.py
@@ -66,24 +66,24 @@ try:
     if hasattr(ray, "_raylet") and hasattr(ray._raylet, "pyarrow"):
         ray._raylet.pyarrow = pyarrow
 except ImportError as e:
-    if ((hasattr(e, "msg") and isinstance(e.msg, str)
-         and ("libstdc++" in e.msg or "CXX" in e.msg))):
-        # This code path should be taken with Python 3.
-        e.msg += helpful_message
-    elif (hasattr(e, "message") and isinstance(e.message, str)
-          and ("libstdc++" in e.message or "CXX" in e.message)):
-        # This code path should be taken with Python 2.
-        condition = (hasattr(e, "args") and isinstance(e.args, tuple)
-                     and len(e.args) == 1 and isinstance(e.args[0], str))
-        if condition:
-            e.args = (e.args[0] + helpful_message, )
-        else:
-            if not hasattr(e, "args"):
-                e.args = ()
-            elif not isinstance(e.args, tuple):
-                e.args = (e.args, )
-            e.args += (helpful_message, )
-    raise
+    # if ((hasattr(e, "msg") and isinstance(e.msg, str)
+    #      and ("libstdc++" in e.msg or "CXX" in e.msg))):
+    #     # This code path should be taken with Python 3.
+    #     e.msg += helpful_message
+    # elif (hasattr(e, "message") and isinstance(e.message, str)
+    #       and ("libstdc++" in e.message or "CXX" in e.message)):
+    #     # This code path should be taken with Python 2.
+    #     condition = (hasattr(e, "args") and isinstance(e.args, tuple)
+    #                  and len(e.args) == 1 and isinstance(e.args[0], str))
+    #     if condition:
+    #         e.args = (e.args[0] + helpful_message, )
+    #     else:
+    #         if not hasattr(e, "args"):
+    #             e.args = ()
+    #         elif not isinstance(e.args, tuple):
+    #             e.args = (e.args, )
+    #         e.args += (helpful_message, )
+    raise e
 
 from ray._raylet import (
     ActorCheckpointID,
-- 
2.24.0.windows.2

