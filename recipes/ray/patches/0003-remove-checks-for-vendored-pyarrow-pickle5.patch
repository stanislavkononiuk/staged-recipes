From feb7fc3eccaf9245eb21ceb4926784dcbadcf469 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Sun, 29 Mar 2020 20:22:44 +0200
Subject: [PATCH 3/4] remove checks for vendored pyarrow/pickle5

---
 python/ray/__init__.py | 40 ++++++++++++++++++++--------------------
 1 file changed, 20 insertions(+), 20 deletions(-)

diff --git a/python/ray/__init__.py b/python/ray/__init__.py
index eb02bacf..f2901a3a 100644
--- a/python/ray/__init__.py
+++ b/python/ray/__init__.py
@@ -9,16 +9,16 @@ import sys
 # MUST add pickle5 to the import path because it will be imported by some
 # raylet modules.
 
-if "pickle5" in sys.modules:
-    raise ImportError("Ray must be imported before pickle5 because Ray "
-                      "requires a specific version of pickle5 (which is "
-                      "packaged along with Ray).")
-
-# Add the directory containing pickle5 to the Python path so that we find the
-# pickle5 version packaged with ray and not a pre-existing pickle5.
-pickle5_path = os.path.join(
-    os.path.abspath(os.path.dirname(__file__)), "pickle5_files")
-sys.path.insert(0, pickle5_path)
+# if "pickle5" in sys.modules:
+#     raise ImportError("Ray must be imported before pickle5 because Ray "
+#                       "requires a specific version of pickle5 (which is "
+#                       "packaged along with Ray).")
+#
+# # Add the directory containing pickle5 to the Python path so that we find the
+# # pickle5 version packaged with ray and not a pre-existing pickle5.
+# pickle5_path = os.path.join(
+#     os.path.abspath(os.path.dirname(__file__)), "pickle5_files")
+# sys.path.insert(0, pickle5_path)
 
 # Expose ray ABI symbols which may be dependent by other shared
 # libraries such as _streaming.so. See BUILD.bazel:_raylet
@@ -35,16 +35,16 @@ if os.path.exists(so_path):
 # details.
 import ray._raylet  # noqa: E402
 
-if "pyarrow" in sys.modules:
-    raise ImportError("Ray must be imported before pyarrow because Ray "
-                      "requires a specific version of pyarrow (which is "
-                      "packaged along with Ray).")
-
-# Add the directory containing pyarrow to the Python path so that we find the
-# pyarrow version packaged with ray and not a pre-existing pyarrow.
-pyarrow_path = os.path.join(
-    os.path.abspath(os.path.dirname(__file__)), "pyarrow_files")
-sys.path.insert(0, pyarrow_path)
+# if "pyarrow" in sys.modules:
+#     raise ImportError("Ray must be imported before pyarrow because Ray "
+#                       "requires a specific version of pyarrow (which is "
+#                       "packaged along with Ray).")
+#
+# # Add the directory containing pyarrow to the Python path so that we find the
+# # pyarrow version packaged with ray and not a pre-existing pyarrow.
+# pyarrow_path = os.path.join(
+#     os.path.abspath(os.path.dirname(__file__)), "pyarrow_files")
+# sys.path.insert(0, pyarrow_path)
 
 # See https://github.com/ray-project/ray/issues/131.
 helpful_message = """
-- 
2.24.0.windows.2

