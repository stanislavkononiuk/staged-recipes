{% set name = "lightwood" %}
{% set version = "22.8.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/lightwood-{{ version }}.tar.gz
  sha256: 43cce4b290ac275206d8f12c506d34b6b74f4aa8413815a693fc26a50de48fed

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - pip
    - python >=3.7
  run:
    - autopep8 >=1.5.7
    - black >=21.9b0
    - colorlog ==6.5.0
    - dataclasses-json >=0.5.4
    - dill ==0.3.4
    - langdetect >=1.0.0,<=1.0.9
    - lightgbm >=3.2.1,<=3.3.2
    - neuralforecast ==0.1.0
    - nltk >=3,<3.6
    - numpy >=1.18.0,<=1.22.0
    - optuna >=2.8.0,<2.10.0
    - pandas >=1.1.5,<=1.3.3
    - psutil >=5.7.0
    - python >=3.7
    - python-dateutil <2.8.1,>=2.1
    - pytorch-lightning >=1.3.0
    - requests >=2.0.0
    - schema >=0.6.8
    - scikit-learn <=1.0.2
    - scipy >=1.5.4,<=1.7.1
    - setuptools >=21.2.1
    - sktime >=0.11.0,<0.12.0
    - statsforecast ==0.7.0
    - statsmodels >=0.12.0
    - pytorch >=1.9.0,<1.10.0
    - torch-optimizer ==0.1.0
    - transformers >=4.5.0,<=4.11.3
    - typing_extensions
    - wheel >=0.32.2

test:
  imports:
    - lightwood

about:
  home: https://github.com/mindsdb/lightwood
  summary: Lightwood is a toolkit for automatic machine learning model building
  license: GPL-2.0-or-later
  license_file:
    - LICENSE
  description: |
    Lightwood is an AutoML framework that enables you to generate and customize machine learning pipelines declarative syntax called JSON-AI.

    Our goal is to make the data science/machine learning (DS/ML) life cycle easier by allowing users to focus on what they want to do their data without needing to write repetitive boilerplate code around machine learning and data preparation. Instead, we enable you to focus on the parts of a model that are truly unique and custom.

    Lightwood works with a variety of data types such as numbers, dates, categories, tags, text, arrays and various multimedia formats. These data types can be combined together to solve complex problems. We also support a time-series mode for problems that have between-row dependencies.

    Our JSON-AI syntax allows users to change any and all parts of the models Lightwood automatically generates. The syntax outlines the specifics details in each step of the modeling pipeline. Users may override default values (for example, changing the type of a column) or alternatively, entirely replace steps with their own methods (ex: use a random forest model for a predictor). Lightwood creates a "JSON-AI" object from this syntax which can then be used to automatically generate python code to represent your pipeline.

extra:
  recipe-maintainers:
    - paxcema
