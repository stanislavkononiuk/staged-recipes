FindIconv was introduced in CMake 3.11.  This fixes underlinking.
--- tvips/CMakeLists.txt.orig
+++ tvips/CMakeLists.txt
@@ -13,7 +13,7 @@
 # was introduced in CMake 3.4.  XXX Including GNUInstallDirs
 # (introduced in 2.8.5, see http://www.cmake.org/Bug/view.php?id=3976)
 # may be a bit of a wart in a non-GNU package.
-cmake_minimum_required(VERSION 3.4)
+cmake_minimum_required(VERSION 3.11)
 project("MicroED tools")
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules")
@@ -46,7 +46,6 @@ include_directories("${GSL_INCLUDES}")
 
 # Any POSIX-compliant version of iconv should be fine.
 find_package(Iconv REQUIRED)
-include_directories("${ICONV_INCLUDE_DIR}")
 
 
 # Any version of libR should be fine.  Unlike find_package(),
@@ -243,8 +242,7 @@ endif()
 # changes.
 #
 # Anything that links in delta_t.cpp will need cxx_constexpr, util.c
-# depends on c_restrict.  frame.c and tiff.c depend on
-# ${ICONV_LIBRARIES}.
+# depends on c_restrict.  frame.c and tiff.c depend on Iconv::Iconv.
 #
 # XXX Should the header files be included here?  Then, there would be
 # no need for include_directories("${PROJECT_SOURCE_DIR}").
@@ -261,7 +259,7 @@ add_executable(cphdr
   "util.c")
 add_dependencies(cphdr _update_version_h)
 target_compile_features(cphdr PRIVATE c_restrict)
-target_link_libraries(cphdr m ${ICONV_LIBRARIES})
+target_link_libraries(cphdr Iconv::Iconv m)
 
 add_executable(dan_test
   "compat.c"
@@ -270,7 +268,7 @@ add_executable(dan_test
   "util.c")
 add_dependencies(dan_test _update_version_h)
 target_compile_features(dan_test PRIVATE c_restrict)
-target_link_libraries(dan_test m ${ICONV_LIBRARIES})
+target_link_libraries(dan_test Iconv::Iconv m)
 endif()
 
 add_executable(dumpframe
@@ -285,7 +283,7 @@ add_executable(dumpframe
   "util.c")
 add_dependencies(dumpframe _update_version_h)
 target_compile_features(dumpframe PRIVATE c_restrict cxx_constexpr)
-target_link_libraries(dumpframe ${ICONV_LIBRARIES} ${TIFF_LIBRARIES})
+target_link_libraries(dumpframe Iconv::Iconv ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
 add_executable(fixpoint
@@ -317,7 +315,7 @@ add_executable(idoc2smv
   "util.c")
 add_dependencies(idoc2smv _update_version_h)
 target_compile_features(idoc2smv PRIVATE c_restrict cxx_constexpr)
-target_link_libraries(idoc2smv ${ICONV_LIBRARIES} ${TIFF_LIBRARIES})
+target_link_libraries(idoc2smv Iconv::Iconv ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
 add_executable(img2img
@@ -327,7 +325,7 @@ add_executable(img2img
   "util.c")
 add_dependencies(img2img _update_version_h)
 target_compile_features(img2img PRIVATE c_restrict)
-target_link_libraries(img2img m ${ICONV_LIBRARIES})
+target_link_libraries(img2img Iconv::Iconv m)
 
 add_executable(img2px
   "${FLEX_SLICE_OUTPUTS}"
@@ -342,7 +340,7 @@ add_dependencies(img2px _update_version_h)
 target_compile_features(img2px PRIVATE c_restrict cxx_constexpr)
 target_link_libraries(img2px
   ${GSL_LIBRARIES}
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${LIBR_LIBRARIES}
   ${TIFF_LIBRARIES})
 
@@ -353,7 +351,7 @@ add_executable(img2splot
   "util.c")
 add_dependencies(img2splot _update_version_h)
 target_compile_features(img2splot PRIVATE c_restrict)
-target_link_libraries(img2splot m ${ICONV_LIBRARIES})
+target_link_libraries(img2splot Iconv::Iconv m)
 
 add_executable(imgcorr
   "compat.c"
@@ -362,7 +360,7 @@ add_executable(imgcorr
   "util.c")
 add_dependencies(imgcorr _update_version_h)
 target_compile_features(imgcorr PRIVATE c_restrict)
-target_link_libraries(imgcorr m ${ICONV_LIBRARIES})
+target_link_libraries(imgcorr Iconv::Iconv m)
 
 add_executable(imgrevert
   "compat.c"
@@ -371,7 +369,7 @@ add_executable(imgrevert
   "util.c")
 add_dependencies(imgrevert _update_version_h)
 target_compile_features(imgrevert PRIVATE c_restrict)
-target_link_libraries(imgrevert m ${ICONV_LIBRARIES})
+target_link_libraries(imgrevert Iconv::Iconv m)
 
 add_executable(mike_test
   "compat.c"
@@ -380,7 +378,7 @@ add_executable(mike_test
   "util.c")
 add_dependencies(mike_test _update_version_h)
 target_compile_features(mike_test PRIVATE c_restrict)
-target_link_libraries(mike_test m ${ICONV_LIBRARIES})
+target_link_libraries(mike_test Iconv::Iconv m)
 endif()
 
 add_executable(mrc2smv
@@ -396,7 +394,7 @@ add_executable(mrc2smv
 add_dependencies(mrc2smv _update_version_h)
 target_compile_features(mrc2smv PRIVATE c_restrict cxx_constexpr)
 target_link_libraries(mrc2smv
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
@@ -416,7 +414,7 @@ add_executable(ser2smv
   "util.c")
 target_compile_features(ser2smv PRIVATE c_restrict cxx_constexpr)
 target_link_libraries(ser2smv
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${TIFF_LIBRARIES})
 
 if(BUILD_JIFFIES)
@@ -425,7 +423,7 @@ add_executable(smv2pgm
   "frame.c"
   "smv2pgm.c"
   "util.c")
-target_link_libraries(smv2pgm m ${ICONV_LIBRARIES})
+target_link_libraries(smv2pgm Iconv::Iconv m)
 
 add_executable(tiff2raw
   "${FLEX_SLICE_OUTPUTS}"
@@ -438,7 +436,7 @@ add_executable(tiff2raw
   "util.c")
 add_dependencies(tiff2raw _update_version_h)
 target_compile_features(tiff2raw PRIVATE c_restrict cxx_constexpr)
-target_link_libraries(tiff2raw ${ICONV_LIBRARIES} ${TIFF_LIBRARIES})
+target_link_libraries(tiff2raw Iconv::Iconv ${TIFF_LIBRARIES})
 endif()
 
 add_executable(tiff2smv
@@ -454,7 +452,7 @@ add_dependencies(tiff2smv _update_version_h)
 target_compile_features(tiff2smv PRIVATE c_restrict cxx_constexpr)
 target_link_libraries(tiff2smv
   ${CMAKE_THREAD_LIBS_INIT}
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${TIFF_LIBRARIES})
 
 add_executable(tvips2smv
@@ -469,7 +467,7 @@ add_executable(tvips2smv
 add_dependencies(tvips2smv _update_version_h)
 target_compile_features(tvips2smv PRIVATE c_restrict cxx_constexpr)
 target_link_libraries(tvips2smv
-  ${ICONV_LIBRARIES}
+  Iconv::Iconv
   ${TIFF_LIBRARIES})
 
 
--- tvips/cmake/Modules/FindIconv.cmake
+++ /dev/null
@@ -1,51 +0,0 @@
-# -*- mode: cmake -*-
-
-# - Try to find Iconv
-# Once done this will define
-#
-#  ICONV_FOUND - system has Iconv
-#  ICONV_INCLUDE_DIR - the Iconv include directory
-#  ICONV_LIBRARIES - Link these to use Iconv
-#  ICONV_VERSION - Iconv version string
-#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const
-#
-# XXX 2017-06-27: from https://cmake.org/Bug/view.php?id=13517
-
-include(CheckCSourceCompiles)
-
-find_path(ICONV_INCLUDE_DIR iconv.h)
-find_library(ICONV_LIBRARIES NAMES iconv libiconv libiconv-2 c)
-
-# handle the QUIETLY and REQUIRED arguments and set ICONV_FOUND to
-# TRUE if all listed variables are TRUE
-include(FindPackageHandleStandardArgs)
-FIND_PACKAGE_HANDLE_STANDARD_ARGS(ICONV
-  REQUIRED_VARS ICONV_LIBRARIES ICONV_INCLUDE_DIR VERSION_VAR ICONV_VERSION)
-
-if(ICONV_FOUND)
-  set(CMAKE_REQUIRED_INCLUDES "${ICONV_INCLUDE_DIR}")
-  set(CMAKE_REQUIRED_LIBRARIES "${ICONV_LIBRARIES}")
-
-  CHECK_C_SOURCE_COMPILES("
-    #include <iconv.h>
-    int
-    main(int argc, char *argv[])
-    {
-        iconv_t conv = 0;
-        const char* in = 0;
-        size_t ilen = 0;
-        char* out = 0;
-        size_t olen = 0;
-        iconv(conv, &in, &ilen, &out, &olen);
-        return (0);
-    }"
-    ICONV_SECOND_ARGUMENT_IS_CONST )
-
-  set(CMAKE_REQUIRED_INCLUDES)
-  set(CMAKE_REQUIRED_LIBRARIES)
-endif(ICONV_FOUND)
-
-mark_as_advanced(
-  ICONV_INCLUDE_DIR
-  ICONV_LIBRARIES
-  ICONV_SECOND_ARGUMENT_IS_CONST)
--- tvips/config.h.in.orig
+++ tvips/config.h.in
@@ -96,6 +96,20 @@
      realpath(const char *pathname, char *resolved);
 #endif
 
+/* Unambiguous, absolute path to the iconv header, to be used as a
+ * computed include.  The search paths may contain several headers
+ * from different iconv implementations and there is no guarantee that
+ * the header found first corresponds to the desired implementation;
+ * it may not even be compatible with Iconv_LIBRARY.
+ */
+#cmakedefine Iconv_IS_BUILT_IN
+#ifdef Iconv_IS_BUILT_IN
+#    define TVIPS_TOOLS_ICONV_H <iconv.h>
+#else
+#    define TVIPS_TOOLS_ICONV_H "@Iconv_INCLUDE_DIR@/iconv.h"
+#endif
+
+
 /* Declare the compatibility implementations of getprogname(3) and
  * setprogname(3).
  */
--- tvips/tiff.c.orig
+++ tvips/tiff.c
@@ -49,7 +49,7 @@
 #include <ctype.h>
 #include <errno.h>
 #include <float.h>
-#include <iconv.h>
+#include TVIPS_TOOLS_ICONV_H
 #include <limits.h>
 #include <math.h>
 #include <netdb.h>
