{% set version = '0.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-future.apply
  version: {{ version|replace("-", "_") }}

source:
  fn: future.apply_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/future.apply_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/future.apply/future.apply_{{ version }}.tar.gz
  sha256: 9328f008abf41db462ff6c120fa3527e51cec549c6565972a54996aae8f4b2b0

build:
  number: 0
  skip: true  # [win32]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - r-base
    - r-future >=1.6.2
    - r-globals >=0.10.3

  run:
    - r-base
    - r-future >=1.6.2
    - r-globals >=0.10.3

test:
  commands:
    - $R -e "library('future.apply')"  # [not win]
    - "\"%R%\" -e \"library('future.apply')\""  # [win]

about:
  home: https://github.com/HenrikBengtsson/future.apply
  license: LGPL (>= 2.1)
  summary: Implementations of apply(), lapply(), sapply() and friends that can be resolved using
    any future-supported backend, e.g. parallel on the local machine or distributed
    on a compute cluster.  These future_*apply() functions comes with the same pros
    and cons as the corresponding base-R *apply() functions but with the additional
    feature of being able to be processed via the future framework.
  license_family: LGPL

extra:
  recipe-maintainers:
    - cbrueffer
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
