From 63bb67fd9ed5991bc1478241925d3d7e463d674d Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio.traversaro@iit.it>
Date: Tue, 13 Dec 2022 17:10:32 +0100
Subject: [PATCH] unvendor_patch

---
 WORKSPACE                   | 17 +++++++----------
 bazel/system_absl.BUILD     | 22 ++++++++++++++++++++++
 bazel/system_pybind11.BUILD | 23 +++++++++++++++++++++++
 labmaze/cc/BUILD            |  4 ++--
 setup.py                    | 28 ++++++++++++++++++++++++++--
 5 files changed, 80 insertions(+), 14 deletions(-)
 create mode 100644 bazel/system_absl.BUILD
 create mode 100644 bazel/system_pybind11.BUILD

diff --git a/WORKSPACE b/WORKSPACE
index b997d5d..7afdbc0 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -24,11 +24,10 @@ http_archive(
     url = "https://github.com/bazelbuild/bazel-skylib/archive/1.3.0.zip",
 )
 
-http_archive(
+new_local_repository(
     name = "com_google_absl",
-    sha256 = "54707f411cb62a26a776dad5fd60829098c181700edcd022ea5c2ca49e9b7ef1",
-    strip_prefix = "abseil-cpp-20220623.1",
-    url = "https://github.com/abseil/abseil-cpp/archive/20220623.1.zip",
+    path = "/this/path/will/be/replaced/by/setup/py",  # absl placeholder
+    build_file = "@//bazel:system_absl.BUILD"
 )
 
 http_archive(
@@ -38,17 +37,15 @@ http_archive(
     url = "https://github.com/google/googletest/archive/release-1.12.1.zip",
 )
 
-http_archive(
+new_local_repository(
     name = "pybind11",
-    build_file = "@//bazel:pybind11.BUILD",
-    sha256 = "fcf94065efcfd0a7a828bacf118fa11c43f6390d0c805e3e6342ac119f2e9976",
-    strip_prefix = "pybind11-2.10.1",
-    url = "https://github.com/pybind/pybind11/archive/v2.10.1.zip",
+    path = "/this/path/will/be/replaced/by/setup/py",  # pybind11 placeholder
+    build_file = "@//bazel:system_pybind11.BUILD"
 )
 
 new_local_repository(
     name = "python_headers",
-    path = "/usr/include/python3.7",  # May be overwritten by setup.py.
+    path = "/home/traversaro/mambaforge/envs/labmazedev/include/python3.11",  # May be overwritten by setup.py.
     build_file = "@//bazel:python_headers.BUILD"
 )
 
diff --git a/bazel/system_absl.BUILD b/bazel/system_absl.BUILD
new file mode 100644
index 0000000..a51eac3
--- /dev/null
+++ b/bazel/system_absl.BUILD
@@ -0,0 +1,22 @@
+# Copyright 2019 DeepMind Technologies Limited.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ============================================================================
+#
+
+cc_library(
+    name = "com_google_absl",
+    hdrs = glob(["**/*.h"]),
+    includes = ["."],
+    visibility = ["//visibility:public"],
+)
diff --git a/bazel/system_pybind11.BUILD b/bazel/system_pybind11.BUILD
new file mode 100644
index 0000000..f3c1a44
--- /dev/null
+++ b/bazel/system_pybind11.BUILD
@@ -0,0 +1,23 @@
+# Copyright 2019 DeepMind Technologies Limited.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ============================================================================
+#
+
+cc_library(
+    name = "pybind11",
+    hdrs = glob(["**/*.h"]),
+    includes = ["."],
+    visibility = ["//visibility:public"],
+    deps = ["@python_headers"],
+)
diff --git a/labmaze/cc/BUILD b/labmaze/cc/BUILD
index 7b42d57..98dfb1b 100644
--- a/labmaze/cc/BUILD
+++ b/labmaze/cc/BUILD
@@ -54,7 +54,7 @@ cc_library(
     hdrs = ["char_grid.h"],
     deps = [
         ":logging",
-        "@com_google_absl//absl/strings",
+        "@com_google_absl",
     ],
 )
 
@@ -95,7 +95,7 @@ cc_library(
     deps = [
         ":algorithm",
         ":text_maze",
-        "@com_google_absl//absl/strings",
+        "@com_google_absl",
     ],
 )
 
diff --git a/setup.py b/setup.py
index 62053ea..3f96cf6 100644
--- a/setup.py
+++ b/setup.py
@@ -40,6 +40,12 @@ REQUIRED_PACKAGES = [
 WORKSPACE_PYTHON_HEADERS_PATTERN = re.compile(
     r'(?<=path = ").*(?=",  # May be overwritten by setup\.py\.)')
 
+WORKSPACE_PYBIND11_HEADERS_PATTERN = re.compile(
+    r'(?<=path = ").*(?=",  # pybind11 placeholder)')
+
+WORKSPACE_ABSL_HEADERS_PATTERN = re.compile(
+    r'(?<=path = ").*(?=",  # absl placeholder)')
+
 IS_WINDOWS = sys.platform.startswith('win')
 
 
@@ -67,11 +73,29 @@ class BuildBazelExtension(build_ext.build_ext):
     with open('WORKSPACE', 'r') as f:
       workspace_contents = f.read()
 
+      #print(f"0 workspace_contents: {workspace_contents}")
+
+
     with open('WORKSPACE', 'w') as f:
-      f.write(WORKSPACE_PYTHON_HEADERS_PATTERN.sub(
+      workspace_contents = WORKSPACE_PYTHON_HEADERS_PATTERN.sub(
           distutils.sysconfig.get_python_inc().replace(os.path.sep,
                                                        posixpath.sep),
-          workspace_contents))
+          workspace_contents)
+
+      if IS_WINDOWS:
+        include_dir = os.environ['LIBRARY_INC'].replace(os.path.sep,
+                                                       posixpath.sep)
+      else:
+        include_dir = os.path.join(os.environ['PREFIX'],'include')
+
+
+      workspace_contents = WORKSPACE_PYBIND11_HEADERS_PATTERN.sub(
+          include_dir, workspace_contents)
+
+      workspace_contents = WORKSPACE_ABSL_HEADERS_PATTERN.sub(
+          include_dir, workspace_contents)
+
+      f.write(workspace_contents)
 
     if not os.path.exists(self.build_temp):
       os.makedirs(self.build_temp)
-- 
2.34.1

