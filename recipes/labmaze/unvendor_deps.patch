From 5dc6f9a56c8697dfe623018c6118f5534d4d9ab1 Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio.traversaro@iit.it>
Date: Tue, 13 Dec 2022 17:10:32 +0100
Subject: [PATCH] unvendor_patch

---
 MANIFEST.in                   |  9 -------
 WORKSPACE                     | 17 +++++-------
 bazel/python_headers.BUILD    |  4 ++-
 bazel/python_headers.BUILD.in | 26 ++++++++++++++++++
 bazel/system_absl.BUILD       | 22 +++++++++++++++
 bazel/system_pybind11.BUILD   | 23 ++++++++++++++++
 labmaze/cc/BUILD              |  4 +--
 setup.py                      | 51 ++++++++++++++++++++++++++++++++---
 8 files changed, 130 insertions(+), 26 deletions(-)
 delete mode 100644 MANIFEST.in
 create mode 100644 bazel/python_headers.BUILD.in
 create mode 100644 bazel/system_absl.BUILD
 create mode 100644 bazel/system_pybind11.BUILD

diff --git a/MANIFEST.in b/MANIFEST.in
deleted file mode 100644
index c29e970..0000000
--- a/MANIFEST.in
+++ /dev/null
@@ -1,9 +0,0 @@
-include AUTHORS
-include LICENSE
-include WORKSPACE
-include CONTRIBUTING.md
-include README.md
-recursive-include . *BUILD
-recursive-include . *.bzl
-recursive-include . *.h
-recursive-include . *.cc
diff --git a/WORKSPACE b/WORKSPACE
index b997d5d..3abc88f 100644
--- a/WORKSPACE
+++ b/WORKSPACE
@@ -24,11 +24,10 @@ http_archive(
     url = "https://github.com/bazelbuild/bazel-skylib/archive/1.3.0.zip",
 )
 
-http_archive(
+new_local_repository(
     name = "com_google_absl",
-    sha256 = "54707f411cb62a26a776dad5fd60829098c181700edcd022ea5c2ca49e9b7ef1",
-    strip_prefix = "abseil-cpp-20220623.1",
-    url = "https://github.com/abseil/abseil-cpp/archive/20220623.1.zip",
+    path = "/home/traversaro/mambaforge/envs/labmazedev/include",  # absl placeholder
+    build_file = "@//bazel:system_absl.BUILD"
 )
 
 http_archive(
@@ -38,17 +37,15 @@ http_archive(
     url = "https://github.com/google/googletest/archive/release-1.12.1.zip",
 )
 
-http_archive(
+new_local_repository(
     name = "pybind11",
-    build_file = "@//bazel:pybind11.BUILD",
-    sha256 = "fcf94065efcfd0a7a828bacf118fa11c43f6390d0c805e3e6342ac119f2e9976",
-    strip_prefix = "pybind11-2.10.1",
-    url = "https://github.com/pybind/pybind11/archive/v2.10.1.zip",
+    path = "/home/traversaro/mambaforge/envs/labmazedev/include",  # pybind11 placeholder
+    build_file = "@//bazel:system_pybind11.BUILD"
 )
 
 new_local_repository(
     name = "python_headers",
-    path = "/usr/include/python3.7",  # May be overwritten by setup.py.
+    path = "/home/traversaro/mambaforge/envs/labmazedev",  # May be overwritten by setup.py.
     build_file = "@//bazel:python_headers.BUILD"
 )
 
diff --git a/bazel/python_headers.BUILD b/bazel/python_headers.BUILD
index c5047f1..d97d652 100644
--- a/bazel/python_headers.BUILD
+++ b/bazel/python_headers.BUILD
@@ -18,7 +18,9 @@
 
 cc_library(
     name = "python_headers",
-    hdrs = glob(["**/*.h"]),
+    hdrs = glob(["include/python3.11/**/*.h"]),
+    strip_include_prefix = "include/python3.11",
+    
     includes = ["."],
     visibility = ["//visibility:public"],
 )
diff --git a/bazel/python_headers.BUILD.in b/bazel/python_headers.BUILD.in
new file mode 100644
index 0000000..08775a8
--- /dev/null
+++ b/bazel/python_headers.BUILD.in
@@ -0,0 +1,26 @@
+# Copyright 2019 DeepMind Technologies Limited.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ============================================================================
+#
+# Description:
+#   Build rule for Python headers.
+
+cc_library(
+    name = "python_headers",
+    hdrs = glob(["@INCLUDE_DIRECTORIES_PLACEHOLDER@/**/*.h"]),
+    strip_include_prefix = "@INCLUDE_DIRECTORIES_PLACEHOLDER@",
+    @LINK_LIBRARY_LINE_PLACEHOLDER@
+    includes = ["."],
+    visibility = ["//visibility:public"],
+)
diff --git a/bazel/system_absl.BUILD b/bazel/system_absl.BUILD
new file mode 100644
index 0000000..a51eac3
--- /dev/null
+++ b/bazel/system_absl.BUILD
@@ -0,0 +1,22 @@
+# Copyright 2019 DeepMind Technologies Limited.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ============================================================================
+#
+
+cc_library(
+    name = "com_google_absl",
+    hdrs = glob(["**/*.h"]),
+    includes = ["."],
+    visibility = ["//visibility:public"],
+)
diff --git a/bazel/system_pybind11.BUILD b/bazel/system_pybind11.BUILD
new file mode 100644
index 0000000..f3c1a44
--- /dev/null
+++ b/bazel/system_pybind11.BUILD
@@ -0,0 +1,23 @@
+# Copyright 2019 DeepMind Technologies Limited.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#    http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+# ============================================================================
+#
+
+cc_library(
+    name = "pybind11",
+    hdrs = glob(["**/*.h"]),
+    includes = ["."],
+    visibility = ["//visibility:public"],
+    deps = ["@python_headers"],
+)
diff --git a/labmaze/cc/BUILD b/labmaze/cc/BUILD
index 7b42d57..98dfb1b 100644
--- a/labmaze/cc/BUILD
+++ b/labmaze/cc/BUILD
@@ -54,7 +54,7 @@ cc_library(
     hdrs = ["char_grid.h"],
     deps = [
         ":logging",
-        "@com_google_absl//absl/strings",
+        "@com_google_absl",
     ],
 )
 
@@ -95,7 +95,7 @@ cc_library(
     deps = [
         ":algorithm",
         ":text_maze",
-        "@com_google_absl//absl/strings",
+        "@com_google_absl",
     ],
 )
 
diff --git a/setup.py b/setup.py
index 62053ea..51f026b 100644
--- a/setup.py
+++ b/setup.py
@@ -40,6 +40,12 @@
 WORKSPACE_PYTHON_HEADERS_PATTERN = re.compile(
     r'(?<=path = ").*(?=",  # May be overwritten by setup\.py\.)')
 
+WORKSPACE_PYBIND11_HEADERS_PATTERN = re.compile(
+    r'(?<=path = ").*(?=",  # pybind11 placeholder)')
+
+WORKSPACE_ABSL_HEADERS_PATTERN = re.compile(
+    r'(?<=path = ").*(?=",  # absl placeholder)')
+
 IS_WINDOWS = sys.platform.startswith('win')
 
 
@@ -68,10 +74,47 @@ def bazel_build(self, ext):
       workspace_contents = f.read()
 
     with open('WORKSPACE', 'w') as f:
-      f.write(WORKSPACE_PYTHON_HEADERS_PATTERN.sub(
-          distutils.sysconfig.get_python_inc().replace(os.path.sep,
-                                                       posixpath.sep),
-          workspace_contents))
+      workspace_contents = WORKSPACE_PYTHON_HEADERS_PATTERN.sub(
+          os.environ['PREFIX'].replace(os.path.sep, posixpath.sep),
+          workspace_contents)
+
+      if IS_WINDOWS:
+        include_dir = os.environ['LIBRARY_INC'].replace(os.path.sep,
+                                                       posixpath.sep)
+      else:
+        include_dir = os.path.join(os.environ['PREFIX'],'include')
+
+
+      workspace_contents = WORKSPACE_PYBIND11_HEADERS_PATTERN.sub(
+          include_dir, workspace_contents)
+
+      workspace_contents = WORKSPACE_ABSL_HEADERS_PATTERN.sub(
+          include_dir, workspace_contents)
+
+      f.write(workspace_contents)
+
+    with open('bazel/python_headers.BUILD.in') as f:
+      python_build_contents = f.read()
+
+    with open('bazel/python_headers.BUILD', 'w') as f:
+
+      python_build_contents = python_build_contents.replace(
+          "@INCLUDE_DIRECTORIES_PLACEHOLDER@",
+          os.path.relpath(distutils.sysconfig.get_python_inc(), os.environ['PREFIX']))
+
+      # The only platform that needs an explicit link to Python libraries is macOS
+      if sys.platform.startswith('darwin'):
+          link_library_line = f"srcs = [\"lib/libpython{sys.version_info[0]}.{sys.version_info[1]}.dylib\"],"
+      else:
+          link_library_line = ""
+
+      python_build_contents = python_build_contents.replace(
+          "@LINK_LIBRARY_LINE_PLACEHOLDER@",
+          link_library_line)
+
+      f.write(python_build_contents)
+
+
 
     if not os.path.exists(self.build_temp):
       os.makedirs(self.build_temp)

