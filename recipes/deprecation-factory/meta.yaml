# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 13 is conviniet
# when copying and paster from another recipe, but not really needed.
{% set name = "deprecation-factory" %}
{% set version = "0.1.4" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/deprecation_factory-{{ version }}.tar.gz
  # Get from pypi next to download files
  sha256: 8bfa75fc5e9d914ca5346c0d3027997fdf89aaaec1509dc75877c834f738e39f

build:
  # Uncomment the following line if the package is pure python and the recipe is exactly the same for all platforms.
  number: 0
  skip: True  # [py<35]
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"

requirements:
  host:
    - python
    - pip
    - setuptools
  run:
    - python

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  requires:
    - pytest
    - numpydoc
  imports:
    - deprecation_factory
  commands:
    - pytest --pyargs deprecation_factory

about:
  home: https://github.com/hmaarrfk/deprecation_factory
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: 'Automatically write boilerplate code for many kinds of deperecations through python decorators.'

  # The remaining entries in this section are optional, but recommended
  description: |
    Breaking things is important! Breaking other's things is just mean!

    This Python3 library provides decorators to avoid writing boilerplate code for many kinds of
    deprecations. Currently, we support deprecating the default value of `kwargs`
  doc_url: https://deprecation-factory.readthedocs.io/en/latest/?badge=latest
  dev_url: https://github.com/hmaarrfk/deprecation_factory

extra:
  recipe-maintainers:
    - hmaarrfk
