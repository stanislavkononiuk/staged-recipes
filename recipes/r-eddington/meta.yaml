{% set version = '2.1.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-eddington
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/eddington_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/eddington/eddington_{{ version }}.tar.gz
  sha256: 669dfb94096cfc5aad66494f5cc3e1ca29640fc4e269198c9136c75dbbd8086d

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-rcpp
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-rcpp

test:
  commands:
    - $R -e "library('eddington')"           # [not win]
    - "\"%R%\" -e \"library('eddington')\""  # [win]

about:
  home: https://github.com/pegeler/eddington2
  license: GPL-2.0-or-later
  summary: Compute a cyclist's Eddington number, including efficiently computing cumulative E
    over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling>
    is the maximum number satisfying the condition such that a cyclist has ridden E
    miles or greater in E days. The algorithm in this package is an improvement over
    the conventional approach because both summary statistics and cumulative statistics
    can be computed in linear time, since it does not require initial sorting of the
    data. These functions may also be used for computing h-indices for authors, a metric
    described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications
    of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>.
  license_family: GPL2
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: eddington
# Title: Compute a Cyclist's Eddington Number
# Version: 2.1.1
# Authors@R: c( person('Paul', 'Egeler', email = 'paulegeler@gmail.com', role = c('aut','cre')), person('Tashi', 'Reigle', role = 'ctb'))
# Description: Compute a cyclist's Eddington number, including efficiently computing cumulative E over a vector. A cyclist's Eddington number <https://en.wikipedia.org/wiki/Arthur_Eddington#Eddington_number_for_cycling> is the maximum number satisfying the condition such that a cyclist has ridden E miles or greater in E days. The algorithm in this package is an improvement over the conventional approach because both summary statistics and cumulative statistics can be computed in linear time, since it does not require initial sorting of the data. These functions may also be used for computing h-indices for authors, a metric described by Hirsch (2005) <doi:10.1073/pnas.0507655102>. Both are specific applications of computing the side length of a Durfee square <https://en.wikipedia.org/wiki/Durfee_square>.
# License: GPL (>= 2)
# Encoding: UTF-8
# LazyData: true
# Depends: R (>= 3.4.0)
# LinkingTo: Rcpp
# Imports: Rcpp
# Suggests: testthat, knitr, rmarkdown, dplyr
# VignetteBuilder: knitr
# RoxygenNote: 7.1.0
# URL: https://github.com/pegeler/eddington2
# BugReports: https://github.com/pegeler/eddington2/issues
# NeedsCompilation: yes
# Packaged: 2020-03-21 21:42:55 UTC; pwe
# Author: Paul Egeler [aut, cre], Tashi Reigle [ctb]
# Maintainer: Paul Egeler <paulegeler@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-03-24 16:30:05 UTC
