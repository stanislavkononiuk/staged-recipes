From 2c04c9255e92bd2dd49bf5cf6abb78531f7b52d5 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 10:47:19 +0100
Subject: [PATCH 01/11] lalinference.bayespputils: corrected indentation

---
 .../python/lalinference/bayespputils.py       | 76 +++++++++----------
 1 file changed, 38 insertions(+), 38 deletions(-)

diff --git a/python/lalinference/bayespputils.py b/python/lalinference/bayespputils.py
index f460b84130..49fba00310 100644
--- a/python/lalinference/bayespputils.py
+++ b/python/lalinference/bayespputils.py
@@ -901,7 +901,7 @@ class Posterior(object):
           eta_name='eta'
 
       if 'mass1' in pos.names and 'mass2' in pos.names :
-	  pos.append_mapping(('m1','m2'),lambda x,y:(x,y) ,('mass1','mass2'))
+          pos.append_mapping(('m1','m2'),lambda x,y:(x,y) ,('mass1','mass2'))
 
       if (mchirp_name in pos.names and eta_name in pos.names) and \
       ('mass1' not in pos.names or 'm1' not in pos.names) and \
@@ -928,7 +928,7 @@ class Posterior(object):
 
       my_ifos=['h1','l1','v1']
       for ifo1,ifo2 in combinations(my_ifos,2):
-      	p1=ifo1+'_cplx_snr_arg'
+        p1=ifo1+'_cplx_snr_arg'
         p2=ifo2+'_cplx_snr_arg'
         if p1 in pos.names and p2 in pos.names:
           delta=np.mod(pos[p1].samples - pos[p2].samples + np.pi ,2.0*np.pi)-np.pi
@@ -4380,7 +4380,7 @@ def plot_two_param_kde_greedy_levels(posteriors_by_name,plot2DkdeParams,levels,c
     for level in levels:
       ilevel = int(Npts*level + 0.5)
       if ilevel >= Npts:
-	ilevel = Npts-1
+        ilevel = Npts-1
       zvalues.append(densort[ilevel])
     CS=plt.contour(x, y, z, zvalues,colors=[colors_by_name[name]],linestyles=line_styles )
     CSlst.append(CS)
@@ -4389,15 +4389,15 @@ def plot_two_param_kde_greedy_levels(posteriors_by_name,plot2DkdeParams,levels,c
       plt.plot([par1_injvalue],[par2_injvalue],'b*',scalex=False,scaley=False,markersize=12)
 
     if par_trigvalues1 is not None and par_trigvalues2 is not None:
-	par1IFOs = set([IFO for IFO in par_trigvalues1.keys()])
-	par2IFOs = set([IFO for IFO in par_trigvalues2.keys()])
-	IFOs = par1IFOs.intersection(par2IFOs)
-	for IFO in IFOs:
-	  if IFO=='H1': color = 'r'
-	  elif IFO=='L1': color = 'g'
-	  elif IFO=='V1': color = 'm'
-	  else: color = 'c'
-	plt.plot([par_trigvalues1[IFO]],[par_trigvalues2[IFO]],color=color,marker='o',scalex=False,scaley=False)
+        par1IFOs = set([IFO for IFO in par_trigvalues1.keys()])
+        par2IFOs = set([IFO for IFO in par_trigvalues2.keys()])
+        IFOs = par1IFOs.intersection(par2IFOs)
+        for IFO in IFOs:
+          if IFO=='H1': color = 'r'
+          elif IFO=='L1': color = 'g'
+          elif IFO=='V1': color = 'm'
+          else: color = 'c'
+        plt.plot([par_trigvalues1[IFO]],[par_trigvalues2[IFO]],color=color,marker='o',scalex=False,scaley=False)
 
   plt.xlabel(plot_label(par1_name))
   plt.ylabel(plot_label(par2_name))
@@ -4526,10 +4526,10 @@ def plot_two_param_kde(posterior,plot2DkdeParams):
     for level in levels:
       ilevel = int(Npts*level + 0.5)
       if ilevel >= Npts:
-	ilevel = Npts-1
-	zvalues.append(densort[ilevel])
+        ilevel = Npts-1
+        zvalues.append(densort[ilevel])
 
-	pp.contour(XS, YS, ZS, zvalues)
+        pp.contour(XS, YS, ZS, zvalues)
 
     asp=xax.ptp()/yax.ptp()
 #    if(asp<0.8 or asp > 1.6): asp=1.4
@@ -4848,16 +4848,16 @@ def plot_two_param_greedy_bins_contour(posteriors_by_name,greedy2Params,confiden
             plt.plot([par2_trigvalues[IFO]],[par1_trigvalues[IFO]],color=color,marker='*',scalex=False,scaley=False)
         CSlst.append(CS)
 
-    	Nchars=max(map(lambda d:len(majorFormatterX.format_data(d)),axes.get_xticks()))
-    	if Nchars>8:
-      		Nticks=3
-    	elif Nchars>5:
-      		Nticks=4
-    	elif Nchars>4:
-      		Nticks=5
-    	else:
-      		Nticks=6
-    	locatorX=matplotlib.ticker.MaxNLocator(nbins=Nticks-1)
+        Nchars=max(map(lambda d:len(majorFormatterX.format_data(d)),axes.get_xticks()))
+        if Nchars>8:
+            Nticks=3
+        elif Nchars>5:
+            Nticks=4
+        elif Nchars>4:
+            Nticks=5
+        else:
+            Nticks=6
+        locatorX=matplotlib.ticker.MaxNLocator(nbins=Nticks-1)
         if par2_name=='rightascension' or par2_name=='ra':
             (ramin,ramax)=plt.xlim()
             locatorX=RALocator(min=ramin,max=ramax)
@@ -4879,8 +4879,8 @@ def plot_two_param_greedy_bins_contour(posteriors_by_name,greedy2Params,confiden
             axes.yaxis.set_major_locator(locatorY)
 
         axes.yaxis.set_major_formatter(majorFormatterY)
-    	#locatorX.view_limits(bins[0],bins[-1])
-    	axes.xaxis.set_major_locator(locatorX)
+        #locatorX.view_limits(bins[0],bins[-1])
+        axes.xaxis.set_major_locator(locatorX)
 
     #plt.title("%s-%s confidence contours (greedy binning)"%(par1_name,par2_name)) # add a title
     plt.xlabel(plot_label(ax2_name))
@@ -6112,11 +6112,11 @@ class PEOutputParser(object):
         [headerfile,delimiter]=info
 
         if headerfile==None:
-        	formatstr=infile.readline().lstrip()
+            formatstr=infile.readline().lstrip()
         else:
-        	hf=open(headerfile,'r')
-        	formatstr=hf.readline().lstrip()
-        	hf.close()
+            hf=open(headerfile,'r')
+            formatstr=hf.readline().lstrip()
+            hf.close()
 
         formatstr=formatstr.replace('#','')
         formatstr=formatstr.replace('"','')
@@ -6444,7 +6444,7 @@ def plot_waveform(pos=None,siminspiral=None,event=0,path=None,ifos=['H1','L1','V
   # time and freq domain strain:
   segStart=100000000
   strainT=CreateREAL8TimeSeries("strainT",segStart,0.0,1.0/srate,DimensionlessUnit,int(length));
-  strainF= CreateCOMPLEX16FrequencySeries("strainF",segStart,	0.0,	deltaF,	DimensionlessUnit,int(length/2. +1));
+  strainF= CreateCOMPLEX16FrequencySeries("strainF",segStart, 0.0, deltaF, DimensionlessUnit,int(length/2. +1));
 
   f_min=25 # hardcoded default (may be changed below)
   f_ref=100 # hardcoded default (may be changed below)
@@ -6602,8 +6602,8 @@ def plot_waveform(pos=None,siminspiral=None,event=0,path=None,ifos=['H1','L1','V
       if 'phi_orb' in pos.names:
         phiRef=pos['phi_orb'].samples[which][0]
       elif 'phase_maxl' in pos.names:
-		phiRef=pos['phase_maxl'].samples[which][0]
-		print('INFO: phi_orb not estimated, using maximum likelihood value')
+          phiRef=pos['phase_maxl'].samples[which][0]
+          print('INFO: phi_orb not estimated, using maximum likelihood value')
       else:
         print('WARNING: phi_orb not found in posterior files. Defaulting to 0.0 which is probably *not* what you want\n')
         phiRef=0.0
@@ -7637,10 +7637,10 @@ def make_1d_table(html,legend,label,pos,pars,noacf,GreedyRes,onepdfdir,sampsdir,
             plt.close(acffig)
 
         if not noacf:
-	  if not acfail:
-	    acfhtml='<td width="30%"><img width="100%" src="1Dsamps/'+figname.replace('.png', '_acf.png')+'"/></td>'
-	  else:
-	    acfhtml='<td>ACF generation failed!</td>'
+          if not acfail:
+            acfhtml='<td width="30%"><img width="100%" src="1Dsamps/'+figname.replace('.png', '_acf.png')+'"/></td>'
+          else:
+            acfhtml='<td>ACF generation failed!</td>'
           html_ompdf_write+='<tr><td width="30%"><img width="100%" src="1Dpdf/'+figname+'"/></td><td width="30%"><img width="100%" src="1Dsamps/'+figname.replace('.png','_samps.png')+'"/></td>'+acfhtml+'</tr>'
         else:
             html_ompdf_write+='<tr><td width="30%"><img width="100%" src="1Dpdf/'+figname+'"/></td><td width="30%"><img width="100%" src="1Dsamps/'+figname.replace('.png','_samps.png')+'"/></td></tr>'
-- 
2.18.0


From 70642863745db7d4176a66ee4f688e35ca78e8a9 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 10:47:39 +0100
Subject: [PATCH 02/11] lalinference.bayespputils: use six.u for unicode

---
 python/lalinference/bayespputils.py | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/python/lalinference/bayespputils.py b/python/lalinference/bayespputils.py
index 49fba00310..3b878b38df 100644
--- a/python/lalinference/bayespputils.py
+++ b/python/lalinference/bayespputils.py
@@ -62,6 +62,7 @@ import socket
 from itertools import combinations
 from lalinference import LALInferenceHDF5PosteriorSamplesDatasetName as posterior_grp_name
 import re
+import six
 
 try:
     import lalsimulation as lalsim
@@ -4185,9 +4186,9 @@ def getRAString(radians,accuracy='auto'):
     if mins>=59.5:
         mins=mins-60
         hours=hours+1
-    if accuracy=='hour': return ur'%ih'%(hours)
-    if accuracy=='min': return ur'%ih%im'%(hours,mins)
-    if accuracy=='sec': return ur'%ih%im%2.0fs'%(hours,mins,secs)
+    if accuracy=='hour': return six.u(r'%ih'%(hours))
+    if accuracy=='min': return six.u(r'%ih%im'%(hours,mins))
+    if accuracy=='sec': return six.u(r'%ih%im%2.0fs'%(hours,mins,secs))
     else:
         if abs(fmod(secs,60.0))>=0.5: return(getRAString(radians,accuracy='sec'))
         if abs(fmod(mins,60.0))>=0.5: return(getRAString(radians,accuracy='min'))
@@ -4218,9 +4219,9 @@ def getDecString(radians,accuracy='auto'):
     #    deg=deg+1
     if (accuracy=='arcmin' or accuracy=='deg') and secs>30: mins=mins+1
     if accuracy=='deg' and mins>30: deg=deg+1
-    if accuracy=='deg': return ur'%i'%(sign*deg)+degsymb
-    if accuracy=='arcmin': return ur'%i%s%i%s'%(sign*deg,degsymb,mins,minsymb)
-    if accuracy=='arcsec': return ur'%i%s%i%s%2.0f%s'%(sign*deg,degsymb,mins,minsymb,secs,secsymb)
+    if accuracy=='deg': return six.u(r'%i'%(sign*deg)+degsymb)
+    if accuracy=='arcmin': return six.u(r'%i%s%i%s'%(sign*deg,degsymb,mins,minsymb))
+    if accuracy=='arcsec': return six.u(r'%i%s%i%s%2.0f%s'%(sign*deg,degsymb,mins,minsymb,secs,secsymb))
     else:
     #    if abs(fmod(secs,60.0))>=0.5 and abs(fmod(secs,60)-60)>=0.5 : return(getDecString(sign*radians,accuracy='arcsec'))
     #    if abs(fmod(mins,60.0))>=0.5 and abs(fmod(mins,60)-60)>=0.5: return(getDecString(sign*radians,accuracy='arcmin'))
-- 
2.18.0


From dfddcca6bba678997eebcd6d9a71d4660710bcbb Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 11:51:27 +0100
Subject: [PATCH 03/11] lalinference.bayespputils: don't use StandardError

it was removed for python3
---
 python/lalinference/bayespputils.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/python/lalinference/bayespputils.py b/python/lalinference/bayespputils.py
index 3b878b38df..5d62a9c72d 100644
--- a/python/lalinference/bayespputils.py
+++ b/python/lalinference/bayespputils.py
@@ -5315,7 +5315,7 @@ def burnin(data,spin_flag,deltaLogP,outputfile):
     return pos,bayesfactor
 
 
-class ACLError(StandardError):
+class ACLError(Exception):
     def __init__(self, *args):
         super(ACLError, self).__init__(*args)
 
-- 
2.18.0


From 2a8f4f3064550808cb02975d77dbdb1ae4999f56 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 12:16:47 +0100
Subject: [PATCH 04/11] lalinference.bayestar.moc: fixed NameError

---
 python/lalinference/bayestar/moc.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/python/lalinference/bayestar/moc.py b/python/lalinference/bayestar/moc.py
index 41d591f004..e1c51a445e 100644
--- a/python/lalinference/bayestar/moc.py
+++ b/python/lalinference/bayestar/moc.py
@@ -1,6 +1,6 @@
 import warnings
 from .. import distance
+from ..moc import __all__
 from ..moc import *
-__all__ = moc.__all__
 from lalinference.bayestar.deprecation import warn
 warn('ligo.skymap.moc')
-- 
2.18.0


From 7d8a017270540b726d63da40390d2a78b5d6b992 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 12:37:46 +0100
Subject: [PATCH 05/11] lalinference.imrtgr.imrtgrutils: use relative import

for nrutils
---
 python/lalinference/imrtgr/imrtgrutils.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/python/lalinference/imrtgr/imrtgrutils.py b/python/lalinference/imrtgr/imrtgrutils.py
index 6b12f3906f..c32fa8fee8 100644
--- a/python/lalinference/imrtgr/imrtgrutils.py
+++ b/python/lalinference/imrtgr/imrtgrutils.py
@@ -11,7 +11,7 @@ import scipy.ndimage.filters as filter
 from multiprocessing import Pool
 from functools import partial
 import time 
-import nrutils as nr
+from . import nrutils as nr
 
 """ calculate the mass and spin of the final black hole using an NR-inspired fitting formula """
 def calc_final_mass_spin(m1, m2, chi1, chi2, chi1z, chi2z, phi12, fit_formula):
-- 
2.18.0


From 662100d401783ba477712752bc607037b02473b6 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 13:09:09 +0100
Subject: [PATCH 06/11] lalifnerence.imrtgr.pneqns: fixed inconsistent
 indentation

---
 .../python/lalinference/imrtgr/pneqns.py      | 80 +++++++++----------
 1 file changed, 40 insertions(+), 40 deletions(-)

diff --git a/python/lalinference/imrtgr/pneqns.py b/python/lalinference/imrtgr/pneqns.py
index f98c8f00f9..217497a9b2 100644
--- a/python/lalinference/imrtgr/pneqns.py
+++ b/python/lalinference/imrtgr/pneqns.py
@@ -94,8 +94,8 @@ def precession_eqns(t, y_vec, m1, m2):
 	Lmag = (eta*m**2./v)*(1.+(1.5+eta/6.)*v**2.)
 
 	# precession freqs. Eqs.(3.8) of Ajith (2011)
-        Omega1= Omega(v, m1, m2, S1, S2, Ln)
-        Omega2= Omega(v, m2, m1, S2, S1, Ln)
+	Omega1= Omega(v, m1, m2, S1, S2, Ln)
+	Omega2= Omega(v, m2, m1, S2, S1, Ln)
 
 	# spin precession eqns. Eqs.(3.7) of Ajith (2011)
 	dS1_dt = np.cross(Omega1, S1)
@@ -110,7 +110,7 @@ def precession_eqns(t, y_vec, m1, m2):
 	return  [dv_dt, dS1_dt[0], dS1_dt[1], dS1_dt[2], dS2_dt[0], dS2_dt[1], dS2_dt[2], dL_dt[0], dL_dt[1], dL_dt[2]]
 
 def evolve_spins_dt(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, Lny, Lnz, v_final, dt):
-	""" evolve the spins and orb ang momentum according to the PN precession eqns."""
+        """ evolve the spins and orb ang momentum according to the PN precession eqns."""
 
         # Set maximum dv/dt for stopping condition
 
@@ -144,32 +144,32 @@ def evolve_spins_dt(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, L
         if dt<0:
             raise ValueError("ERROR: time step is negative")
 
-	m1_sqr = m1*m1
-	m2_sqr = m2*m2
+        m1_sqr = m1*m1
+        m2_sqr = m2*m2
 
-	# pack the inputs
-	y_vec0 = [v0, chi1x*m1_sqr, chi1y*m1_sqr, chi1z*m1_sqr, chi2x*m2_sqr, chi2y*m2_sqr, chi2z*m2_sqr, Lnx, Lny, Lnz]
-	t0 = 0.
+        # pack the inputs
+        y_vec0 = [v0, chi1x*m1_sqr, chi1y*m1_sqr, chi1z*m1_sqr, chi2x*m2_sqr, chi2y*m2_sqr, chi2z*m2_sqr, Lnx, Lny, Lnz]
+        t0 = 0.
 
         # Defining chi_eff and Newtonian chirp time. T_MAX is set to twice of chirp time.
         chi_eff = lalsim.SimInspiralTaylorF2ReducedSpinComputeChi(m1, m2, chi1z, chi2z)
-	T_MAX = 2.* lalsim.SimInspiralTaylorF2ReducedSpinChirpTime(v0**3./(PI*(m1+m2)*MTSUN_SI), m1*MSUN_SI, m2*MSUN_SI, chi_eff, 0)/MTSUN_SI
-	R_TOL = 1e-6
-	A_TOL = 1e-6
+        T_MAX = 2.* lalsim.SimInspiralTaylorF2ReducedSpinChirpTime(v0**3./(PI*(m1+m2)*MTSUN_SI), m1*MSUN_SI, m2*MSUN_SI, chi_eff, 0)/MTSUN_SI
+        R_TOL = 1e-6
+        A_TOL = 1e-6
 
         #print("T_MAX = %f"%(T_MAX))
 
-	# initialize the ODE solver
-	backend = "dopri5"
-	solver = ode(precession_eqns)
-	solver.set_integrator(backend, atol=R_TOL, rtol=R_TOL)  # nsteps=1
-	solver.set_initial_value(y_vec0, t0)
-	solver.set_f_params(m1, m2)
+        # initialize the ODE solver
+        backend = "dopri5"
+        solver = ode(precession_eqns)
+        solver.set_integrator(backend, atol=R_TOL, rtol=R_TOL)  # nsteps=1
+        solver.set_initial_value(y_vec0, t0)
+        solver.set_f_params(m1, m2)
 
-	y_result = []
-	t_output = []
-	y_result.append(y_vec0)
-	t_output.append(t0)
+        y_result = []
+        t_output = []
+        y_result.append(y_vec0)
+        t_output.append(t0)
 
         # Set diagnostic quantities to some initial values that won't trigger any stopping conditions
 
@@ -177,21 +177,21 @@ def evolve_spins_dt(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, L
         dvdt_current = 1.e-5
         Lnorm_current = 1.
 
-	# evolve the eqns
-	while solver.successful() and solver.t < 2.*T_MAX and v_current <= v_final and dvdt_current > 0. and dvdt_current < dvdt_max and abs(Lnorm_current - 1.) < delta_Lnorm_max:
+        # evolve the eqns
+        while solver.successful() and solver.t < 2.*T_MAX and v_current <= v_final and dvdt_current > 0. and dvdt_current < dvdt_max and abs(Lnorm_current - 1.) < delta_Lnorm_max:
 
-		solver.integrate(solver.t + dt, step=1)
-		y_result.append(solver.y)
-		t_output.append(solver.t)
+                solver.integrate(solver.t + dt, step=1)
+                y_result.append(solver.y)
+                t_output.append(solver.t)
 
-		#print '... t = ', solver.t, ' y = ', solver.y
+                #print '... t = ', solver.t, ' y = ', solver.y
 
                 v_current = solver.y[V_POS]
                 dvdt_current = precession_eqns(solver.t,solver.y,m1,m2)[V_POS]
                 Lnorm_current = np.sqrt((solver.y[LNX_POS])**2+(solver.y[LNY_POS])**2+(solver.y[LNZ_POS])**2)
 
-	Y = np.array(y_result)
-	t = np.array(t_output)
+        Y = np.array(y_result)
+        t = np.array(t_output)
 
         # Check if the integration stopped more than delta_vf_max away from v_final. If so, check if this occurred because dv/dt became larger than dvdt_max or negative. In this case, print a warning and remove the offending data, else raise an error
 
@@ -207,23 +207,23 @@ def evolve_spins_dt(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, L
         if abs(Lnorm_current - 1.) >= delta_Lnorm_max:
             raise ValueError("norm of Ln is more than {0:e} different from 1, with distance {1:e}".format(delta_Lnorm_max, abs(Lnorm_current - 1.)))
 
-	v_v, S1x_v, S1y_v, S1z_v, S2x_v, S2y_v, S2z_v, Lx_v, Ly_v, Lz_v  = Y.T
+        v_v, S1x_v, S1y_v, S1z_v, S2x_v, S2y_v, S2z_v, Lx_v, Ly_v, Lz_v  = Y.T
 
-	return v_v, S1x_v/m1_sqr, S1y_v/m1_sqr, S1z_v/m1_sqr, S2x_v/m2_sqr, S2y_v/m2_sqr, S2z_v/m2_sqr, Lx_v, Ly_v, Lz_v
+        return v_v, S1x_v/m1_sqr, S1y_v/m1_sqr, S1z_v/m1_sqr, S2x_v/m2_sqr, S2y_v/m2_sqr, S2z_v/m2_sqr, Lx_v, Ly_v, Lz_v
 
 
 def find_tilts_and_phi12_at_freq(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, Lny, Lnz, v_final, dt):
         """ given the spins and ang momentum at a given frequency, find the tilt and in-plane spin angles at a later frequency """
 
-	print("v0 = %f, m1 = %f, m2 = %f, chi1x = %f, chi1y = %f, chi1z = %f, chi2x = %f, chi2y = %f, chi2z = %f"%(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z))
+        print("v0 = %f, m1 = %f, m2 = %f, chi1x = %f, chi1y = %f, chi1z = %f, chi2x = %f, chi2y = %f, chi2z = %f"%(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z))
 
         # evolve the spins
         v_v, chi1x_v, chi1y_v, chi1z_v, chi2x_v, chi2y_v, chi2z_v, Lnx_v, Lny_v, Lnz_v = evolve_spins_dt(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y, chi2z, Lnx, Lny, Lnz, v_final, dt)
 
-	chi1_v = np.array([chi1x_v[-1], chi1y_v[-1], chi1z_v[-1]])
-	chi2_v = np.array([chi2x_v[-1], chi2y_v[-1], chi2z_v[-1]])
+        chi1_v = np.array([chi1x_v[-1], chi1y_v[-1], chi1z_v[-1]])
+        chi2_v = np.array([chi2x_v[-1], chi2y_v[-1], chi2z_v[-1]])
 
-	Ln_v = np.array([Lnx_v[-1], Lny_v[-1], Lnz_v[-1]])
+        Ln_v = np.array([Lnx_v[-1], Lny_v[-1], Lnz_v[-1]])
 
         # norms and normalizing
         chi1_norm = norm(chi1_v)
@@ -235,16 +235,16 @@ def find_tilts_and_phi12_at_freq(v0, m1, m2, chi1x, chi1y, chi1z, chi2x, chi2y,
         chi1dL_v = np.dot(chi1_v, Ln_v)
         chi2dL_v = np.dot(chi2_v, Ln_v)
 
-	# in-plane spins
+        # in-plane spins
 
-	chi1inplane = chi1_v - chi1dL_v*Ln_v
-	chi2inplane = chi2_v - chi2dL_v*Ln_v
+        chi1inplane = chi1_v - chi1dL_v*Ln_v
+        chi2inplane = chi2_v - chi2dL_v*Ln_v
 
         # Defining cosine of tilts and phi12
         cos_tilt1 = chi1dL_v/chi1_norm
         cos_tilt2 = chi2dL_v/chi2_norm
         cos_phi12 = np.dot(chi1inplane,chi2inplane)/(norm(chi1inplane)*norm(chi2inplane))
 
-	print("cos tilt1 = %f, cos tilt2 = %f, cos phi12 = %f"%(cos_tilt1, cos_tilt2, cos_phi12))
+        print("cos tilt1 = %f, cos tilt2 = %f, cos phi12 = %f"%(cos_tilt1, cos_tilt2, cos_phi12))
 
-	return np.arccos(cos_tilt1), np.arccos(cos_tilt2), np.arccos(cos_phi12)
+        return np.arccos(cos_tilt1), np.arccos(cos_tilt2), np.arccos(cos_phi12)
-- 
2.18.0


From c9f1012e2aa4ab2c02348e3c0c7ca14d0c7df2b4 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 13:25:10 +0100
Subject: [PATCH 07/11] lalinference.lalinference_pipe_utils: fixed syntax
 errors

for python3
---
 .../lalinference/lalinference_pipe_utils.py   | 61 +++++++++----------
 1 file changed, 30 insertions(+), 31 deletions(-)

diff --git a/python/lalinference/lalinference_pipe_utils.py b/python/lalinference/lalinference_pipe_utils.py
index 6bd5683e21..41eecb3baa 100644
--- a/python/lalinference/lalinference_pipe_utils.py
+++ b/python/lalinference/lalinference_pipe_utils.py
@@ -237,13 +237,13 @@ def open_pipedown_database(database_filename,tmp_space):
     Open the connection to the pipedown database
     """
     if not os.access(database_filename,os.R_OK):
-	raise Exception('Unable to open input file: %s'%(database_filename))
+        raise Exception('Unable to open input file: %s'%(database_filename))
     from glue.ligolw import dbtables
     import sqlite3
     working_filename=dbtables.get_connection_filename(database_filename,tmp_path=tmp_space)
     connection = sqlite3.connect(working_filename)
     if tmp_space:
-	dbtables.set_temp_store_directory(connection,tmp_space)
+        dbtables.set_temp_store_directory(connection,tmp_space)
     #dbtables.DBTable_set_connection(connection)
     return (connection,working_filename)
 
@@ -273,10 +273,10 @@ def get_zerolag_lloid(database_connection, dumpfile=None, gpsstart=None, gpsend=
 	if min_cfar != -1:
 		get_coincs=get_coincs+' and coinc_inspiral.combined_far > %f'%(min_cfar)
 	db_out=database_connection.cursor().execute(get_coincs)
-    	extra={}
+	extra={}
 	for (sngl_time, ifo, coinc_id, snr, chisq, cfar) in db_out:
-      		coinc_id=int(coinc_id.split(":")[-1])
-	  	if not coinc_id in output.keys():
+		coinc_id=int(coinc_id.split(":")[-1])
+		if not coinc_id in output.keys():
 			output[coinc_id]=Event(trig_time=sngl_time,timeslide_dict={},event_id=int(coinc_id))
 			extra[coinc_id]={}
 		output[coinc_id].timeslides[ifo]=0
@@ -316,10 +316,10 @@ def get_zerolag_pipedown(database_connection, dumpfile=None, gpsstart=None, gpse
 	if min_cfar != -1:
 		get_coincs=get_coincs+' and coinc_inspiral.combined_far > %f'%(min_cfar)
 	db_out=database_connection.cursor().execute(get_coincs)
-    	extra={}
+	extra={}
 	for (sngl_time, ifo, coinc_id, snr, chisq, cfar) in db_out:
-      		coinc_id=int(coinc_id.split(":")[-1])
-	  	if not coinc_id in output.keys():
+		coinc_id=int(coinc_id.split(":")[-1])
+		if not coinc_id in output.keys():
 			output[coinc_id]=Event(trig_time=sngl_time,timeslide_dict={},event_id=int(coinc_id))
 			extra[coinc_id]={}
 		output[coinc_id].timeslides[ifo]=0
@@ -363,9 +363,9 @@ def get_timeslides_pipedown(database_connection, dumpfile=None, gpsstart=None, g
 	if max_cfar!=-1:
 		get_coincs=get_coincs+joinstr+' coinc_inspiral.combined_far < %f'%(max_cfar)
 	db_out=database_connection.cursor().execute(get_coincs)
-        # Timeslide functionality requires obsolete pylal - will be removed
-        import pylal
-        from pylal import SnglInspiralUtils
+	# Timeslide functionality requires obsolete pylal - will be removed
+	import pylal
+	from pylal import SnglInspiralUtils
 	extra={}
 	for (sngl_time, slide, ifo, coinc_id, snr, chisq, cfar) in db_out:
 		coinc_id=int(coinc_id.split(":")[-1])
@@ -426,10 +426,10 @@ def scan_timefile(timefile):
     timefilehandle=open(timefile,'r')
     for time in timefilehandle:
       if not p.match(time):
-	continue
+        continue
       if float(time) in times:
-	print('Skipping duplicate time %s'%(time))
-	continue
+        print('Skipping duplicate time %s'%(time))
+        continue
       print('Read time %s'%(time))
       times.append(float(time))
     timefilehandle.close()
@@ -575,7 +575,7 @@ def get_roq_mchirp_priors(path, roq_paths, roq_params, key, gid=None,sim_inspira
   elif sim_inspiral is not None:
         trigger_mchirp = sim_inspiral.mchirp
   else:
-	trigger_mchirp = None
+        trigger_mchirp = None
 
   return mc_priors, trigger_mchirp
 
@@ -1038,13 +1038,13 @@ class LALInferencePipelineDAG(pipeline.CondorDAG):
       else:
         mincfar=-1
       if self.config.has_option('input','max-cfar'):
-	maxcfar=self.config.getfloat('input','max-cfar')
+        maxcfar=self.config.getfloat('input','max-cfar')
       else:
-	maxcfar=-1
+        maxcfar=-1
       if self.config.get('input','timeslides').lower()=='true':
-	events=get_timeslides_pipedown(db_connection, gpsstart=gpsstart, gpsend=gpsend,dumpfile=timeslidedump,max_cfar=maxcfar)
+        events=get_timeslides_pipedown(db_connection, gpsstart=gpsstart, gpsend=gpsend,dumpfile=timeslidedump,max_cfar=maxcfar)
       else:
-	events=queryfunc(db_connection, gpsstart=gpsstart, gpsend=gpsend, dumpfile=timeslidedump,max_cfar=maxcfar,min_cfar=mincfar)
+        events=queryfunc(db_connection, gpsstart=gpsstart, gpsend=gpsend, dumpfile=timeslidedump,max_cfar=maxcfar,min_cfar=mincfar)
     if(selected_events is not None):
         used_events=[]
         for i in selected_events:
@@ -1278,17 +1278,17 @@ class LALInferencePipelineDAG(pipeline.CondorDAG):
     os.chdir(segmentdir)
     for ifo in self.ifos:
       (segFileName,dqVetoes)=inspiralutils.findSegmentsToAnalyze(self.config, ifo, self.veto_categories, generate_segments=True,\
-	use_available_data=self.use_available_data , data_quality_vetoes=False)
+        use_available_data=self.use_available_data , data_quality_vetoes=False)
       self.dqVetoes=dqVetoes
       segfile=open(segFileName)
       segs=segmentsUtils.fromsegwizard(segfile)
       segs.coalesce()
       segfile.close()
       for seg in segs:
-	    sciseg=pipeline.ScienceSegment((segs.index(seg),seg[0],seg[1],seg[1]-seg[0]))
-	    df_node=self.get_datafind_node(ifo,self.frtypes[ifo],int(sciseg.start()),int(sciseg.end()))
-	    sciseg.set_df_node(df_node)
-	    self.segments[ifo].append(sciseg)
+        sciseg=pipeline.ScienceSegment((segs.index(seg),seg[0],seg[1],seg[1]-seg[0]))
+        df_node=self.get_datafind_node(ifo,self.frtypes[ifo],int(sciseg.start()),int(sciseg.end()))
+        sciseg.set_df_node(df_node)
+        self.segments[ifo].append(sciseg)
     os.chdir(curdir)
 
   def get_datafind_node(self,ifo,frtype,gpsstart,gpsend):
@@ -1536,7 +1536,7 @@ class LALInferencePipelineDAG(pipeline.CondorDAG):
       return None, bayeswavepsdnode
     if extra_options is not None:
       for opt in extra_options.keys():
-	    node.add_var_arg('--'+opt+' '+extra_options[opt])
+        node.add_var_arg('--'+opt+' '+extra_options[opt])
     # Add control options
     if self.config.has_option('input','injection-file'):
        node.set_injection(self.config.get('input','injection-file'),event.event_id)
@@ -1772,8 +1772,8 @@ class SingularityJob(pipeline.CondorDAGJob):
             extra_paths="--bind {cvmfs_frames}".format(cvmfs_frames = self.CVMFS_FRAMES)
             self.add_condor_cmd('+SingularityBindCVMFS','True')
             self.add_condor_cmd('use_x509userproxy','true')
-	if cp.has_option('analysis','roq') and cp.getboolean('analysis','roq'):
-	    extra_paths+=" --bind {roqpath}".format(roqpath=cp.get('paths','roq_b_matrix_directory'))
+        if cp.has_option('analysis','roq') and cp.getboolean('analysis','roq'):
+            extra_paths+=" --bind {roqpath}".format(roqpath=cp.get('paths','roq_b_matrix_directory'))
 
         self.wrapper_string="""
             echo "Workspace on execute node $(hostname -f)"
@@ -1811,7 +1811,7 @@ class SingularityJob(pipeline.CondorDAGJob):
         f.writelines('#!/usr/bin/env bash')
         f.writelines(self.wrapper_string)
         f.close()
-        os.chmod(path,0755)
+        os.chmod(path,0o755)
 
     def write_sub_file(self):
         """
@@ -2142,8 +2142,7 @@ class EngineNode(SingularityNode):
     elif isinstance(filename,list): # A list of LFNs (for DAX mode)
         self.add_var_opt('glob-frame-data',' ')
         if len(filename) == 0:
-          raise pipeline.CondorDAGNodeError, \
-          "LDR did not return any LFNs for query: check ifo and frame type"
+          raise pipeline.CondorDAGNodeError("LDR did not return any LFNs for query: check ifo and frame type")
         for lfn in filename:
             self.lfns.append(lfn)
 
@@ -2528,7 +2527,7 @@ class MergeJob(pipeline.CondorDAGJob,pipeline.AnalysisJob):
       self.set_stderr_file(os.path.join(logdir,'merge-$(cluster)-$(process).err'))
       self.add_condor_cmd('getenv','True')
       if cp.has_option('merge','npos') and engine == 'nest':
-      	self.add_opt('npos',cp.get('merge','npos'))
+        self.add_opt('npos',cp.get('merge','npos'))
 
 
 class MergeNode(pipeline.CondorDAGNode):
-- 
2.18.0


From 2ea6c6867ad0adec0177c8b2de5687374364546a Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 16:50:29 +0100
Subject: [PATCH 11/11] lalinference.rapid_pe: updated relative imports

for python3
---
 python/lalinference/rapid_pe/amrlib.py          | 2 +-
 .../python/lalinference/rapid_pe/factored_likelihood.py      | 5 +++--
 python/lalinference/rapid_pe/mcsampler.py       | 2 +-
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/python/lalinference/rapid_pe/amrlib.py b/python/lalinference/rapid_pe/amrlib.py
index 5f49ab83bc..a6ac77f06d 100644
--- a/python/lalinference/rapid_pe/amrlib.py
+++ b/python/lalinference/rapid_pe/amrlib.py
@@ -6,7 +6,7 @@ import h5py
 
 import lal
 
-from lalinference.rapid_pe import lalsimutils
+from . import lalsimutils
 
 m1m2 = numpy.vectorize(lalsimutils.m1m2)
 
diff --git a/python/lalinference/rapid_pe/factored_likelihood.py b/python/lalinference/rapid_pe/factored_likelihood.py
index edf86ef790..435ab0c69d 100644
--- a/python/lalinference/rapid_pe/factored_likelihood.py
+++ b/python/lalinference/rapid_pe/factored_likelihood.py
@@ -22,12 +22,13 @@ Requires python SWIG bindings of the LIGO Algorithms Library (LAL)
 
 import lal
 import lalsimulation as lalsim
-from lalinference.rapid_pe import lalsimutils as lsu
 import numpy as np
 from scipy import interpolate, integrate
 from scipy import special
 from itertools import product
-from common_cl import distRef
+
+from . import lalsimutils as lsu
+from .common_cl import distRef
 
 __author__ = "Evan Ochsner <evano@gravity.phys.uwm.edu>, R. O'Shaughnessy"
 
diff --git a/python/lalinference/rapid_pe/mcsampler.py b/python/lalinference/rapid_pe/mcsampler.py
index 12699799ad..ec442bd683 100644
--- a/python/lalinference/rapid_pe/mcsampler.py
+++ b/python/lalinference/rapid_pe/mcsampler.py
@@ -34,7 +34,7 @@ import functools
 
 import healpy
 
-from lalinference.rapid_pe import statutils, synchlib
+from . import statutils, synchlib
 from lal import rate
 
 class NanOrInf(Exception):
-- 
2.18.0


From 503890ce48beade7e09cbfef3ddc3685119b041b Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 17:16:32 +0100
Subject: [PATCH] lalinference.tiger.postproc: update configparser for python3

---
 python/lalinference/tiger/postproc.py | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/python/lalinference/tiger/postproc.py b/python/lalinference/tiger/postproc.py
index 27f114e93b..38de5df13b 100644
--- a/python/lalinference/tiger/postproc.py
+++ b/python/lalinference/tiger/postproc.py
@@ -31,7 +31,10 @@ hatch_default = ['..','//','||']
 #
 ###############################################################################
 
-from ConfigParser import SafeConfigParser
+try:
+    from configparser import ConfigParser
+except ImportError:  # python < 3
+    from ConfigParser import SafeConfigParser as ConfigParser
 from cPickle import dump, load
 from datetime import datetime
 from itertools import combinations
@@ -144,7 +147,7 @@ def TigerPostProcess(configfile):
 	# CONFIGURATION FILE: CHECKING FILE
 	stdout.write("Configuration file: checking file\n")
 	if access(configfile, R_OK): 
-		config = SafeConfigParser()
+		config = ConfigParser()
 		config.read(configfile)
 	else:
 		exit("Configuration file: checking file - file does not exist. Abort script\n")
-- 
2.18.0


From dba6c87a785b0ac433d8b2d8ff37e7b28bb9772b Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 17:31:33 +0100
Subject: [PATCH] lalinference.tiger.postproc: update cPickle import

for python3
---
 python/lalinference/tiger/postproc.py | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/python/lalinference/tiger/postproc.py b/python/lalinference/tiger/postproc.py
index 38de5df13b..3b43dc50ad 100644
--- a/python/lalinference/tiger/postproc.py
+++ b/python/lalinference/tiger/postproc.py
@@ -33,9 +33,10 @@ hatch_default = ['..','//','||']

 try:
     from configparser import ConfigParser
+    from pickle import dump, load
 except ImportError:  # python < 3
     from ConfigParser import SafeConfigParser as ConfigParser
-from cPickle import dump, load
+    from cPickle import dump, load
 from datetime import datetime
 from itertools import combinations
 from itertools import cycle
--
2.18.0


From d94cba171d71fe311d6df629c3751188720d2061 Mon Sep 17 00:00:00 2001
From: Duncan Macleod <duncan.macleod@ligo.org>
Date: Wed, 3 Oct 2018 18:08:50 +0100
Subject: [PATCH] lalinference: fixed some matploitlib related issues

---
 python/lalinference/bayespputils.py   | 1 +
 python/lalinference/tiger/postproc.py | 5 +++--
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/python/lalinference/bayespputils.py b/python/lalinference/bayespputils.py
index 5d62a9c72d..121b3122c2 100644
--- a/python/lalinference/bayespputils.py
+++ b/python/lalinference/bayespputils.py
@@ -50,6 +50,7 @@ import astropy.table
 import numpy as np
 from numpy import fmod
 import matplotlib
+matplotlib.use('agg')
 from matplotlib import pyplot as plt,cm as mpl_cm,lines as mpl_lines
 from scipy import stats
 from scipy import special
diff --git a/python/lalinference/tiger/postproc.py b/python/lalinference/tiger/postproc.py
index 3b43dc50ad..db3e37aeb4 100644
--- a/python/lalinference/tiger/postproc.py
+++ b/python/lalinference/tiger/postproc.py
@@ -40,7 +40,7 @@ except ImportError:  # python < 3
 from datetime import datetime
 from itertools import combinations
 from itertools import cycle
-from matplotlib import use, rcParams
+from matplotlib import use, rcParams, __version__ as mpl_version
 use('Agg')
 from matplotlib.pyplot import clf, figure, savefig
 from os import access, path, R_OK, makedirs
@@ -73,9 +73,10 @@ fig_width = fig_width_pt*inches_per_pt  # width in inches
 fig_height = fig_width*golden_mean      # height in inches
 fig_size =  [fig_width,fig_height]
 
+fontsize = 'font.size' if mpl_version >= '1.5.0' else 'text.fontsize'
 params = {'backend': 'PDF',
           'axes.labelsize': 24,
-          'text.fontsize': 24,
+          fontsize: 24,
           'legend.fontsize': 20,
           'xtick.labelsize': 24,
           'ytick.labelsize': 24,
-- 
2.18.0

