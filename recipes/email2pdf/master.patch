From 56c051b4da9a96e413e0c31e96f384bcc89494c0 Mon Sep 17 00:00:00 2001
From: Jan Janssen <jan-janssen@users.noreply.github.com>
Date: Sun, 13 Feb 2022 11:29:38 -0700
Subject: [PATCH] Update to master (#2)

* Set up use as a library

* Cleanup Makefile; fix lint issues.

* Remove Docker support.

Not really used (by me at least), and just an additional item to
maintain.

* Use envrc for local python.

* Switch to explicit python3.

* Replaced bad module with symlink

* Update README.md

Add deprecation comment.

* Handle urls containing spaces

* Handle badly declared charsets in message body

* Handled wayland warning

Co-authored-by: Nicolas Demonte <nicolas@affinitic.be>
Co-authored-by: Andrew Ferrier <andrewferrier@users.noreply.github.com>
Co-authored-by: Andrew Ferrier <andrewferrier@example.com>
Co-authored-by: Stephan Geulette <s.geulette@imio.be>
---
 .envrc                                   |  1 +
 .gitignore                               |  1 +
 Dockerfile                               | 27 ---------------------
 MANIFEST.in                              |  4 ++++
 Makefile                                 | 30 +++++-------------------
 README.md                                |  3 +--
 __init__.py                              |  0
 email2pdf                                | 19 +++++++++++++--
 email2pdf.py                             |  1 +
 setup.py                                 | 19 +++++++++++++++
 tests/Direct/test_Direct_Module.py       | 10 ++++++++
 tests/Subprocess/test_Subprocess_MIME.py | 12 ++++++++++
 12 files changed, 72 insertions(+), 55 deletions(-)
 create mode 100644 .envrc
 delete mode 100644 Dockerfile
 create mode 100644 MANIFEST.in
 create mode 100644 __init__.py
 create mode 120000 email2pdf.py
 create mode 100644 setup.py
 create mode 100644 tests/Direct/test_Direct_Module.py

diff --git a/.envrc b/.envrc
new file mode 100644
index 0000000..94840b3
--- /dev/null
+++ b/.envrc
@@ -0,0 +1 @@
+layout python3
diff --git a/.gitignore b/.gitignore
index 22848b8..48c90ee 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,4 @@
+.direnv
 PKGBUILD
 *.deb
 cover/
diff --git a/Dockerfile b/Dockerfile
deleted file mode 100644
index 0eb18e9..0000000
--- a/Dockerfile
+++ /dev/null
@@ -1,27 +0,0 @@
-FROM debian
-LABEL maintainer="Andrew Ferrier <andrew.ferrier@example.com>"
-RUN apt-get update && apt-get install -y git build-essential \
-        fontconfig \
-        gdebi-core \
-        getmail4 \
-        libfontconfig1 \
-        libfreetype6 \
-        libjpeg62-turbo \
-        libx11-6 \
-        libxext6 \
-        libxrender1 \
-        python \
-        python3-pip \
-        wget \
-        xfonts-75dpi \
-        xfonts-base
-WORKDIR /tmp
-RUN wget -O wkhtmltox.deb 'https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.buster_amd64.deb'
-RUN dpkg -i *.deb
-RUN mkdir /etc/vim && wget -O /etc/vim/vimrc.local https://raw.githubusercontent.com/tpope/vim-sensible/master/plugin/sensible.vim
-COPY . /tmp/email2pdf/
-COPY docker/email2pdf/getmail /etc/cron.d/
-WORKDIR /tmp/email2pdf
-RUN pip3 install -r requirements_hacking.txt
-RUN make builddeb_real && sh -c 'ls -1 /tmp/email2pdf/*.deb | xargs -L 1 gdebi -n' && cp /tmp/email2pdf/*.deb /tmp
-RUN apt-get clean && rm -rf /var/lib/apt/lists/* /var/tmp/*
diff --git a/MANIFEST.in b/MANIFEST.in
new file mode 100644
index 0000000..78e7197
--- /dev/null
+++ b/MANIFEST.in
@@ -0,0 +1,4 @@
+include email2pdf
+include *.py
+include *.md
+include .travis.yml
\ No newline at end of file
diff --git a/Makefile b/Makefile
index f11d292..66aaebb 100644
--- a/Makefile
+++ b/Makefile
@@ -1,8 +1,11 @@
 ROOTDIR :=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
 TEMPDIR := $(shell mktemp -t tmp.XXXXXX -d)
 FLAKE8 := $(shell which flake8)
-UNAME := $(shell uname)
-DOCKERTAG = andrewferrier/email2pdf
+
+.PHONY: all builddeb clean test
+
+clean:
+	git clean -x -f
 
 determineversion:
 	$(eval GITDESCRIBE := $(shell git describe --dirty))
@@ -11,11 +14,7 @@ determineversion:
 	sed 's/X\.Y/$(GITDESCRIBE_ABBREV)/' brew/email2pdf_template.rb > brew/email2pdf.rb
 	sed 's/pkgver=X/pkgver=$(GITDESCRIBE_ABBREV)/' PKGBUILD_template > PKGBUILD
 
-ifeq ($(UNAME),Linux)
 builddeb: determineversion builddeb_real
-else
-builddeb: rundocker_getdebs
-endif
 
 builddeb_real:
 	dpkg -s build-essential || sudo apt-get install build-essential
@@ -33,23 +32,6 @@ builddeb_real:
 buildarch: determineversion
 	makepkg --skipinteg
 
-builddocker: determineversion
-	docker build -t $(DOCKERTAG) .
-	docker tag $(DOCKERTAG):latest $(DOCKERTAG):$(GITDESCRIBE)
-
-builddocker_nocache: determineversion
-	docker build --no-cache -t $(DOCKERTAG) .
-	docker tag $(DOCKERTAG):latest $(DOCKERTAG):$(GITDESCRIBE)
-
-rundocker_interactive: builddocker
-	docker run --rm -i -t $(DOCKERTAG) bash -l
-
-rundocker_testing: builddocker
-	docker run --rm -t $(DOCKERTAG) bash -c 'cd /tmp/email2pdf && make unittest && make stylecheck'
-
-rundocker_getdebs: builddocker
-	docker run --rm -v ${PWD}:/debs $(DOCKERTAG) sh -c 'cp /tmp/*.deb /debs'
-
 unittest:
 	python3 -m unittest discover
 
@@ -78,4 +60,4 @@ coverage:
 profile: .email2pdf.profile
 	python3 performance/printstats.py | less
 
-alltests: unittest analysis coverage
+test: unittest analysis coverage
diff --git a/README.md b/README.md
index a2975bd..1c56f0a 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,6 @@
 # email2pdf
 
-[![Travis CI
-Status](https://travis-ci.org/andrewferrier/email2pdf.svg?branch=master)](https://travis-ci.org/andrewferrier/email2pdf)
+**⚠️ DEPRECATED: This repository is deprecated, as I don't use email2pdf any more or have the time to maintain it. For now, it will remain here in case anyone wishes to fork and maintain it.**
 
 email2pdf is a Python script to convert emails to PDF from the command-line.
 It is not interactive (it doesn't run from a browser or have a GUI), but is
diff --git a/__init__.py b/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/email2pdf b/email2pdf
index 6767460..327229d 100755
--- a/email2pdf
+++ b/email2pdf
@@ -8,6 +8,7 @@ from sys import platform as _platform
 from urllib.error import URLError, HTTPError
 from urllib.request import Request, urlopen
 import argparse
+import chardet
 import email
 import functools
 import html
@@ -369,6 +370,14 @@ def handle_html_message_body(input_email, part):
         charset = 'utf-8'
     logger.info("Determined email is HTML with charset " + str(charset))
 
+    try:
+        payload_unicode = str(payload, charset)
+    except UnicodeDecodeError:
+        detection = chardet.detect(payload)
+        charset = detection["encoding"]
+        logger.info("Detected charset can't decode body; trying again with charset " + charset)
+        payload_unicode = str(payload, charset)
+
     def cid_replace(cid_parts_used, matchobj):
         cid = matchobj.group(1)
 
@@ -391,7 +400,7 @@ def handle_html_message_body(input_email, part):
             return "broken"
 
     payload = re.sub(r'cid:([\w_@.-]+)', functools.partial(cid_replace, cid_parts_used),
-                     str(payload, charset))
+                     payload_unicode)
 
     return (payload, cid_parts_used)
 
@@ -406,6 +415,11 @@ def output_body_pdf(input_email, payload, output_file_name):
     assert output == b''
 
     stripped_error = str(error, 'utf-8')
+    if os.environ['XDG_SESSION_TYPE'] == 'wayland':
+        w_err = r'Warning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on ' \
+                r'Wayland anyway.'
+        global WKHTMLTOPDF_ERRORS_IGNORE
+        WKHTMLTOPDF_ERRORS_IGNORE = WKHTMLTOPDF_ERRORS_IGNORE.union({w_err})
 
     for error_pattern in WKHTMLTOPDF_ERRORS_IGNORE:
         (stripped_error, number_of_subs_made) = re.subn(error_pattern, '', stripped_error)
@@ -469,7 +483,8 @@ def remove_invalid_urls(payload):
 
 def can_url_fetch(src):
     try:
-        req = Request(src)
+        encoded_src = src.replace(" ", "%20")
+        req = Request(encoded_src)
         urlopen(req)
     except HTTPError:
         return False
diff --git a/email2pdf.py b/email2pdf.py
new file mode 120000
index 0000000..c1fae7b
--- /dev/null
+++ b/email2pdf.py
@@ -0,0 +1 @@
+email2pdf
\ No newline at end of file
diff --git a/setup.py b/setup.py
new file mode 100644
index 0000000..71c689e
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,19 @@
+from setuptools import setup
+
+setup(
+    name='email2pdf',
+    version='',
+    packages=['tests', 'tests.Direct', 'tests.Subprocess'],
+    url='https://github.com/andrewferrier/email2pdf',
+    license='MIT',
+    author='Andrew Ferrier',
+    description='email2pdf is a Python script to convert emails to PDF.',
+    install_requires=[
+        'beautifulsoup4>=4.6.3',
+        'html5lib',
+        'lxml',
+        'pypdf2',
+        'python-magic',
+        'reportlab',
+    ],
+)
diff --git a/tests/Direct/test_Direct_Module.py b/tests/Direct/test_Direct_Module.py
new file mode 100644
index 0000000..0603986
--- /dev/null
+++ b/tests/Direct/test_Direct_Module.py
@@ -0,0 +1,10 @@
+from tests import BaseTestClasses
+
+
+class Direct_Module(BaseTestClasses.Email2PDFTestCase):
+    def setUp(self):
+        super(Direct_Module, self).setUp()
+
+    def test_import(self):
+        import email2pdf
+        self.assertEqual(email2pdf.WKHTMLTOPDF_EXTERNAL_COMMAND, 'wkhtmltopdf')
diff --git a/tests/Subprocess/test_Subprocess_MIME.py b/tests/Subprocess/test_Subprocess_MIME.py
index 210f48e..910b878 100644
--- a/tests/Subprocess/test_Subprocess_MIME.py
+++ b/tests/Subprocess/test_Subprocess_MIME.py
@@ -141,6 +141,18 @@ def test_plainandhtml(self):
         self.assertFalse(self.existsByTimeWarning())
         self.assertFalse(self.existsByTimeOriginal())
 
+    def test_wrong_charset_html(self):
+        self.addHeaders()
+        broken_body = b"<p>Something with raw accents: \xe9</p>"
+        self.attachHTML(broken_body, charset="utf-8")
+        (rc, output, error) = self.invokeAsSubprocess()
+        self.assertEqual(0, rc)
+        self.assertEqual('', error)
+        self.assertTrue(self.existsByTime())
+        self.assertRegex(self.getPDFText(self.getTimedFilename()), "Something\swith\sraw\saccents:\s\é")
+        self.assertFalse(self.existsByTimeWarning())
+        self.assertFalse(self.existsByTimeOriginal())
+
     def test_pdf(self):
         self.addHeaders()
         self.attachText("Some basic textual content")
