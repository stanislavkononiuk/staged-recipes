{% set name = "seekr2_openmm_plugin" %}
{% set version = "0.1.0" %}
{% set build = 0 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/seekrcentral/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  sha256: c5b0fd99373769fee8e462147e468177d293f65d484a72b99092d8abf37938a9

# used command: shasum -a 256 seekr2_openmm_plugin-0.1.0.tar.gz

build:
  number: {{ build }}
  skip: true  # [py2k or win or (linux64 and cuda_compiler_version == "None")]
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux]
#    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - cmake
    - openmm
#    - jom  # [win]

  host:
    - openmm
    - python
    - fftw
    - swig
    - pthread-stubs
    - lxml
    - numpy
    - cython
    # needed for Python wrappers
    - doxygen 1.8.14
    # OpenCL ICD
    - ocl-icd  # [linux]
#    - khronos-opencl-icd-loader  # [osx or win]

  run:
    - python
    - fftw
    - numpy
    # OpenCL ICD
#    - khronos-opencl-icd-loader  # [osx or win]
#    - ocl_icd_wrapper_apple  # [osx]
    - ocl-icd  # [linux]
    - ocl-icd-system  # [linux]

test:
  requires:
    - pocl  # [unix]
  imports:
    - simtk
    - simtk.openmm
  commands:
    - python -m simtk.testInstallation
    # Existence tests Unix
    - test -f $PREFIX/lib/libOpenMM$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCPU$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMOpenCL$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCUDA$SHLIB_EXT  # [linux]
    # Existence tests Windows
    - if not exist %LIBRARY_LIB%/OpenMM.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMOpenCL.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMCPU.lib exit 1  # [win]
    # Linux sees all 4 platforms, but CUDA is not usable because there's no GPU there
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 4, f'n_platforms ({n}) != 4'"  # [linux]
    # MacOS only sees 3 because CUDA is not available there
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 3, f'n_platforms ({n}) != 3'"  # [osx]
    # Debug silent errors in plugin loading
    - python -c "import simtk.openmm as mm; print(mm.Platform.getPluginLoadFailures())"
    # Debug hardcoded library path
    - python -c "import os, simtk.openmm.version as v; print(v.openmm_library_path); assert os.path.isdir(v.openmm_library_path), 'Directory does not exist'"

about:
  home: https://github.com/seekrcentral/seekr2_openmm_plugin.git
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
  summary: An OpenMM plugin for SEEKR2.

  description: |
    Fast and versatile multiscale milestoning to compute molecular 
    thermodynamics and kinetics.
  doc_url: https://seekr2.readthedocs.io/en/latest/
  dev_url: https://github.com/seekrcentral/seekr2.git

extra:
  recipe-maintainers:
    - lvotapka
