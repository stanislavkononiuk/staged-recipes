diff -Naur XRT-202210.2.13.466/src/CMake/icd.cmake work/src/CMake/icd.cmake
--- XRT-202210.2.13.466/src/CMake/icd.cmake	2022-04-14 12:29:02.000000000 -0700
+++ work/src/CMake/icd.cmake	2022-06-20 15:57:36.515329924 -0700
@@ -10,6 +10,6 @@
   ${ICD_FILE_NAME}
   )
 
-set(OCL_ICD_INSTALL_PREFIX "/etc/OpenCL/vendors")
+set(OCL_ICD_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/etc/OpenCL/vendors")
 
 install (FILES ${CMAKE_CURRENT_BINARY_DIR}/${ICD_FILE_NAME} DESTINATION ${OCL_ICD_INSTALL_PREFIX})
diff -Naur XRT-202210.2.13.466/src/CMake/nativeLnx.cmake work/src/CMake/nativeLnx.cmake
--- XRT-202210.2.13.466/src/CMake/nativeLnx.cmake	2022-04-14 12:29:02.000000000 -0700
+++ work/src/CMake/nativeLnx.cmake	2022-06-20 20:10:25.841852212 -0700
@@ -64,13 +64,13 @@
 # resolved in final target.  The tools (currently xbutil2 and xbmgmt2)
 # will be statically linked.  Enabled only for ubuntu.
 option(XRT_STATIC_BUILD "Enable static building of XRT" OFF)
-if ( (${CMAKE_VERSION} VERSION_GREATER "3.16.0")
-    AND (${XRT_NATIVE_BUILD} STREQUAL "yes")
-    AND (${LINUX_FLAVOR} MATCHES "^(Ubuntu)")
-    )
-  message("-- Enabling static artifacts of XRT")
-  set(XRT_STATIC_BUILD ON)
-endif()
+#if ( (${CMAKE_VERSION} VERSION_GREATER "3.16.0")
+#    AND (${XRT_NATIVE_BUILD} STREQUAL "yes")
+#    AND (${LINUX_FLAVOR} MATCHES "^(Ubuntu)")
+#    )
+#  message("-- Enabling static artifacts of XRT")
+#  set(XRT_STATIC_BUILD ON)
+#endif()
 
 # --- Boost ---
 #set(Boost_DEBUG 1)
@@ -114,13 +114,24 @@
 INCLUDE (FindCurses)
 find_package(Curses REQUIRED)
 
+find_program(PYTHON_EXECUTABLE python3)
+execute_process (COMMAND ${PYTHON_EXECUTABLE} -c "import site; sp=site.getsitepackages(); assert len(sp) == 1, f'site packages has len {len(sp)} != 1'; print(sp[0])"
+                 RESULT_VARIABLE _result
+                 OUTPUT_VARIABLE PYTHON_SITE_PACKAGES
+                 ERROR_QUIET
+                 OUTPUT_STRIP_TRAILING_WHITESPACE)
+if (_result)
+    message(FATAL_ERROR "non-zero exit when looking for site-packages. got ${PYTHON_SITE_PACKAGES}")
+endif()
+set(PY_INSTALL_DIR "${PYTHON_SITE_PACKAGES}/pyxrt")
+
 # --- XRT Variables ---
-set (XRT_INSTALL_DIR           "xrt")
+set (XRT_INSTALL_DIR           "${CMAKE_INSTALL_PREFIX}")
 set (XRT_INSTALL_BIN_DIR       "${XRT_INSTALL_DIR}/bin")
 set (XRT_INSTALL_UNWRAPPED_DIR "${XRT_INSTALL_BIN_DIR}/unwrapped")
 set (XRT_INSTALL_INCLUDE_DIR   "${XRT_INSTALL_DIR}/include")
 set (XRT_INSTALL_LIB_DIR       "${XRT_INSTALL_DIR}/lib${LIB_SUFFIX}")
-set (XRT_INSTALL_PYTHON_DIR    "${XRT_INSTALL_DIR}/python")
+set (XRT_INSTALL_PYTHON_DIR    "${PY_INSTALL_DIR}")
 set (XRT_VALIDATE_DIR          "${XRT_INSTALL_DIR}/test")
 set (XRT_NAMELINK_ONLY NAMELINK_ONLY)
 set (XRT_NAMELINK_SKIP NAMELINK_SKIP)
@@ -132,7 +143,7 @@
 # Note, that in order to disable RPATH insertion for a specific
 # target (say a static executable), use
 #  set_target_properties(<target> PROPERTIES INSTALL_RPATH "")
-SET(CMAKE_INSTALL_RPATH "$ORIGIN/../lib${LIB_SUFFFIX}:$ORIGIN/../..:$ORIGIN/../../lib${LIB_SUFFIX}")
+#SET(CMAKE_INSTALL_RPATH "$ORIGIN/../lib${LIB_SUFFFIX}:$ORIGIN/../..:$ORIGIN/../../lib${LIB_SUFFIX}")
 
 # --- Release: eula ---
 file(GLOB XRT_EULA
@@ -165,8 +176,8 @@
 add_subdirectory(xma)
 #XMA settings END
 
+
 # --- Python bindings ---
-set(PY_INSTALL_DIR "${XRT_INSTALL_DIR}/python")
 add_subdirectory(python)
 
 # --- Python tests ---
@@ -180,7 +191,7 @@
   PERMISSIONS OWNER_READ OWNER_EXECUTE OWNER_WRITE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
   DESTINATION ${XRT_INSTALL_DIR}/test)
 
-add_subdirectory("../tests/validate" "${CMAKE_CURRENT_BINARY_DIR}/validate_build")
+#add_subdirectory("../tests/validate" "${CMAKE_CURRENT_BINARY_DIR}/validate_build")
 message("-- XRT version: ${XRT_VERSION_STRING}")
 
 # -- CPack
@@ -188,10 +199,10 @@
 
 set (XRT_DKMS_DRIVER_SRC_BASE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/runtime_src/core")
 
-include (CMake/dkms.cmake)
-include (CMake/dkms-aws.cmake)
-include (CMake/dkms-azure.cmake)
-include (CMake/dkms-container.cmake)
+#include (CMake/dkms.cmake)
+#include (CMake/dkms-aws.cmake)
+#include (CMake/dkms-azure.cmake)
+#include (CMake/dkms-container.cmake)
 
 # --- ICD ---
 include (CMake/icd.cmake)
diff -Naur XRT-202210.2.13.466/src/CMake/pkgconfig.cmake work/src/CMake/pkgconfig.cmake
--- XRT-202210.2.13.466/src/CMake/pkgconfig.cmake	2022-04-14 12:29:02.000000000 -0700
+++ work/src/CMake/pkgconfig.cmake	2022-06-20 15:57:36.515329924 -0700
@@ -11,6 +11,8 @@
   set(XRT_PKG_CONFIG_DIR "/usr/share/pkgconfig")
 endif ()
 
+set(XRT_PKG_CONFIG_DIR "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
+
 configure_file (
   ${CMAKE_SOURCE_DIR}/CMake/config/xrt.pc.in
   xrt.pc
diff -Naur XRT-202210.2.13.466/src/CMake/version.cmake work/src/CMake/version.cmake
--- XRT-202210.2.13.466/src/CMake/version.cmake	2022-04-14 12:29:02.000000000 -0700
+++ work/src/CMake/version.cmake	2022-06-20 15:57:36.515329924 -0700
@@ -63,8 +63,8 @@
 endif()
 
 # This is not required on MPSoC platform. To avoid yocto error, do NOT intall
-if ((${XRT_NATIVE_BUILD} STREQUAL "yes") AND (NOT WIN32))
-  # Copied over from dkms.cmake. TODO: cleanup
-  set (XRT_DKMS_INSTALL_DIR "/usr/src/xrt-${XRT_VERSION_STRING}")
-  install(FILES ${CMAKE_BINARY_DIR}/gen/version.h DESTINATION ${XRT_DKMS_INSTALL_DIR}/driver/include)
-endif()
+#if ((${XRT_NATIVE_BUILD} STREQUAL "yes") AND (NOT WIN32))
+#  # Copied over from dkms.cmake. TODO: cleanup
+#  set (XRT_DKMS_INSTALL_DIR "/usr/src/xrt-${XRT_VERSION_STRING}")
+#  install(FILES ${CMAKE_BINARY_DIR}/gen/version.h DESTINATION ${XRT_DKMS_INSTALL_DIR}/driver/include)
+#endif()
diff -Naur XRT-202210.2.13.466/src/CMakeLists.txt work/src/CMakeLists.txt
--- XRT-202210.2.13.466/src/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -48,8 +48,10 @@
   -Wno-overloaded-virtual
    )
 else()
-  set(XRT_WARN_OPTS -Wall -Werror )
+  set(XRT_WARN_OPTS -Wall)
 endif()
+  
+add_compile_options("-D__STDC_FORMAT_MACROS=1")
 
 if (DEFINED ENV{XRT_NATIVE_BUILD})
   set(XRT_NATIVE_BUILD $ENV{XRT_NATIVE_BUILD})
@@ -65,11 +67,6 @@
   set (CMAKE_BUILD_TYPE RelWithDebInfo)
 endif (NOT CMAKE_BUILD_TYPE)
 
-set (CMAKE_INSTALL_PREFIX "/opt/xilinx")
-if (${XRT_NATIVE_BUILD} STREQUAL "no")
-  set (CMAKE_INSTALL_PREFIX "/usr")
-endif()
-
 # Enable AIE even on x86.  This is POC, once
 # complete we will remove the need for these
 # macros and defines.
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/CMakeLists.txt work/src/runtime_src/core/pcie/tools/CMakeLists.txt
--- XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/pcie/tools/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -4,7 +4,7 @@
 if(NOT WIN32)
   add_subdirectory(xbutil)
   add_subdirectory(xbmgmt)
-  add_subdirectory(cloud-daemon)
+  #add_subdirectory(cloud-daemon)
   add_subdirectory(xbflash.qspi)
 endif(NOT WIN32)
 
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/CMakeLists.txt work/src/runtime_src/core/pcie/tools/xbflash.qspi/CMakeLists.txt
--- XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/pcie/tools/xbflash.qspi/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -15,7 +15,7 @@
 set(XBFLASH_QSPI_SRC ${XBFLASH_QSPI_FILES})
 set(XBFLASH_NAME "xbflash.qspi")
 set(XBFLASH_NAME_NEW "xbflash")
-set(XBFLASH_INSTALL_DEST "/usr/local/bin")
+set(XBFLASH_INSTALL_DEST "${XRT_INSTALL_DIR}/bin")
 set(XBFLASH_COMPONENT "xbflash")
 
 add_executable(${XBFLASH_NAME} ${XBFLASH_QSPI_SRC})
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/xqspips.cpp work/src/runtime_src/core/pcie/tools/xbflash.qspi/xqspips.cpp
--- XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/xqspips.cpp	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/pcie/tools/xbflash.qspi/xqspips.cpp	2022-06-20 15:57:36.515329924 -0700
@@ -19,6 +19,7 @@
 #include <iostream>
 #include <cassert>
 #include <cstring>
+#include <array>
 #include "xqspips.h"
 
 #include "unistd.h"
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/xspi.cpp work/src/runtime_src/core/pcie/tools/xbflash.qspi/xspi.cpp
--- XRT-202210.2.13.466/src/runtime_src/core/pcie/tools/xbflash.qspi/xspi.cpp	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/pcie/tools/xbflash.qspi/xspi.cpp	2022-06-20 15:57:36.515329924 -0700
@@ -23,6 +23,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <array>
 #include "xspi.h"
 #include "pcidev.h"
 
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/tools/xbflash2/CMakeLists.txt work/src/runtime_src/core/tools/xbflash2/CMakeLists.txt
--- XRT-202210.2.13.466/src/runtime_src/core/tools/xbflash2/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/tools/xbflash2/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -28,7 +28,7 @@
 
 set(XBFLASH_QSPI_SRC ${XBFLASH_BASE_FILES} ${XBFLASH_QSPI_FILES})
 set(XBFLASH_NAME "xbflash2")
-set(XBFLASH_INSTALL_DEST "/usr/local/bin")
+set(XBFLASH_INSTALL_DEST "${XRT_INSTALL_DIR}/bin")
 set(XBFLASH_COMPONENT "xbflash2")
 
 add_executable(${XBFLASH_NAME} ${XBFLASH_QSPI_SRC})
diff -Naur XRT-202210.2.13.466/src/runtime_src/core/tools/xbtop/CMakeLists.txt work/src/runtime_src/core/tools/xbtop/CMakeLists.txt
--- XRT-202210.2.13.466/src/runtime_src/core/tools/xbtop/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/core/tools/xbtop/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -2,13 +2,13 @@
 # Copyright (C) 2022 Xilinx, Inc. All rights reserved.
 #
 
-message(${LINUX_FLAVOR} ${LINUX_VERSION})
+message(STATUS "${LINUX_FLAVOR} ${LINUX_VERSION}")
 string(SUBSTRING "${LINUX_VERSION}" 0 1 major_version)
 set (PYTHON_3 TRUE)
 
-if (${LINUX_FLAVOR} STREQUAL "Amazon")
+if ("${LINUX_FLAVOR}" STREQUAL "Amazon")
   set (PYTHON_3 FALSE)
-elseif ((${LINUX_FLAVOR} STREQUAL "CentOS") AND (${major_version} STREQUAL "7"))
+elseif (("${LINUX_FLAVOR}" STREQUAL "CentOS") AND ("${major_version}" STREQUAL "7"))
   set (PYTHON_3 FALSE)
 endif ()
 
diff -Naur XRT-202210.2.13.466/src/runtime_src/xdp/CMakeLists.txt work/src/runtime_src/xdp/CMakeLists.txt
--- XRT-202210.2.13.466/src/runtime_src/xdp/CMakeLists.txt	2022-04-14 12:29:02.000000000 -0700
+++ work/src/runtime_src/xdp/CMakeLists.txt	2022-06-20 15:57:36.515329924 -0700
@@ -449,7 +449,7 @@
 
 # Only install these files for PCIe device for now, which is .
 if (${XRT_NATIVE_BUILD} STREQUAL "yes")
-set (APPDEBUG_INSTALL_PREFIX "/opt/xilinx/xrt/share/appdebug")
+set (APPDEBUG_INSTALL_PREFIX "${XRT_INSTALL_DIR}/share/appdebug")
 install (FILES
   ${XRT_XDP_APPDEBUG_DIR}/appdebug.py
   ${XRT_XDP_APPDEBUG_DIR}/appdebugint.py
