From ed3af444f00295a074df5b564d05d5ac7bc229b1 Mon Sep 17 00:00:00 2001
From: Erik Massop <e.massop@hccnet.nl>
Date: Thu, 19 Jun 2014 02:15:22 +0200
Subject: [PATCH 4/5] Add --disable-hardware-specific-code

Squashed commit of the following:

commit de7ca7ddb8300cffcf954899629e0c44b289c7f7
Author: Erik Massop <e.massop@hccnet.nl>
Date:   Thu Jun 19 02:03:56 2014 +0200

    More careful about sse2 during autodetection

commit 7b4290e2e7336ee63dba6ec8d6d7ec410afe5b3b
Author: Erik Massop <e.massop@hccnet.nl>
Date:   Thu Jun 19 00:24:48 2014 +0200

    Refactor detection and enabling of sse2 and pclmul

    * Seperate detection from enabling
    * Seperate compiling support from running support
    * Always run the tests
      * This avoids having to check whether they have run
      * This fixes a bug where ac-conditional HAVE_..._SUPPORT was true
        when the corresponding test did not run. The caused compilation
        errors as the necessary flags were not set.
    * Fail to configure when compiler support required for selected
      hwdir is not available.

commit ec9365e2f6da4c85458248f62f4a49d2c9501d41
Author: thome <thome@e5c1114b-a573-4582-9dac-f72f410959ce>
Date:   Fri Nov 15 15:20:12 2013 +0000

    made enable-hardware-specific-code the default.

commit 4bb8eda61ef047d6bdb53a8fe5325f45d446fb18
Author: thome <thome@e5c1114b-a573-4582-9dac-f72f410959ce>
Date:   Tue Oct 22 17:53:26 2013 +0000

    added --disable-hardware-specific-code

    git-svn-id: svn://scm.gforge.inria.fr/svnroot/gf2x/trunk@162 e5c1114b-a573-4582-9dac-f72f410959ce
---
 config/acinclude.m4 |  96 ++++++++++++++++++++++++++++------------
 configure.ac        | 124 ++++++++++++++++++++++++++++++++++++----------------
 2 files changed, 153 insertions(+), 67 deletions(-)

diff --git a/config/acinclude.m4 b/config/acinclude.m4
index 7aa51e7..80a2cdf 100644
--- a/config/acinclude.m4
+++ b/config/acinclude.m4
@@ -100,16 +100,16 @@ int main(int argc, char * argv[]) {
 # support
 AC_DEFUN([CHECK_SSE2_SUPPORT],[
  ac_save_CFLAGS=$CFLAGS
- AC_CACHE_CHECK([whether $CC can compile and run sse-2 code], [gf2x_cv_cc_supports_sse2],[
+ AC_CACHE_CHECK([whether $CC can compile sse-2 code], [gf2x_cv_cc_supports_sse2],[
   gf2x_cv_cc_supports_sse2=no
   if test "x${enable_sse2}" = xno ; then
    echo $ECHO_N "explicitly disabled, "
   else
-   AC_RUN_IFELSE([SSE2_EXAMPLE()],[
+   AC_COMPILE_IFELSE([SSE2_EXAMPLE()],[
     gf2x_cv_cc_supports_sse2=yes
    ],[
     CFLAGS="$ac_save_CFLAGS -msse2"
-    AC_RUN_IFELSE([SSE2_EXAMPLE()],[
+    AC_COMPILE_IFELSE([SSE2_EXAMPLE()],[
      gf2x_cv_cc_supports_sse2="requires -msse2"
     ],[
      gf2x_cv_cc_supports_sse2=no
@@ -134,19 +134,40 @@ AC_DEFUN([CHECK_SSE2_SUPPORT],[
    ])
   ])
  fi
+ AC_CACHE_CHECK([whether we can run sse-2 code], [gf2x_cv_can_run_sse2],[
+  gf2x_cv_can_run_sse2=no
+  if test "x${gf2x_cv_cc_supports_sse2}" = xno ; then
+   echo $ECHO_N "cannot compile it, "
+  else
+   AC_RUN_IFELSE([SSE2_EXAMPLE()],[
+    gf2x_cv_can_run_sse2=yes
+   ],[
+    gf2x_cv_can_run_sse2=no
+   ],[
+    echo $ECHO_N "cross-compiling, "
+    gf2x_cv_can_run_sse2=no
+   ])
+  fi
+ ])
  CFLAGS=$ac_save_CFLAGS
  CPPFLAGS=$ac_save_CPPFLAGS
- if test "$gf2x_cv_cc_supports_sse2" = "requires -msse2" ;then
-  CFLAGS="$CFLAGS -msse2"
- fi
- if test "$gf2x_cv_cpp_requires_msse2_flag" = "yes" ; then
-  CPPFLAGS="$CPPFLAGS -msse2"
- fi
- if test "$gf2x_cv_cc_supports_sse2" != "no" ;then
-  AC_DEFINE([HAVE_SSE2_SUPPORT],[1],[Define if sse-2 code as present in the source tree is supported by the compiler])
- fi
 ])# CHECK_SSE2_SUPPORT
 
+# Enables compiler sse2 support, or errors out.
+# Assumes CHECK_SSE2_SUPPORT has run.
+AC_DEFUN([ENABLE_SSE2_SUPPORT],[
+ if test "$gf2x_cv_cc_supports_sse2" = "no" ;then
+  AC_MSG_ERROR([Sorry, cannot enable sse-2 support!])
+ else
+  if test "$gf2x_cv_cc_supports_sse2" = "requires -msse2" ;then
+   CFLAGS="$CFLAGS -msse2"
+  fi
+  if test "$gf2x_cv_cpp_requires_msse2_flag" = "yes" ; then
+   CPPFLAGS="$CPPFLAGS -msse2"
+  fi
+  AC_DEFINE([HAVE_SSE2_SUPPORT],[1],[Define if sse-2 code as present in the source tree is supported by the compiler])
+ fi
+])# ENABLE_SSE2_SUPPORT
 
 
 AC_DEFUN([PCLMUL_EXAMPLE],[AC_LANG_SOURCE([
@@ -168,23 +189,20 @@ return zz.x[[0]] - 61;
 # support
 AC_DEFUN([CHECK_PCLMUL_SUPPORT],[
  ac_save_CFLAGS="$CFLAGS"
- AC_CACHE_CHECK([whether $CC can compile pclmulqdq and if it is supported by the hardware], [gf2x_cv_cc_supports_pclmul],[
+ AC_CACHE_CHECK([whether $CC can compile pclmulqdq], [gf2x_cv_cc_supports_pclmul],[
   gf2x_cv_cc_supports_pclmul=no
   if test "x${enable_pclmul}" = xno ; then
    echo $ECHO_N " disabled, "
   else
-   AC_RUN_IFELSE([PCLMUL_EXAMPLE()],[
+   AC_COMPILE_IFELSE([PCLMUL_EXAMPLE()],[
     gf2x_cv_cc_supports_pclmul=yes
    ],[
     CFLAGS="$ac_save_CFLAGS -mpclmul"
-    AC_RUN_IFELSE([PCLMUL_EXAMPLE()],[
+    AC_COMPILE_IFELSE([PCLMUL_EXAMPLE()],[
      gf2x_cv_cc_supports_pclmul="requires -mpclmul"
     ],[
      gf2x_cv_cc_supports_pclmul=no
     ])
-   ],[
-   echo $ECHO_N " cross-compiling, "
-   gf2x_cv_cc_supports_pclmul=no
    ])
   fi
  ])
@@ -200,25 +218,45 @@ AC_DEFUN([CHECK_PCLMUL_SUPPORT],[
     AC_PREPROC_IFELSE([PCLMUL_EXAMPLE()],[
     gf2x_cv_cpp_requires_mpclmul_flag=yes
     ],[
-     AC_MSG_ERROR([Sorry, the preprocessor can't parse pclmul !])
+     AC_MSG_ERROR([Sorry, the preprocessor can't parse pclmul!])
     ])
    ])
   ])
  fi
+ AC_CACHE_CHECK([whether we can run pclmul code], [gf2x_cv_can_run_pclmul],[
+  gf2x_cv_can_run_pclmul=no
+  if test "x${gf2x_cv_cc_supports_pclmul}" = xno ; then
+   echo $ECHO_N "cannot compile it, "
+  else
+   AC_RUN_IFELSE([PCLMUL_EXAMPLE()],[
+    gf2x_cv_can_run_pclmul=yes
+   ],[
+    gf2x_cv_can_run_pclmul=no
+   ],[
+    echo $ECHO_N "cross-compiling, "
+    gf2x_cv_can_run_pclmul=no
+   ])
+  fi
+ ])
  CFLAGS="$ac_save_CFLAGS"
  CPPFLAGS="$ac_save_CPPFLAGS"
- if test "$gf2x_cv_cc_supports_pclmul" = "requires -mpclmul" ;then
-  CFLAGS="$CFLAGS -mpclmul"
- fi
- if test "$gf2x_cv_cpp_requires_mpclmul_flag" = "yes" ; then
-  CPPFLAGS="$CPPFLAGS -mpclmul"
- fi
- if test "$gf2x_cv_cc_supports_pclmul" != "no" ;then
-  AC_DEFINE([HAVE_PCLMUL_SUPPORT],[1],[Define if pclmul as present in the source tree is supported by the compiler and hardware])
- fi
 ])# CHECK_PCLMUL_SUPPORT
 
-
+# Enables pclmul support, or errors out.
+# Assumes CHECK_PCLMUL_SUPPORT has run.
+AC_DEFUN([ENABLE_PCLMUL_SUPPORT],[
+ if test "$gf2x_cv_cc_supports_pclmul" = "no" ;then
+  AC_MSG_ERROR([Sorry, cannot enable pclmul support!])
+ else
+  if test "$gf2x_cv_cc_supports_pclmul" = "requires -mpclmul" ;then
+   CFLAGS="$CFLAGS -mpclmul"
+  fi
+  if test "$gf2x_cv_cpp_requires_mpclmul_flag" = "yes" ; then
+   CPPFLAGS="$CPPFLAGS -mpclmul"
+  fi
+  AC_DEFINE([HAVE_PCLMUL_SUPPORT],[1],[Define if pclmul as present in the source tree is supported by the compiler])
+ fi
+])# ENABLE_PCLMUL_SUPPORT
 
 
 AC_DEFUN([AC_COMPILE_WARNINGS], [
diff --git a/configure.ac b/configure.ac
index 4d97adf..cd80e50 100644
--- a/configure.ac
+++ b/configure.ac
@@ -35,6 +35,12 @@ LT_INIT
 AC_ARG_ENABLE([ntl-checks],
               [AS_HELP_STRING([--enable-ntl-checks],
                               [Turn on ntl checks])])
+
+AC_ARG_ENABLE([hardware-specific-code],
+              [AS_HELP_STRING([--enable-hardware-specific-code],
+                              [Turn on all cpu-dependent optimized code (default is yes)])],
+              [],[enable_hardware_specific_code=yes])
+
 AC_ARG_ENABLE([sse2],
               [AS_HELP_STRING([--enable-sse2],
                               [Turn on sse-2 code (default is yes)])])
@@ -63,7 +69,6 @@ AC_SUBST([GF2X_WORDSIZE], [$gf2x_wordsize])
 
 
 CHECK_SSE2_SUPPORT()
-
 CHECK_PCLMUL_SUPPORT()
 
 : ${ABI='default'}
@@ -76,46 +81,89 @@ if test x$hwdir = x ; then
  # Our _default_ setting for hwdir is to use 8*sizeof(ulong).
  hwdir=generic$gf2x_wordsize
 
- # Yet there are several situations in which we select another directory.
- # This refined selection mechanism is impacted by the ABI= setting.
- case "$target_cpu" in
-  # All 32-bit pentium patterns
-  i?86|pentium*|athlon|prescott)
-   if test "$gf2x_cv_cc_supports_sse2" = "no" ; then
-    hwdir=x86_nosse2
-   else
-    hwdir=x86_sse2
-    # Maybe on some funny platform from hell, we could get i386 yet have a
-    # 64-bit cpu ?
-    if test x$ABI = x64 ; then
-     hwdir=x86_64
+ if test "x${enable_hardware_specific_code}" = xno ; then
+  AC_MSG_NOTICE([Not using automatic hardware-specific code due to --disable-hardware-specific-code flag])
+ else
+  # Yet there are several situations in which we select another directory.
+  # This refined selection mechanism is impacted by the ABI= setting.
+  case "$target_cpu" in
+   # All 32-bit pentium patterns
+   i?86|pentium*|athlon|prescott)
+    if test "$gf2x_cv_can_run_sse2" = "no" ; then
+     hwdir=x86_nosse2
+    else
+     hwdir=x86_sse2
+     # Maybe on some funny platform from hell, we could get i386 yet have a
+     # 64-bit cpu ?
+     if test x$ABI = x64 ; then
+      hwdir=x86_64
+     fi
+    fi
+    ;;
+   core2|opteron|x86_64|nocona|k10)
+    # Note: could set to something else if we have separate tuning files.
+    if test "$gf2x_cv_can_run_pclmul" = "no" ; then
+     if test "$gf2x_cv_can_run_sse2" = "no"; then
+      hwdir=generic64
+     else
+      hwdir=x86_64
+     fi
+    else
+      hwdir=x86_64_pclmul
+    fi
+    if test x$ABI = x32 ; then
+     hwdir=x86_sse2
+    elif test x$ABI = xdefault ; then
+     RUNTIME_ULONG_BITS()
+     case x$gf2x_cv_ulongbits in
+      x64|xdontknow) true ;;
+      *)
+        AC_MSG_WARN([The default ABI for this compiler has $gf2x_cv_ulongbits-bit unsigned longs, not 64-bit as the CPU supports. Using $gf2x_cv_ulongbits-bit])
+        if test "$gf2x_cv_can_run_sse2" = "no"; then
+         hwdir=x86_nosse2
+        else
+         hwdir=x86_sse2
+        fi
+        ;;
+     esac
     fi
-   fi
-   ;;
-  core2|opteron|x86_64|nocona|k10)
-   # Note: could set to something else if we have separate tuning files.
-   if test "$gf2x_cv_cc_supports_pclmul" = "no" ; then
-     hwdir=x86_64
-   else
-     hwdir=x86_64_pclmul
-   fi
-   if test x$ABI = x32 ; then
-    hwdir=x86_sse2
-   elif test x$ABI = xdefault ; then
-    RUNTIME_ULONG_BITS()
-    case x$gf2x_cv_ulongbits in
-     x64|xdontknow) true ;;
-     *)
-       AC_MSG_WARN([The default ABI for this compiler has $gf2x_cv_ulongbits-bit unsigned longs, not 64-bit as the CPU supports. Using $gf2x_cv_ulongbits-bit])
-       hwdir=x86_sse2;;
-    esac
-   fi
-   ;;
- esac
+    ;;
+  esac
+ fi
 else
  AC_MSG_NOTICE([Using supplied hwdir value $hwdir])
 fi
 
+case "$hwdir" in
+ # the values below are based on
+ #  $ grep -E "HAVE_(PCLMUL|SSE2)_SUPPORT" */*.h
+ # in already_tuned
+ coreihwl)      want_sse2=no  ; want_pclmul=yes ;;
+ opteron)       want_sse2=no  ; want_pclmul=no  ;;
+ generic)       want_sse2=no  ; want_pclmul=no  ;;
+ generic32)     want_sse2=no  ; want_pclmul=no  ;;
+ generic64)     want_sse2=no  ; want_pclmul=no  ;;
+ tuned)         ;; # FIXME
+ x86_64)        want_sse2=yes ; want_pclmul=no  ;;
+ x86_64_pclmul) want_sse2=no  ; want_pclmul=yes ;;
+ x86_nosse2)    want_sse2=no  ; want_pclmul=no  ;; # FIXME dir doesn't exist
+ x86_sse2)      want_sse2=yes ; want_pclmul=no  ;;
+esac
+
+if test "x${enable_hardware_specific_code}" = xyes ; then
+ if test "$gf2x_cv_can_run_sse2"   = "yes" ; then want_sse2=yes  ; fi
+ if test "$gf2x_cv_can_run_pclmul" = "yes" ; then want_pclmul=yes; fi
+fi
+
+if test "$want_sse2"   = "yes" ; then
+ ENABLE_SSE2_SUPPORT()
+fi
+if test "$want_pclmul" = "yes" ; then
+ ENABLE_PCLMUL_SUPPORT()
+fi
+gf2x_sse2_available=$want_sse2
+gf2x_pclmul_available=$want_pclmul
+
 AC_MSG_NOTICE([using ABI="$ABI"])
 AC_MSG_NOTICE([      CC="$CC"])
 AC_MSG_NOTICE([      CFLAGS="$CFLAGS"])
@@ -153,8 +201,8 @@ fi
 # This is used in src/Makefile.am
 AM_CONDITIONAL([GF2X_32BIT_SOURCES],[test "x$tuned_nbits" = x32])
 AM_CONDITIONAL([GF2X_64BIT_SOURCES],[test "x$tuned_nbits" = x64])
-AM_CONDITIONAL([GF2X_SSE2_AVAILABLE],[test "x$gf2x_cv_cc_supports_sse2" != xno])
-AM_CONDITIONAL([GF2X_PCLMUL_AVAILABLE],[test "x$gf2x_cv_cc_supports_pclmul" != xno])
+AM_CONDITIONAL([GF2X_SSE2_AVAILABLE],[test "x$gf2x_sse2_available" = xyes])
+AM_CONDITIONAL([GF2X_PCLMUL_AVAILABLE],[test "x$gf2x_pclmul_available" = xyes])
 
 AC_CONFIG_HEADERS([gf2x/gf2x-config.h])
 
-- 
2.0.0

