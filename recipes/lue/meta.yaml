{% set version = "0.2.0" %}


package:
  name: lue
  version: {{ version }}


source:
  url: http://pcraster.geo.uu.nl/pcraster/packages/src/lue-{{ version }}.tar.bz2
  sha256: 69926ca7d0fb81f70616958b007c749f925b56a80b98c32ac4b3e6860a5dd2ba


build:
  number: 0

  missing_dso_whitelist:
    - C:/Windows/System32/MSVCP140.dll             # [win]
    - C:/Windows/System32/VCRUNTIME140.dll         # [win]
    - C:/Windows/System32/OPENGL32.dll             # [win]
    - Library/bin/MSVCP140.dll                     # [win]
    - Library/bin/VCRUNTIME140.dll                 # [win]
    - $RPATH/lue_py_data_model.cp37-win_amd64.pyd  # [win]
    - $RPATH/lue_py_data_model.cp36-win_amd64.pyd  # [win]
    - $RPATH/lue_py_data_model.cp38-win_amd64.pyd  # [win]

  ignore_run_exports:
    - fmt

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ cdt('mesa-libgl-devel') }}                # [linux]
    - {{ cdt('mesa-dri-drivers') }}                # [linux]
    - {{ cdt('libselinux') }}                      # [linux]
    - {{ cdt('libxdamage') }}                      # [linux]
    - {{ cdt('libxxf86vm') }}                      # [linux]
    - conan
    - cmake
    - ninja

  host:
    - python
    # TODO: Remove version number later, try to force this only for staging
    - numpy 1.16
    # TODO: Remove version number later, try to force this only for staging
    - boost-cpp >=1.72.0
    - hdf5
    - libgdal
    - sdl2
    - pybind11
    - fmt
    - xorg-libxfixes                               # [linux]
    - glew

  run:
    - python
    - {{ pin_compatible('numpy') }}
    - boost-cpp
    - hdf5
    - libgdal
    - sdl2


test:
    commands:
       - lue_translate -h
       - lue_validate -h


about:
  home: https://lue.computationalgeography.org/
  license: MIT
  license_file: LICENSE.txt
  summary: 'Scientific database and environmental modelling framework.'
  description: |
    The LUE Python package allows you to perform I/O to the LUE Scientific Database,
    which is an HDF5 binary data format.

    The LUE database lets you efficiently store huge amounts of attribute values of
    huge amounts of objects. These objects can be located in time and/or in space,
    and the attribute values can be n-dimensional values. The LUE database is developed
    to be useful in the domain of agent-based and field-based modeling.

    The LUE Python package is currently in development.
  doc_url: https://lue.computationalgeography.org/doc/
  dev_url: https://github.com/pcraster/lue


extra:
  recipe-maintainers:
    - OliverSchmitz
    - kordejong
