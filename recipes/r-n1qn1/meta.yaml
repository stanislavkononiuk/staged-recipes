{% set version = '6.0.1-3' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-n1qn1
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/n1qn1_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/n1qn1/n1qn1_{{ version }}.tar.gz
  sha256: f1bb00eeaafe6ac014046a15c095be46be45ecae7e1c84d65099ad2c20e923cc

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ compiler('fortran') }}        # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
  host:
    - libopenblas                # [unix]
    - r-base
    - r-rcpp >=0.12.3
    - r-rcpparmadillo >=0.5.600.2.0
  run:
    - libopenblas                # [unix]
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.12.3
    - r-rcpparmadillo >=0.5.600.2.0

test:
  commands:
    - $R -e "library('n1qn1')"           # [not win]
    - "\"%R%\" -e \"library('n1qn1')\""  # [win]

about:
  home: https://github.com/nlmixrdevelopment/n1qn1
  license: CeCILL-2
  license_file: LICENSE
  summary: Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS "qn" without constraints and 'qnbd'
    or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The
    n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian
    is near enough the truth in optimization it can speed up the optimization problem.
    Both algorithms are described in the 'Scilab' optimization documentation located
    at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>.
  license_family: OTHER

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: n1qn1
# Title: Port of the 'Scilab' 'n1qn1' and 'qnbd' Modules for (Un)constrained BFGS Optimization
# Version: 6.0.1-3
# Authors@R: c(person("Matthew", "Fidler", role=c("aut","cre"), email= "matthew.fidler@gmail.com"), person("Wenping", "Wang", role = "aut", email = "wwang8198@gmail.com"), person("Claude","Lemarechal", role=c("aut","ctb")), person("Joseph", "Bonnans", role=c("ctb")), person("Jean-Charles", "Gilbert", role=c("ctb")), person("Claudia","Sagastizabal",role=c("ctb")), person("Stephen L.", "Campbell,", role=c("ctb")), person("Jean-Philippe", "Chancelier", role=c("ctb")), person("Ramine", "Nikoukhah", role=c("ctb")), person("Dirk", "Eddelbuettel", role="ctb"), person("Bruno", "Jofret", role="ctb"), person("INRIA", role="cph") )
# Maintainer: Matthew Fidler <matthew.fidler@gmail.com>
# Description: Provides 'Scilab' 'n1qn1', or Quasi-Newton BFGS "qn" without constraints and 'qnbd' or Quasi-Newton BFGS with constraints. This takes more memory than traditional L-BFGS.  The n1qn1 routine is useful since it allows prespecification of a Hessian. If the Hessian is near enough the truth in optimization it can speed up the optimization problem. Both algorithms are described in the 'Scilab' optimization documentation located at <http://www.scilab.org/content/download/250/1714/file/optimization_in_scilab.pdf>.
# URL: https://github.com/nlmixrdevelopment/n1qn1
# BugReports: https://github.com/nlmixrdevelopment/n1qn1/issues
# Depends: R (>= 3.2)
# Imports: Rcpp (>= 0.12.3)
# Suggests: testthat, covr
# License: CeCILL-2
# NeedsCompilation: yes
# LinkingTo: RcppArmadillo (>= 0.5.600.2.0), Rcpp (>= 0.12.3)
# LazyData: true
# RoxygenNote: 6.0.1
# Packaged: 2018-09-17 02:34:39 UTC; FIDLEMA3
# Author: Matthew Fidler [aut, cre], Wenping Wang [aut], Claude Lemarechal [aut, ctb], Joseph Bonnans [ctb], Jean-Charles Gilbert [ctb], Claudia Sagastizabal [ctb], Stephen L. Campbell, [ctb], Jean-Philippe Chancelier [ctb], Ramine Nikoukhah [ctb], Dirk Eddelbuettel [ctb], Bruno Jofret [ctb], INRIA [cph]
# Repository: CRAN
# Date/Publication: 2018-09-17 09:00:03 UTC
