{% set name = "TensorWaves" %}
{% set version = "0.3.3" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url:
    https://pypi.io/packages/source/{{ name[0]|lower }}/{{ name|lower }}/{{ name|lower }}-{{ version }}.tar.gz
  sha256: 3a20139599cf9aba83515cfeb4338d5a0b07158aff27cf434c5aa0ba94a4edcd

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"
  skip: true  # [win or py<36]

requirements:
  host:
    - pip
    - python
    - setuptools_scm
  run:
    - python
    - ampform >=0.10,<0.12
    - iminuit >=2.0
    - numpy
    - phasespace >=1.2.0
    - PyYAML
    - sympy
    - tensorflow >=2.4,<2.6
    - tqdm >=4.24.0
    - typing-extensions  # [py<38]

test:
  imports:
    - tensorwaves
    - tensorwaves.data
    - tensorwaves.estimator
    - tensorwaves.interface
    - tensorwaves.model
    - tensorwaves.optimizer

about:
  home: https://github.com/ComPWA/tensorwaves
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary:
    Python fitter package for multiple computational back-ends

  description: |
    tensorwaves is a Python package for **validating and generating particle reactions**
    using quantum number conservation rules. The user only has to provide a certain
    set of boundary conditions (initial and final state, allowed interaction types,
    expected decay topologies, etc.). tensorwaves will then span the space of allowed
    quantum numbers over all allowed decay topologies and particle instances that
    correspond with the sets of allowed quantum numbers it has found.

    The resulting state transition objects are particularly useful for **amplitude
    analysis / Partial Wave Analysis** as they contain all information (such as
    expected masses, widths, and spin projections) that is needed to formulate an
    amplitude model.

  dev_url: https://github.com/ComPWA/tensorwaves
  doc_url: https://tensorwaves.readthedocs.io

extra:
  recipe-maintainers:
    - redeboer
