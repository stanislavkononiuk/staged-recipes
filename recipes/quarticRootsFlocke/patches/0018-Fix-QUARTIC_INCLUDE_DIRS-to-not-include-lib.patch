From 949d8bcbaa5d522cd6a71d5830f6bce017b40920 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jo=C3=A3o=20Paulo=20Taylor=20Ienczak=20Zanette?=
 <jptiz@esss.co>
Date: Mon, 27 Dec 2021 14:42:48 -0300
Subject: [PATCH] Fix QUARTIC_INCLUDE_DIRS to not include /lib

- Reenable debug messages.
- Move generate_project_config_cmake to before `install` commands.
- Use CMAKE_INSTALL_INCLUDEDIR.
---
 CMakeInstall.txt | 16 +++++++++-------
 CMakeLists.txt   | 11 +++--------
 2 files changed, 12 insertions(+), 15 deletions(-)

diff --git a/CMakeInstall.txt b/CMakeInstall.txt
index 4d0c457..9788abe 100644
--- a/CMakeInstall.txt
+++ b/CMakeInstall.txt
@@ -11,12 +11,12 @@ else()
   set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include/${PROJECT_NAME}")
 endif()
 
-#MESSAGE( STATUS "\n\n\nCMAKE_HOME_DIRECTORY     = ${CMAKE_HOME_DIRECTORY}\n\n\n")
-#MESSAGE( STATUS "\n\n\nCMAKE_CURRENT_SOURCE_DIR = ${CMAKE_CURRENT_SOURCE_DIR}\n\n\n")
-#MESSAGE( STATUS "\n\n\nINSTALL_PREFIX           = ${INSTALL_PREFIX}\n\n\n")
-MESSAGE(STATUS "-- PUBLIC_HEADER_DESTINATION           = ${PUBLIC_HEADER_DESTINATION}")
+MESSAGE(STATUS "-- CMAKE_HOME_DIRECTORY      = ${CMAKE_HOME_DIRECTORY}")
+MESSAGE(STATUS "-- CMAKE_CURRENT_SOURCE_DIR  = ${CMAKE_CURRENT_SOURCE_DIR}")
+MESSAGE(STATUS "-- INSTALL_PREFIX            = ${INSTALL_PREFIX}")
+MESSAGE(STATUS "-- PUBLIC_HEADER_DESTINATION = ${PUBLIC_HEADER_DESTINATION}")
 
-set(INCLUDE_INSTALL_DIR "${PROJECT_PUBLIC_HEADER_DESTINATION}")
+set(INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_INCLUDEDIR}")
 
 set(PACKAGE_CONFIG_PATH_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}")
 set(PACKAGE_CONFIG_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake")
@@ -25,7 +25,7 @@ set(PACKAGE_CONFIG_VERSION_PATH "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Conf
 function(generate_project_config_cmake PROJECT_VERSION)
     configure_package_config_file(
       QuarticConfig.cmake.in "${PACKAGE_CONFIG_PATH}"
-      INSTALL_DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}"
+      INSTALL_DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}/cmake"
       PATH_VARS INCLUDE_INSTALL_DIR
     )
 
@@ -36,6 +36,8 @@ function(generate_project_config_cmake PROJECT_VERSION)
     )
 endfunction()
 
+generate_project_config_cmake("${PROJECT_VERSION}")
+
 set(INSTALL_TARGETS ${STATIC_PROJECT})
 if(BUILD_SHARED)
   set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
@@ -51,7 +53,7 @@ install(
 install(
   FILES "${PACKAGE_CONFIG_PATH}"
         "${PACKAGE_CONFIG_VERSION_PATH}"
-  DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}"
+  DESTINATION "${INSTALL_PREFIX}/lib/${PROJECT_NAME}/cmake"
 )
 
 if(INSTALL_HERE)
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5bf4acb..40213e5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,22 +10,18 @@
 ############################################################################
 
 cmake_minimum_required(VERSION 3.0.0)
-set(CMAKE_VERBOSE_MAKEFILE OFF)
-set(CMAKE_INSTALL_MESSAGE ALWAYS)
-set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)
+set(CMAKE_VERBOSE_MAKEFILE OFF CACHE BOOL "Verbose Make output")
+set(CMAKE_INSTALL_MESSAGE ALWAYS CACHE STRING "Show installation logs")
+set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE CACHE BOOL "Generate compile_commands.json")
 
 if(ENABLE_CTEST)
   enable_testing()
 endif()
 
 # get version from the git tag if a custom version string is not provided
-message(STATUS "----- Version is currently set to ${VERSION}")
 if(NOT DEFINED VERSION)
     execute_process(COMMAND git describe --tags --abbrev=0 OUTPUT_VARIABLE VERSION)
     string(REGEX REPLACE "\n$" "" VERSION "${VERSION}")
-    message(STATUS "----- Version from Git: ${VERSION}")
-else()
-    message(STATUS "----- Version (predef): ${VERSION}")
 endif()
 
 project(
@@ -118,7 +114,6 @@ endif()
 # INSTALL TARGETS
 
 include(./CMakeInstall.txt)
-generate_project_config_cmake("${PROJECT_VERSION}")
 
 message(STATUS "Using ${SSE_FLAGS} extensions")
 message(STATUS "C compiler                  = ${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER}")
-- 
2.25.1

