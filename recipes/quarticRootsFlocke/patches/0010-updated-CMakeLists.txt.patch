From c936bcead3a3a7ff0c2de951ce23c3b7e88a4283 Mon Sep 17 00:00:00 2001
From: Enrico Bertolazzi <enrico.bertolazzi@unitn.it>
Date: Sun, 17 Oct 2021 18:18:23 +0200
Subject: [PATCH 10/13] updated CMakeLists.txt

install in

{CMAKE_CURRENT_SOURCE_DIR}//lib/include
{CMAKE_CURRENT_SOURCE_DIR}//lib/lib

or if in a subproject

{CMAKE_HOME_DIRECTORY}/lib3rd/include
{CMAKE_HOME_DIRECTORY}/lib3rd/lib
---
 CMakeInstall.txt | 35 +++++++++++++++++++++++++
 CMakeLists.txt   | 34 +++---------------------
 Rakefile         | 68 ++++++++++++++++++++++++------------------------
 3 files changed, 73 insertions(+), 64 deletions(-)
 create mode 100644 CMakeInstall.txt

diff --git a/CMakeInstall.txt b/CMakeInstall.txt
new file mode 100644
index 0000000..9cc266d
--- /dev/null
+++ b/CMakeInstall.txt
@@ -0,0 +1,35 @@
+if(INSTALL_HERE)
+  # install in the home of the whole project
+  if ( ${CMAKE_HOME_DIRECTORY} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR} )
+    set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/lib")
+  else()
+    set(INSTALL_PREFIX "${CMAKE_HOME_DIRECTORY}/lib3rd")
+  endif()
+  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include")
+else()
+  set(INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include/${PROJECT_NAME}")
+endif()
+
+#MESSAGE( STATUS "\n\n\nCMAKE_HOME_DIRECTORY     = ${CMAKE_HOME_DIRECTORY}\n\n\n")
+#MESSAGE( STATUS "\n\n\nCMAKE_CURRENT_SOURCE_DIR = ${CMAKE_CURRENT_SOURCE_DIR}\n\n\n")
+#MESSAGE( STATUS "\n\n\nINSTALL_PREFIX           = ${INSTALL_PREFIX}\n\n\n")
+
+set(INSTALL_TARGETS ${STATIC_PROJECT})
+if(BUILD_SHARED)
+  set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
+endif()
+install(
+  TARGETS ${INSTALL_TARGETS}
+  RUNTIME DESTINATION "${INSTALL_PREFIX}/bin"
+  ARCHIVE DESTINATION "${INSTALL_PREFIX}/lib"
+  LIBRARY DESTINATION "${INSTALL_PREFIX}/dll"
+  PUBLIC_HEADER DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}"
+)
+
+if(INSTALL_HERE)
+  add_custom_command(
+    TARGET ${STATIC_PROJECT} POST_BUILD
+    COMMAND cmake --build . --config Release  --target install
+  )
+endif()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 760f03e..c2c7333 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -55,7 +55,8 @@ set(SOURCES
   "${SOURCES_DIR}/PolynomialRoots-2-Cubic.cc"
   "${SOURCES_DIR}/PolynomialRoots-3-Quartic.cc"
   "${SOURCES_DIR}/PolynomialRoots-Jenkins-Traub.cc"
-  "${SOURCES_DIR}/PolynomialRoots-Utils.cc")
+  "${SOURCES_DIR}/PolynomialRoots-Utils.cc"
+)
 file(GLOB HEADERS "${SOURCES_DIR}/*.hh")
 
 add_library(${STATIC_PROJECT} STATIC ${SOURCES})
@@ -91,7 +92,7 @@ endif()
 if(BUILD_EXECUTABLE OR ENABLE_CTEST)
   set(TEST_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")
   file(MAKE_DIRECTORY "${TEST_OUTPUT_PATH}")
-  set(EXECUTABLES check_1_quadratic  check_2_cubic check_3_quartic)
+  set(EXECUTABLES check_1_quadratic check_2_cubic check_3_quartic)
   foreach(EXE ${EXECUTABLES})
     add_executable(${EXE} "${CMAKE_CURRENT_SOURCE_DIR}/src_tests/${EXE}.cc")
     target_link_libraries(${EXE} PRIVATE ${STATIC_PROJECT})
@@ -109,34 +110,7 @@ endif()
 
 # INSTALL TARGETS
 
-# FIXME: CMakeLists should not override CMAKE_INSTALL_PREFIX
-# ref: https://gitlab.kitware.com/cmake/cmake/-/issues/19322
-if(INSTALL_HERE)
-  set(INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/lib")
-  set(PROJECT_PUBLIC_HEADER_DESTINATION "${INSTALL_PREFIX}/include")
-else()
-  set(INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}/lib")
-  set(PROJECT_PUBLIC_HEADER_DESTINATION "${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}")
-endif()
-
-set(INSTALL_TARGETS ${STATIC_PROJECT})
-if(BUILD_SHARED)
-  set(INSTALL_TARGETS ${INSTALL_TARGETS} ${DYNAMIC_PROJECT})
-endif()
-install(
-  TARGETS ${INSTALL_TARGETS}
-  RUNTIME DESTINATION "${INSTALL_PREFIX}/bin"
-  ARCHIVE DESTINATION "${INSTALL_PREFIX}/lib"
-  LIBRARY DESTINATION "${INSTALL_PREFIX}/dll"
-  PUBLIC_HEADER DESTINATION "${PROJECT_PUBLIC_HEADER_DESTINATION}"
-)
-
-if(INSTALL_HERE)
-  add_custom_command(
-    TARGET ${STATIC_PROJECT} POST_BUILD
-    COMMAND cmake  --build . --config Release  --target install
-  )
-endif()
+include(./CMakeInstall.txt)
 
 message(STATUS "Using ${SSE_FLAGS} extensions")
 message(STATUS "C compiler                  = ${CMAKE_C_COMPILER_ID} ${CMAKE_C_COMPILER}")
diff --git a/Rakefile b/Rakefile
index 9ef2cb9..13a3536 100755
--- a/Rakefile
+++ b/Rakefile
@@ -11,6 +11,24 @@ require_relative "./Rakefile_common.rb"
 
 file_base = File.expand_path(File.dirname(__FILE__)).to_s+'/lib'
 
+cmd_cmake_build = ""
+if COMPILE_EXECUTABLE then
+  cmd_cmake_build += ' -DBUILD_EXECUTABLE:VAR=true '
+else
+  cmd_cmake_build += ' -DBUILD_EXECUTABLE:VAR=false '
+end
+if COMPILE_DYNAMIC then
+  cmd_cmake_build += ' -DBUILD_SHARED:VAR=true '
+else
+  cmd_cmake_build += ' -DBUILD_SHARED:VAR=false '
+end
+if COMPILE_DEBUG then
+  cmd_cmake_build += ' -DCMAKE_BUILD_TYPE:VAR=Debug --loglevel=WARNING '
+else
+  cmd_cmake_build += ' -DCMAKE_BUILD_TYPE:VAR=Release --loglevel=WARNING '
+end
+cmd_cmake_build += " -DINSTALL_HERE:VAR=true "
+
 task :default => [:build]
 
 TESTS = [
@@ -64,26 +82,20 @@ task :build_win, [:year, :bits] do |t, args|
   FileUtils.mkdir_p dir
   FileUtils.cd      dir
 
-  cmd_cmake = win_vs(args.bits,args.year)
-  if COMPILE_EXECUTABLE then
-    cmd_cmake += ' -DBUILD_EXECUTABLE:VAR=true '
-  else
-    cmd_cmake += ' -DBUILD_EXECUTABLE:VAR=false '
-  end
-  cmd_cmake += " -DINSTALL_HERE:VAR=true "
-  #cmd_cmake += " -DCMAKE_INSTALL_PREFIX=\"#{file_base}\" "
-
   FileUtils.mkdir_p "../lib/lib"
   FileUtils.mkdir_p "../lib/bin"
   FileUtils.mkdir_p "../lib/bin/"+args.bits
   FileUtils.mkdir_p "../lib/dll"
   FileUtils.mkdir_p "../lib/include"
 
+  cmd_cmake = win_vs(args.bits,args.year) + cmd_cmake_build
+
+  puts "run CMAKE for ROOTS".yellow
+  sh cmd_cmake + ' ..'
+  puts "compile with CMAKE for UTILS".yellow
   if COMPILE_DEBUG then
-    sh cmd_cmake + ' -DCMAKE_BUILD_TYPE:VAR=Debug --loglevel=WARNING ..'
     sh 'cmake --build . --config Debug --target install '+PARALLEL+QUIET
   else
-    sh cmd_cmake + ' -DCMAKE_BUILD_TYPE:VAR=Release --loglevel=WARNING ..'
     sh 'cmake  --build . --config Release  --target install '+PARALLEL+QUIET
   end
 
@@ -100,22 +112,17 @@ task :build_osx do |t, args|
   FileUtils.mkdir_p dir
   FileUtils.cd      dir
 
-  cmd_cmake = 'cmake -DBUILD_EXECUTABLE:VAR='
-  if COMPILE_EXECUTABLE then
-    cmd_cmake += 'true '
-  else
-    cmd_cmake += 'false '
-  end
-  cmd_cmake += " -DINSTALL_HERE:VAR=true "
-  #cmd_cmake += " -DCMAKE_INSTALL_PREFIX=\"#{file_base}\" "
+  cmd_cmake = "cmake " + cmd_cmake_build
 
+  puts "run CMAKE for ROOTS".yellow
+  sh cmd_cmake + ' ..'
+  puts "compile with CMAKE for UTILS".yellow
   if COMPILE_DEBUG then
-    sh cmd_cmake + '-DCMAKE_BUILD_TYPE:VAR=Debug --loglevel=WARNING ..'
     sh 'cmake --build . --config Debug --target install '+PARALLEL+QUIET
   else
-    sh cmd_cmake + ' -DCMAKE_BUILD_TYPE:VAR=Release --loglevel=WARNING ..'
-    sh 'cmake --build . --config Release --target install '+PARALLEL+QUIET
+    sh 'cmake  --build . --config Release  --target install '+PARALLEL+QUIET
   end
+
   FileUtils.cd '..'
 end
 
@@ -129,22 +136,15 @@ task :build_linux do |t, args|
   FileUtils.mkdir_p dir
   FileUtils.cd      dir
 
-  cmd_cmake = 'cmake -DBUILD_EXECUTABLE:VAR='
-  if COMPILE_EXECUTABLE then
-    cmd_cmake += 'true '
-  else
-    cmd_cmake += 'false '
-  end
-  cmd_cmake += " -DINSTALL_HERE:VAR=true "
-  #cmd_cmake += " -DCMAKE_INSTALL_PREFIX=\"#{file_base}\" "
-
+  puts "run CMAKE for ROOTS".yellow
+  sh cmd_cmake + ' ..'
+  puts "compile with CMAKE for UTILS".yellow
   if COMPILE_DEBUG then
-    sh cmd_cmake + '-DCMAKE_BUILD_TYPE:VAR=Debug --loglevel=WARNING ..'
     sh 'cmake --build . --config Debug --target install '+PARALLEL+QUIET
   else
-    sh cmd_cmake + ' -DCMAKE_BUILD_TYPE:VAR=Release --loglevel=WARNING ..'
-    sh 'cmake --build . --config Release --target install '+PARALLEL+QUIET
+    sh 'cmake  --build . --config Release  --target install '+PARALLEL+QUIET
   end
+
   FileUtils.cd '..'
 end
 
-- 
2.34.1

