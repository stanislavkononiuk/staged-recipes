{% set name = "zfp" %}
{% set version = "0.5.5" %}
{% set build = 0 %}
{% set sha256 = "fdf7b948bab1f4e5dccfe2c2048fd98c24e417ad8fb8a51ed3463d04147393c5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: http://computing.llnl.gov/projects/floating-point-compression/download/zfp-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ build }}
  run_exports:
    # patch-releases are not ABI compatible
    - {{ pin_subpackage('zfp', min_pin='x.x.x', max_pin='x.x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make          # [unix]
    - cmake >=3.4.0
    - libgomp       # [linux]
    - llvm-openmp   # [osx]
  # a variant could provide CUDA support

test:
  commands:
    - test -f ${PREFIX}/lib/cmake/zfp/zfp-config.cmake                      # [unix]
    - test -f ${PREFIX}/lib/libzfp.so                                       # [linux]
    - otool -L ${PREFIX}/lib/libzfp.dylib                                   # [osx]
    - if exist %LIBRARY_PREFIX%\bin\zfp.dll (exit 0) else (exit 1)          # [win]
    - if exist %LIBRARY_PREFIX%\bin\zfp.lib (exit 0) else (exit 1)          # [win]
    - if exist %LIBRARY_PREFIX%\lib\cmake\zfp\zfp-config.cmake (exit 0) else (exit 1)  # [win]

about:
  home: http://computing.llnl.gov/projects/floating-point-compression
  license: BSD-3-Clause-LLNL
  license_family: BSD
  license_file: LICENSE
  summary: Compressed numerical arrays that support high-speed random access

  description: |
    zfp is a compressed format for representing multidimensional
    floating-point and integer arrays. zfp provides compressed-array
    classes that support high throughput read and write random access
    to individual array elements. zfp also supports serial and
    parallel (OpenMP and CUDA) compression of whole arrays, e.g., for
    applications that read and write large data sets to and from disk.
  doc_url: https://zfp.readthedocs.io
  dev_url: https://github.com/LLNL/zfp

extra:
  recipe-maintainers:
    - ax3l
