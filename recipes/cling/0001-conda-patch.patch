From 4d8d8b3bfb663c8bf8090e7e9fc21d89b87b7e66 Mon Sep 17 00:00:00 2001
From: Sylvain Corlay <sylvain.corlay@gmail.com>
Date: Mon, 13 Feb 2017 23:23:29 +0100
Subject: [PATCH] conda-patch

---
 CMakeLists.txt                      |  8 +++++---
 lib/Interpreter/BackendPasses.cpp   |  1 -
 lib/Interpreter/CMakeLists.txt      |  3 ---
 lib/Interpreter/DynamicLookup.cpp   |  3 +--
 lib/MetaProcessor/CMakeLists.txt    |  3 ---
 lib/UserInterface/UserInterface.cpp |  2 +-
 lib/Utils/AST.cpp                   | 11 ++++-------
 7 files changed, 11 insertions(+), 20 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 980c7eb..fbead85 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -41,6 +41,8 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
   else()
     message(FATAL_ERROR "llvm-config not found -- ${LLVM_CONFIG}")
   endif()
+  
+  find_package(Clang REQUIRED)
 
   list(GET CONFIG_OUTPUT 0 ENABLE_ASSERTIONS)
   list(GET CONFIG_OUTPUT 1 TOOLS_BINARY_DIR)
@@ -101,7 +103,7 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
     set(LLVM_INCLUDE_TESTS ON)
   endif()
 
-  include_directories("${LLVM_BINARY_DIR}/include" "${LLVM_MAIN_INCLUDE_DIR}")
+  include_directories("${LLVM_BINARY_DIR}/include" "${LLVM_MAIN_INCLUDE_DIR}" "${CMAKE_INSTALL_PREFIX}/include")
   link_directories("${LLVM_LIBRARY_DIR}")
 
   set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
@@ -460,8 +462,8 @@ get_property(CLANG_TABLEGEN_TARGETS GLOBAL PROPERTY CLANG_TABLEGEN_TARGETS)
 list(APPEND LLVM_COMMON_DEPENDS ${CLANG_TABLEGEN_TARGETS})
 
 # And llvm-intrinsics.
-list(APPEND LLVM_COMMON_DEPENDS intrinsics_gen)
-list(APPEND LLVM_COMMON_DEPENDS clang-headers)
+#list(APPEND LLVM_COMMON_DEPENDS intrinsics_gen)
+#list(APPEND LLVM_COMMON_DEPENDS clang-headers)
 
 add_subdirectory(lib)
 add_subdirectory(tools)
diff --git a/lib/Interpreter/BackendPasses.cpp b/lib/Interpreter/BackendPasses.cpp
index dc37ffc..df070ed 100644
--- a/lib/Interpreter/BackendPasses.cpp
+++ b/lib/Interpreter/BackendPasses.cpp
@@ -122,7 +122,6 @@ void BackendPasses::CreatePasses(llvm::Module& M)
   PMBuilder.LoopVectorize = m_CGOpts.VectorizeLoop;
 
   PMBuilder.DisableTailCalls = m_CGOpts.DisableTailCalls;
-  PMBuilder.DisableUnitAtATime = !m_CGOpts.UnitAtATime;
   PMBuilder.DisableUnrollLoops = !m_CGOpts.UnrollLoops;
   PMBuilder.MergeFunctions = m_CGOpts.MergeFunctions;
   PMBuilder.RerollLoops = m_CGOpts.RerollLoops;
diff --git a/lib/Interpreter/CMakeLists.txt b/lib/Interpreter/CMakeLists.txt
index 978d283..fdbd22f 100644
--- a/lib/Interpreter/CMakeLists.txt
+++ b/lib/Interpreter/CMakeLists.txt
@@ -73,9 +73,6 @@ add_cling_library(clingInterpreter OBJECT
   ValuePrinter.cpp
   ValuePrinterSynthesizer.cpp
 
-  DEPENDS
-  ClangDriverOptions
-
   LINK_LIBS
   ${LIBS}
 )
diff --git a/lib/Interpreter/DynamicLookup.cpp b/lib/Interpreter/DynamicLookup.cpp
index 82eb9d4..c188644 100644
--- a/lib/Interpreter/DynamicLookup.cpp
+++ b/lib/Interpreter/DynamicLookup.cpp
@@ -96,8 +96,7 @@ namespace {
 
           if (Node->hasExplicitTemplateArgs())
             TemplateSpecializationType::PrintTemplateArgumentList(OS,
-                                                        Node->getTemplateArgs(),
-                                                     Node->getNumTemplateArgs(),
+                                                     llvm::ArrayRef<clang::TemplateArgumentLoc>(Node->getTemplateArgs(), Node->getNumTemplateArgs()),
                                                                       m_Policy);
           if (Node->hasExplicitTemplateArgs())
             assert((Node->getTemplateArgs() || Node->getNumTemplateArgs()) && \
diff --git a/lib/MetaProcessor/CMakeLists.txt b/lib/MetaProcessor/CMakeLists.txt
index 5460a2a..6806e57 100644
--- a/lib/MetaProcessor/CMakeLists.txt
+++ b/lib/MetaProcessor/CMakeLists.txt
@@ -19,9 +19,6 @@ add_cling_library(clingMetaProcessor OBJECT
   MetaProcessor.cpp
   MetaSema.cpp
 
-  DEPENDS
-  ClangDriverOptions
-
   LINK_LIBS
   clangLex
   clangAST
diff --git a/lib/UserInterface/UserInterface.cpp b/lib/UserInterface/UserInterface.cpp
index 1549306..1d60512 100644
--- a/lib/UserInterface/UserInterface.cpp
+++ b/lib/UserInterface/UserInterface.cpp
@@ -20,7 +20,7 @@
 #include "llvm/ADT/SmallString.h"
 #include "llvm/Support/ErrorHandling.h"
 #include "llvm/Support/Path.h"
-#include "llvm/Config/config.h"
+#include "llvm/Config/llvm-config.h"
 
 #include "clang/Basic/LangOptions.h"
 #include "clang/Frontend/CompilerInstance.h"
diff --git a/lib/Utils/AST.cpp b/lib/Utils/AST.cpp
index e3d1a8a..f271828 100644
--- a/lib/Utils/AST.cpp
+++ b/lib/Utils/AST.cpp
@@ -290,7 +290,7 @@ namespace utils {
       if (mightHaveChanged) {
         QualType QT
           = Ctx.getTemplateSpecializationType(TST->getTemplateName(),
-                                              desArgs.data(), desArgs.size(),
+                                              llvm::ArrayRef<clang::TemplateArgument>(desArgs.data(), desArgs.size()),
                                               TST->getCanonicalTypeInternal());
         return QT.getTypePtr();
       }
@@ -324,8 +324,7 @@ namespace utils {
             TemplateName TN(TSTdecl->getSpecializedTemplate());
             QualType QT
               = Ctx.getTemplateSpecializationType(TN,
-                                                  desArgs.data(),
-                                                  desArgs.size(),
+                                                  llvm::ArrayRef<clang::TemplateArgument>(desArgs.data(), desArgs.size()),
                                          TSTRecord->getCanonicalTypeInternal());
             return QT.getTypePtr();
           }
@@ -1316,8 +1315,7 @@ namespace utils {
       if (mightHaveChanged) {
         Qualifiers qualifiers = QT.getLocalQualifiers();
         QT = Ctx.getTemplateSpecializationType(TST->getTemplateName(),
-                                               desArgs.data(),
-                                               desArgs.size(),
+                                               llvm::ArrayRef<clang::TemplateArgument>(desArgs.data(), desArgs.size()),
                                                TST->getCanonicalTypeInternal());
         QT = Ctx.getQualifiedType(QT, qualifiers);
       }
@@ -1389,8 +1387,7 @@ namespace utils {
           if (mightHaveChanged) {
             Qualifiers qualifiers = QT.getLocalQualifiers();
             TemplateName TN(TSTdecl->getSpecializedTemplate());
-            QT = Ctx.getTemplateSpecializationType(TN, desArgs.data(),
-                                                   desArgs.size(),
+            QT = Ctx.getTemplateSpecializationType(TN, llvm::ArrayRef<clang::TemplateArgument>(desArgs.data(), desArgs.size()),
                                          TSTRecord->getCanonicalTypeInternal());
             QT = Ctx.getQualifiedType(QT, qualifiers);
           }
-- 
2.7.4

