#!/bin/bash
set -x
set -e

mkdir -p build
cd build

cmake \
    -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
    "${SRC_DIR}/src" \
    -DBUILD_SHARED_LIBS=ON \
    -DNCRYSTAL_NOTOUCH_CMAKE_BUILD_TYPE=ON \
    -DMODIFY_RPATH=OFF \
    -DCMAKE_INSTALL_LIBDIR=lib \
    -DNCrystal_CMAKEDIR=lib/cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_EXAMPLES=OFF \
    -DINSTALL_SETUPSH=OFF \
    -DEMBED_DATA=ON \
    -DINSTALL_DATA=OFF \
    -DNO_DIRECT_PYMODINST=ON \
    -DPython3_EXECUTABLE="$PYTHON" \
    ${CMAKE_ARGS}

make -j${CPU_COUNT:-1}
make install

#Note: There is no "make test" or "make ctest" functionality for NCrystal
#      yet. If it appears in the future, we should add it here.

TMPNCRYSTALLIBNAME=$(cat ./cfg_ncrystal_libname.txt)
cat <<EOF > ./ncrystal_pypkg/NCrystal/_nclibpath.py
#File autogenerated for working within a conda environment:
import pathlib
import os
_ = os.environ.get( 'CONDA_PREFIX', None )
if not _:
    raise RuntimeError('This installation of NCrystal was created for a conda environment but the CONDA_PREFIX variable is not set')
liblocation = pathlib.Path( _ ) / 'lib' / '${TMPNCRYSTALLIBNAME}'
if not liblocation.exists():
    raise RuntimeError('Could not find NCrystal library at expected location \$CONDA_PREFIX/lib/${TMPNCRYSTALLIBNAME}')
EOF
$PYTHON -m pip install ./ncrystal_pypkg/ --no-deps -vv
cd ..
