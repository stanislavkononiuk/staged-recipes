{% set name = "omniscidb-cuda" %}
{% set version = "4.8.1" %}
{% set sha256 = "300cdbbaa9108879f7ec22d9cf6210ca2700a3ef99c356a5c00fbf3aeb3a4713" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/omnisci/omniscidb/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    Skip-installing-Boost-libs.patch

build:
  number: 0
  skip: True  # [not (linux64 and cuda_compiler_version == "10.1")]
  missing_dso_whitelist:
  - "*/libcuda.*"  # [linux]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler("cgo") }}
    - {{ compiler("cuda") }}
    - cmake
    - make
    - maven
  host:
    - {{ compiler('cxx') }}
    - {{ compiler("cuda") }}
    # omniscidb 4.8 is not boost-cpp > 1.68 ready
    - boost-cpp 1.68.*
    # omniscidb 4.8 is not llvm > 9 ready
    - llvmdev <9
    - clangdev <9
    - llvm
    - double-conversion
    - snappy
    - gflags
    - glog
    - libarchive
    - libkml
    - libpng
    - blosc
    - libgdal >=2.3
    - arrow-cpp >=0.12.1
    - thrift-cpp >=0.11.0
    - ncurses
    - flex
    - bisonpp
    - openssl
    - librdkafka
    - openldap
  run:
    - boost-cpp 1.68.*
    - arrow-cpp >=0.12.1
    - snappy
    - double-conversion
    - libgdal >=2.3
    - glog
    - gflags
    - openjdk 8.*
    - ncurses
    - xz
    - bzip2
    - zlib
    # omnscidb UDF support requires C++ headers
    - {{ compiler('cxx') }}
    - clangxx <9
    - librdkafka
    - openldap

test:
  commands:
    - omnisql -v

about:
  home: https://www.omnisci.com/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.md
  summary: 'The OmniSci database'

  description: |
    OmniSciDB is an in-memory, column store, SQL relational database 
    that was designed from the ground up to run on GPUs.

    This Omnisci database can be run on CUDA enabled GPUs.
  doc_url: https://www.omnisci.com/docs/latest/
  dev_url: https://github.com/omnisci/omniscidb

extra:
  recipe-maintainers:
    - xmnlab
    - pearu
    - andrewseidl
