From b4cc026dac9aaa9e1b63ff6895e3a0ef9051ee2d Mon Sep 17 00:00:00 2001
From: Simon Smart <simondsmart>
Date: Tue, 13 Jul 2021 08:34:22 +0100
Subject: [PATCH] ODB-531: Fix utf-8-null encoding for python 3.9
 incompatibibility

---
 codc/frame.py | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/codc/frame.py b/codc/frame.py
index 076576c..4dc8f10 100644
--- a/codc/frame.py
+++ b/codc/frame.py
@@ -14,12 +14,12 @@ import os
 
 # A null-terminated UTF-8 decoder
 def null_utf_decoder(name):
-    if name == 'utf-8-null':
+    if name == "utf_8_null":
 
         utf8_decoder = codecs.getdecoder('utf-8')
 
         return codecs.CodecInfo(
-            name='utf-8-null',
+            name="utf_8_null",
             encode=None,
             decode=lambda b, e: utf8_decoder(b.split(b'\x00', 1)[0], e),
             incrementalencoder=None,
@@ -213,7 +213,10 @@ class Frame:
                 # This is a bit yucky, but I haven't found any other way to decode from b'' strings to real ones
                 # Also note, result_type added to work around bug in pandas
                 # https://github.com/pandas-dev/pandas/issues/34529
-                dataframes[i] = df.apply(lambda x: x.astype('object').str.decode('utf-8-null'), result_type='expand')
+                dataframes[i] = df.apply(
+                    lambda x: x.astype("object").str.decode("utf_8_null"),
+                    result_type="expand",
+                )
 
         # And construct the DataFrame from the decoded data
 
-- 
2.30.1 (Apple Git-130)

