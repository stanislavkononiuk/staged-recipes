--- route/build/Makefile	2020-07-21 07:17:41.000000000 -0700
+++ route/build/Makefile.good	2020-09-13 13:14:02.753303596 -0700
@@ -1,102 +1,102 @@
-#========================================================================
-# Makefile to compile the routing model
-#========================================================================
+##========================================================================
+## Makefile to compile the routing model
+##========================================================================
+##
+## Need to edit FC, FC_EXE, EXE, isOpenMP (if OMP is used), F_MASTER, NCDF_PATH
+## Feel free to modify compiler flag (FLAGS)
+## Do not leave space after your edits
+##
+##========================================================================
+## User configure part
+##========================================================================
+## Define fortran compiler - gnu, intel or pgi
+#FC  =
 #
-# Need to edit FC, FC_EXE, EXE, isOpenMP (if OMP is used), F_MASTER, NCDF_PATH
-# Feel free to modify compiler flag (FLAGS)
-# Do not leave space after your edits
+## Define the compiler exe, e.g., gnu=>gfortran, intel=>ifort, pgi=>pgf90
+#FC_EXE =
+#
+## Define the compiled executable
+#EXE =
+#
+## Define optional setting
+## fast:      Enables optimizations
+## debug:     Minimum debug options, still
+## profile:   Enables profiling
+#MODE = debug
+#
+## define open MP option (put yes to activate OMP)
+#isOpenMP =
+#
+## Define core directory below which everything resides
+## parent directory of the 'build' directory
+## do not put space at the end of path
+#F_MASTER =
+#
+## Define the NetCDF libraries and path to include files
+#ifeq "$(FC)" "gnu"
+# NCDF_PATH =
+#endif
+#ifeq "$(FC)" "intel"
+# NCDF_PATH =
+#endif
+#ifeq "$(FC)" "pgi"
+# NCDF_PATH =
+#endif
+#
+#LIBNETCDF = -Wl,-rpath,$(NCDF_PATH)/lib \
+#            -L$(NCDF_PATH)/lib -lnetcdff -lnetcdf
+#INCNETCDF = -I$(NCDF_PATH)/include
+#
+##========================================================================
+## Define flags
+##========================================================================
+#FLAGS_OMP =
+#LIBOPENMP =
+#ifeq "$(isOpenMP)" "yes"
+# ifeq "$(FC)" "pgi"
+#  FLAGS_OMP = -mp
+# endif
+# ifeq "$(FC)" "gnu"
+#  FLAGS_OMP = -fopenmp
+# endif
+# ifeq "$(FC)" "intel"
+#  FLAGS_OMP = -qopenmp
+# endif
+#endif
+#
+#ifeq "$(FC)" "gnu"
+#  ifeq "$(MODE)" "fast"
+#    FLAGS = -O3 -fmax-errors=0 -ffree-line-length-none $(FLAGS_OMP)
+#  endif
+#  ifeq "$(MODE)" "debug"
+#    FLAGS = -g -Wall -fmax-errors=0 -fbacktrace -fcheck=all -ffpe-trap=zero -ffree-line-length-none $(FLAGS_OMP)
+#  endif
+#  ifeq "$(MODE)" "profile"
+#    FLAGS = -p -g -Wall -fmax-errors=0 -fbacktrace -fcheck=all -ffpe-trap=zero -ffree-line-length-none $(FLAGS_OMP)
+#  endif
+#endif
+#
+#ifeq "$(FC)" "intel"
+#  ifeq "$(MODE)" "fast"
+#    FLAGS = -O3 -FR -auto -fltconsistency -fpe0 $(FLAGS_OMP)
+#  endif
+#  ifeq "$(MODE)" "debug"
+#    FLAGS = -g -debug all -warn all -check all -FR -O0 -auto -WB -fpe0 -traceback -fltconsistency $(FLAGS_OMP)
+#  endif
+#  ifeq "$(MODE)" "profile"
+#    FLAGS = -p -g -debug -warn all -check all -noerror_limit -FR -O0 -auto -WB -fpe0 -traceback -fltconsistency $(FLAGS_OMP)
+#  endif
+#endif
+#
+#ifeq "$(FC)" "pgi"
+#  ifeq "$(MODE)" "fast"
+#    FLAGS = -fast -O3 -Mdclchk $(FLAGS_OMP)
+#  endif
+#  ifeq "$(MODE)" "debug"
+#    FLAGS = -g -Mbounds -Mlist -Minfo -Mdclchk $(FLAGS_OMP)
+#  endif
+#endif
 #
-#========================================================================
-# User configure part
-#========================================================================
-# Define fortran compiler - gnu, intel or pgi
-FC  =
-
-# Define the compiler exe, e.g., gnu=>gfortran, intel=>ifort, pgi=>pgf90
-FC_EXE =
-
-# Define the compiled executable
-EXE =
-
-# Define optional setting
-# fast:      Enables optimizations
-# debug:     Minimum debug options, still
-# profile:   Enables profiling
-MODE = debug
-
-# define open MP option (put yes to activate OMP)
-isOpenMP =
-
-# Define core directory below which everything resides
-# parent directory of the 'build' directory
-# do not put space at the end of path
-F_MASTER =
-
-# Define the NetCDF libraries and path to include files
-ifeq "$(FC)" "gnu"
- NCDF_PATH =
-endif
-ifeq "$(FC)" "intel"
- NCDF_PATH =
-endif
-ifeq "$(FC)" "pgi"
- NCDF_PATH =
-endif
-
-LIBNETCDF = -Wl,-rpath,$(NCDF_PATH)/lib \
-            -L$(NCDF_PATH)/lib -lnetcdff -lnetcdf
-INCNETCDF = -I$(NCDF_PATH)/include
-
-#========================================================================
-# Define flags
-#========================================================================
-FLAGS_OMP =
-LIBOPENMP =
-ifeq "$(isOpenMP)" "yes"
- ifeq "$(FC)" "pgi"
-  FLAGS_OMP = -mp
- endif
- ifeq "$(FC)" "gnu"
-  FLAGS_OMP = -fopenmp
- endif
- ifeq "$(FC)" "intel"
-  FLAGS_OMP = -qopenmp
- endif
-endif
-
-ifeq "$(FC)" "gnu"
-  ifeq "$(MODE)" "fast"
-    FLAGS = -O3 -fmax-errors=0 -ffree-line-length-none $(FLAGS_OMP)
-  endif
-  ifeq "$(MODE)" "debug"
-    FLAGS = -g -Wall -fmax-errors=0 -fbacktrace -fcheck=all -ffpe-trap=zero -ffree-line-length-none $(FLAGS_OMP)
-  endif
-  ifeq "$(MODE)" "profile"
-    FLAGS = -p -g -Wall -fmax-errors=0 -fbacktrace -fcheck=all -ffpe-trap=zero -ffree-line-length-none $(FLAGS_OMP)
-  endif
-endif
-
-ifeq "$(FC)" "intel"
-  ifeq "$(MODE)" "fast"
-    FLAGS = -O3 -FR -auto -fltconsistency -fpe0 $(FLAGS_OMP)
-  endif
-  ifeq "$(MODE)" "debug"
-    FLAGS = -g -debug all -warn all -check all -FR -O0 -auto -WB -fpe0 -traceback -fltconsistency $(FLAGS_OMP)
-  endif
-  ifeq "$(MODE)" "profile"
-    FLAGS = -p -g -debug -warn all -check all -noerror_limit -FR -O0 -auto -WB -fpe0 -traceback -fltconsistency $(FLAGS_OMP)
-  endif
-endif
-
-ifeq "$(FC)" "pgi"
-  ifeq "$(MODE)" "fast"
-    FLAGS = -fast -O3 -Mdclchk $(FLAGS_OMP)
-  endif
-  ifeq "$(MODE)" "debug"
-    FLAGS = -g -Mbounds -Mlist -Minfo -Mdclchk $(FLAGS_OMP)
-  endif
-endif
-
 #========================================================================
 # Define directory paths
 #========================================================================
