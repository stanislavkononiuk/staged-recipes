# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "fs.webdavfs" %}
{% set version = "0.2.1" %}
{% set sha256 = "02a50cbb8107ebf5f04b44b36fb9413d2cb8eb54f84c1ac1d00e4ac034dd7bdf" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.zip
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.zip
  sha256: {{ sha256 }}

build:
  # Uncomment the following line if the package is pure python and the recipe is exactly the same for all platforms.
  # See https://conda-forge.org/docs/meta.html#building-noarch-packages for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    - setuptools
    # if your project compiles code (such as a C extension) then add `toolchain` as a build requirement.
  run:
    - python
    - fs
    - webdavclient2
    - furl

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - webdavfs.webdavfs.WebDAVFS

about:
  home: https://github.com/PyFilesystem/webdavfs
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: BSD
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: BSD
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  # license_file:  '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: 'fs.webdavfs is a WebDAV driver for PyFileSystem2.'

  # The remaining entries in this section are optional, but recommended
  description: |

    Usage:
    ======

    > from webdavfs.webdavfs import WebDAVFS
    > url = 'http://zopyx.com:22082'
    > creds = dict(login='admin', password='admin')
    > root = '/exist/webdav/db'
    > handle = WebDAVFS(url, cred, root)
    > handle.makedir('foo')
    > print(handle.listdir('.'))
    ....

  doc_url: https://github.com/PyFilesystem/webdavfs
  dev_url: https://github.com/PyFilesystem/webdavfs

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - ReimarBauer

