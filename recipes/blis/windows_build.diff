diff --git a/.appveyor.yml b/.appveyor.yml
new file mode 100644
index 0000000..02786ad
--- /dev/null
+++ b/.appveyor.yml
@@ -0,0 +1,27 @@
+install:
+- set "CONDA_INSTALL_LOCN=C:\\Miniconda36-x64"
+- call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
+- conda update --yes --quiet conda
+- conda config --add channels conda-forge
+- conda install --yes clangdev posix m2-make pthreads-win32
+- copy %CONDA_INSTALL_LOCN%\Library\lib\pthreads.lib %CONDA_INSTALL_LOCN%\Library\lib\pthread.lib
+- copy %CONDA_INSTALL_LOCN%\Library\lib\pthreads.lib %CONDA_INSTALL_LOCN%\Library\lib\m.lib
+- copy %CONDA_INSTALL_LOCN%\Library\bin\llvm-as.exe %CONDA_INSTALL_LOCN%\Library\bin\as.exe
+- copy %CONDA_INSTALL_LOCN%\Library\bin\llvm-ar.exe %CONDA_INSTALL_LOCN%\Library\bin\ar.exe
+- call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
+- set "LIB=%CONDA_INSTALL_LOCN%\Library\lib;%LIB%"
+- set "CPATH=%CONDA_INSTALL_LOCN%\Library\include;%CPATH%"
+
+build_script:
+- set CC=clang
+- set RANLIB=echo
+- bash --login -c "source activate && cd /c/projects/blis && ./configure --disable-shared x86_64 && make CPICFLAGS= -j4"
+
+test_script:
+- bash --login -c "source activate && cd /c/projects/blis && make CPICFLAGS= check"
+
+# Enable this to be able to login to the build worker. You can use the
+# `remmina` program in Ubuntu, use the login information that the line below
+# prints into the log.
+#on_finish:
+#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
diff --git a/blastest/f2c/f2c_config.h b/blastest/f2c/f2c_config.h
index 285c76a..af39bbe 100644
--- a/blastest/f2c/f2c_config.h
+++ b/blastest/f2c/f2c_config.h
@@ -26,10 +26,14 @@
 #define HAVE_FORK 1
 
 /* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
+#if !defined(_MSC_VER)
 #define HAVE_FSEEKO 1
+#endif
 
 /* Define to 1 if you have the `ftruncate' function. */
+#if !defined(_MSC_VER)
 #define HAVE_FTRUNCATE 1
+#endif
 
 /* Define to 1 if you have the <inttypes.h> header file. */
 #define HAVE_INTTYPES_H 1
@@ -181,3 +185,7 @@
 
 /* Define as `fork' if `vfork' does not work. */
 /* #undef vfork */
+
+#ifdef _MSC_VER
+#define NON_UNIX_STDIO 1
+#endif
\ No newline at end of file
diff --git a/blastest/f2c/f2c_types_win.h b/blastest/f2c/f2c_types_win.h
new file mode 100644
index 0000000..c9f13eb
--- /dev/null
+++ b/blastest/f2c/f2c_types_win.h
@@ -0,0 +1,89 @@
+/* include/f2c.h.  Generated from f2c.h.in by configure.  */
+/* f2c.h  --  Standard Fortran to C header file */
+
+/**  barf  [ba:rf]  2.  "He suggested using FORTRAN, and everybody barfed."
+
+	- From The Shogakukan DICTIONARY OF NEW ENGLISH (Second edition) */
+
+#ifndef F2C_TYPES_WIN_H
+#define F2C_TYPES_WIN_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/* Define to the number of bits in an integer */
+#define F2C_INT_BITS 32
+
+/* Define to the number of bits in a long integer */
+#define F2C_LONG_BITS 64
+
+typedef int integer;
+typedef unsigned int uinteger;
+typedef __int64 longint;
+typedef unsigned __int64 ulongint;
+/*#define INTEGER_STAR_8*/
+
+typedef char integer1;
+typedef char *address;
+typedef short int shortint;
+typedef float real;
+typedef double doublereal;
+typedef struct { real r, i; } complex;
+typedef struct { doublereal r, i; } doublecomplex;
+typedef integer logical;
+typedef shortint shortlogical;
+typedef integer1 logical1;
+
+#ifdef f2c_i2
+/* for -i2 */
+typedef short flag;
+typedef short ftnlen;
+typedef short ftnint;
+#else
+typedef integer flag;
+typedef integer ftnlen;
+typedef integer ftnint;
+#endif
+
+/* procedure parameter types for -A and -C++ */
+
+#define F2C_proc_par_types 1
+#ifdef __cplusplus
+typedef int /* Unknown procedure type */ (*U_fp)(...);
+typedef shortint (*J_fp)(...);
+typedef integer (*I_fp)(...);
+typedef real (*R_fp)(...);
+typedef doublereal (*D_fp)(...), (*E_fp)(...);
+typedef /* Complex */ void (*C_fp)(...);
+typedef /* Double Complex */ void (*Z_fp)(...);
+typedef logical (*L_fp)(...);
+typedef shortlogical (*K_fp)(...);
+typedef /* Character */ void (*H_fp)(...);
+typedef /* Subroutine */ int (*S_fp)(...);
+#else
+typedef int /* Unknown procedure type */ (*U_fp)();
+typedef shortint (*J_fp)();
+typedef integer (*I_fp)();
+typedef real (*R_fp)();
+typedef doublereal (*D_fp)(), (*E_fp)();
+typedef /* Complex */ void (*C_fp)();
+typedef /* Double Complex */ void (*Z_fp)();
+typedef logical (*L_fp)();
+typedef shortlogical (*K_fp)();
+typedef /* Character */ void (*H_fp)();
+typedef /* Subroutine */ int (*S_fp)();
+#endif
+/* E_fp is for real functions when -R is not specified */
+typedef void C_f;	/* complex function */
+typedef void H_f;	/* character function */
+typedef void Z_f;	/* double complex function */
+typedef doublereal E_f;	/* real function with -R not specified */
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* F2C_TYPES_H */
+
diff --git a/blastest/f2c/open.c b/blastest/f2c/open.c
index 848384b..e58b445 100644
--- a/blastest/f2c/open.c
+++ b/blastest/f2c/open.c
@@ -27,6 +27,9 @@ use or performance of this software.
 #ifndef NON_UNIX_STDIO
 #include <unistd.h>
 #endif
+#ifdef _MSC_VER
+#define access _access
+#endif
 #include "f2c.h"
 #include "fio.h"
 
diff --git a/frame/thread/bli_thread.c b/frame/thread/bli_thread.c
index 5f959c0..6e9d515 100644
--- a/frame/thread/bli_thread.c
+++ b/frame/thread/bli_thread.c
@@ -34,6 +34,13 @@
 
 #include "blis.h"
 
+#ifdef _MSC_VER
+#include <windows.h>
+int setenv(const char *name, const char *value, int overwrite) {
+    _putenv_s(name, value);
+}
+#endif
+
 thrinfo_t BLIS_PACKM_SINGLE_THREADED = {};
 thrinfo_t BLIS_GEMM_SINGLE_THREADED  = {};
 thrcomm_t BLIS_SINGLE_COMM           = {};
diff --git a/frame/thread/bli_thread.h b/frame/thread/bli_thread.h
index 72a8515..061d12d 100644
--- a/frame/thread/bli_thread.h
+++ b/frame/thread/bli_thread.h
@@ -51,6 +51,10 @@
 void bli_thread_init( void );
 void bli_thread_finalize( void );
 
+#ifdef _MSC_VER
+#define strerror_r(errno,buf,len) strerror_s(buf,len,errno)
+#endif
+
 // Thread range-related prototypes.
 void bli_thread_get_range_sub
      (
diff --git a/kernels/penryn/1/bli_axpyv_penryn_int.c b/kernels/penryn/1/bli_axpyv_penryn_int.c
index f8f218b..ba1fc64 100644
--- a/kernels/penryn/1/bli_axpyv_penryn_int.c
+++ b/kernels/penryn/1/bli_axpyv_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
 	__m128d v;
diff --git a/kernels/penryn/1/bli_dotv_penryn_int.c b/kernels/penryn/1/bli_dotv_penryn_int.c
index b6d5400..224c04f 100644
--- a/kernels/penryn/1/bli_dotv_penryn_int.c
+++ b/kernels/penryn/1/bli_dotv_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
     __m128d v;
diff --git a/kernels/penryn/1f/bli_axpy2v_penryn_int.c b/kernels/penryn/1f/bli_axpy2v_penryn_int.c
index 8435fa5..54afeb3 100644
--- a/kernels/penryn/1f/bli_axpy2v_penryn_int.c
+++ b/kernels/penryn/1f/bli_axpy2v_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
 	__m128d v;
diff --git a/kernels/penryn/1f/bli_axpyf_penryn_int.c b/kernels/penryn/1f/bli_axpyf_penryn_int.c
index 0ba0e88..649d8b0 100644
--- a/kernels/penryn/1f/bli_axpyf_penryn_int.c
+++ b/kernels/penryn/1f/bli_axpyf_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
     __m128d v;
diff --git a/kernels/penryn/1f/bli_dotaxpyv_penryn_int.c b/kernels/penryn/1f/bli_dotaxpyv_penryn_int.c
index 0b0c353..7e8a33b 100644
--- a/kernels/penryn/1f/bli_dotaxpyv_penryn_int.c
+++ b/kernels/penryn/1f/bli_dotaxpyv_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
 	__m128d v;
diff --git a/kernels/penryn/1f/bli_dotxaxpyf_penryn_int.c b/kernels/penryn/1f/bli_dotxaxpyf_penryn_int.c
index dafcde6..78486ef 100644
--- a/kernels/penryn/1f/bli_dotxaxpyf_penryn_int.c
+++ b/kernels/penryn/1f/bli_dotxaxpyf_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
     __m128d v;
diff --git a/kernels/penryn/1f/bli_dotxf_penryn_int.c b/kernels/penryn/1f/bli_dotxf_penryn_int.c
index e660b7f..e230efc 100644
--- a/kernels/penryn/1f/bli_dotxf_penryn_int.c
+++ b/kernels/penryn/1f/bli_dotxf_penryn_int.c
@@ -32,10 +32,10 @@
 
 */
 
+#include "pmmintrin.h"
 #include "blis.h"
 
 
-#include "pmmintrin.h"
 typedef union
 {
     __m128d v;
diff --git a/kernels/sandybridge/3/bli_gemm_sandybridge_int_d8x4.c b/kernels/sandybridge/3/bli_gemm_sandybridge_int_d8x4.c
index 72d9fbc..2e116e2 100644
--- a/kernels/sandybridge/3/bli_gemm_sandybridge_int_d8x4.c
+++ b/kernels/sandybridge/3/bli_gemm_sandybridge_int_d8x4.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include <immintrin.h> 
+#include "blis.h"
 
 
 #if 0
diff --git a/kernels/zen/1/bli_amaxv_zen_int.c b/kernels/zen/1/bli_amaxv_zen_int.c
index 3df2547..42d71af 100644
--- a/kernels/zen/1/bli_amaxv_zen_int.c
+++ b/kernels/zen/1/bli_amaxv_zen_int.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1/bli_axpyv_zen_int.c b/kernels/zen/1/bli_axpyv_zen_int.c
index cf83ee0..6a48a58 100644
--- a/kernels/zen/1/bli_axpyv_zen_int.c
+++ b/kernels/zen/1/bli_axpyv_zen_int.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1/bli_axpyv_zen_int10.c b/kernels/zen/1/bli_axpyv_zen_int10.c
index 9070aa2..b474fce 100644
--- a/kernels/zen/1/bli_axpyv_zen_int10.c
+++ b/kernels/zen/1/bli_axpyv_zen_int10.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1/bli_dotv_zen_int.c b/kernels/zen/1/bli_dotv_zen_int.c
index dbb2543..55d8915 100644
--- a/kernels/zen/1/bli_dotv_zen_int.c
+++ b/kernels/zen/1/bli_dotv_zen_int.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 /* Union data structure to access AVX registers
    One 256-bit AVX register holds 8 SP elements. */
diff --git a/kernels/zen/1/bli_dotv_zen_int10.c b/kernels/zen/1/bli_dotv_zen_int10.c
index 974226f..93a98f7 100644
--- a/kernels/zen/1/bli_dotv_zen_int10.c
+++ b/kernels/zen/1/bli_dotv_zen_int10.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1/bli_dotxv_zen_int.c b/kernels/zen/1/bli_dotxv_zen_int.c
index 48d16e4..1750559 100644
--- a/kernels/zen/1/bli_dotxv_zen_int.c
+++ b/kernels/zen/1/bli_dotxv_zen_int.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 /* Union data structure to access AVX registers
    One 256-bit AVX register holds 8 SP elements. */
diff --git a/kernels/zen/1/bli_scalv_zen_int.c b/kernels/zen/1/bli_scalv_zen_int.c
index d7c8963..530fd3d 100644
--- a/kernels/zen/1/bli_scalv_zen_int.c
+++ b/kernels/zen/1/bli_scalv_zen_int.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1/bli_scalv_zen_int10.c b/kernels/zen/1/bli_scalv_zen_int10.c
index bed591b..e3756ee 100644
--- a/kernels/zen/1/bli_scalv_zen_int10.c
+++ b/kernels/zen/1/bli_scalv_zen_int10.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 
 /* Union data structure to access AVX registers
diff --git a/kernels/zen/1f/bli_axpyf_zen_int_8.c b/kernels/zen/1f/bli_axpyf_zen_int_8.c
index 022ae87..077ec12 100644
--- a/kernels/zen/1f/bli_axpyf_zen_int_8.c
+++ b/kernels/zen/1f/bli_axpyf_zen_int_8.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 /* Union data structure to access AVX registers
    One 256-bit AVX register holds 8 SP elements. */
diff --git a/kernels/zen/1f/bli_dotxf_zen_int_8.c b/kernels/zen/1f/bli_dotxf_zen_int_8.c
index 7bbc14a..e23efc8 100644
--- a/kernels/zen/1f/bli_dotxf_zen_int_8.c
+++ b/kernels/zen/1f/bli_dotxf_zen_int_8.c
@@ -32,8 +32,8 @@
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
+#include "blis.h"
 
 /* Union data structure to access AVX registers
    One 256-bit AVX register holds 8 SP elements. */
diff --git a/kernels/zen/3/bli_gemm_small.c b/kernels/zen/3/bli_gemm_small.c
index 93685f5..d025437 100644
--- a/kernels/zen/3/bli_gemm_small.c
+++ b/kernels/zen/3/bli_gemm_small.c
@@ -32,9 +32,9 @@ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 */
 
-#include "blis.h"
 #include "immintrin.h"
 #include "xmmintrin.h"
+#include "blis.h"
 
 #ifdef BLIS_ENABLE_SMALL_MATRIX
 
diff --git a/testsuite/src/test_libblis.c b/testsuite/src/test_libblis.c
index 419fadb..d13d564 100644
--- a/testsuite/src/test_libblis.c
+++ b/testsuite/src/test_libblis.c
@@ -35,6 +35,12 @@
 #include "blis.h"
 #include "test_libblis.h"
 
+#ifdef _MSC_VER
+#include <windows.h>
+void sleep(int x) {
+    Sleep(x*1000);
+}
+#endif
 
 // Global variables.
 char libblis_test_binary_name[ MAX_BINARY_NAME_LENGTH + 1 ];
diff --git a/testsuite/src/test_libblis.h b/testsuite/src/test_libblis.h
index ac49f8d..44c7eef 100644
--- a/testsuite/src/test_libblis.h
+++ b/testsuite/src/test_libblis.h
@@ -46,9 +46,12 @@
 // For other string manipulation functions (e.g. isspace()).
 #include <ctype.h>
 
-// For sleep().
+// For sleep()
+#ifdef _MSC_VER
+void sleep(int x);
+#else
 #include <unistd.h>
-
+#endif
 
 //
 // --- Constants and types -----------------------------------------------------
