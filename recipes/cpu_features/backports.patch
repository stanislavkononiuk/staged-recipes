diff --git a/src/hwcaps.c b/src/hwcaps.c
index c67c5e6..469e8fe 100644
--- a/src/hwcaps.c
+++ b/src/hwcaps.c
@@ -32,15 +32,19 @@
 #endif
 
 #if defined(CPU_FEATURES_ARCH_MIPS) || defined(CPU_FEATURES_ARCH_ANY_ARM)
-#define HWCAPS_ANDROID_MIPS_OR_ARM
+#define HWCAPS_DLOPEN
 #endif
 
 #if defined(CPU_FEATURES_OS_LINUX_OR_ANDROID) && \
     !defined(HWCAPS_ANDROID_MIPS_OR_ARM)
+#if __GLIBC_PREREQ(2,16)
 #define HWCAPS_REGULAR_LINUX
+#else
+#define HWCAPS_DLOPEN
+#endif
 #endif
 
-#if defined(HWCAPS_ANDROID_MIPS_OR_ARM) || defined(HWCAPS_REGULAR_LINUX)
+#if defined(HWCAPS_DLOPEN) || defined(HWCAPS_REGULAR_LINUX)
 #define HWCAPS_SUPPORTED
 #endif
 
@@ -71,7 +75,7 @@ static unsigned long GetElfHwcapFromGetauxval(uint32_t hwcap_type) {
 // implementation does not parse /proc/self/auxv. Instead it depends on values
 // that are passed by the kernel at process-init time to the C runtime
 // initialization layer.
-#if defined(HWCAPS_ANDROID_MIPS_OR_ARM)
+#if defined(HWCAPS_DLOPEN)
 #include <dlfcn.h>
 #define AT_HWCAP 16
 #define AT_HWCAP2 26
@@ -101,7 +105,7 @@ static uint32_t GetElfHwcapFromGetauxval(uint32_t hwcap_type) {
   dlclose(libc_handle);
   return ret;
 }
-#endif  // defined(HWCAPS_ANDROID_MIPS_OR_ARM)
+#endif  // defined(HWCAPS_DLOPEN)
 
 #if defined(HWCAPS_SUPPORTED)
 ////////////////////////////////////////////////////////////////////////////////
