{% set name = "stackvana" %}
# LSST DM versions are prefixed with letters
#
#  - a weekly build is 'w_2018_50'
#  - a major release is 'v18_1'
#
# In order to play nice with conda, we take the following conventions
#
#  - for a weekly build 'w_2018_50', the conda version is '0.2018.50'
#  - for a major version 'v18_1', the conda version is '18.1.0'
#
{% set version = "0.2021.6" %}
{% set patch_version = version.split(".")[-1] if version.split(".")[-1].__len__() == 2 else "0" + version.split(".")[-1] %}
{% set dm_tag = "w_" + version.split(".")[1] + "_" + patch_version if version.startswith("0.") else "v" + version.replace(".", "_") %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://eups.lsst.codes/stack/src/tags/{{ dm_tag }}.list
  sha256: 75086858514c4a3380e541b9d21a1ce953147fa911d50e36a14cadbbcae5f30d

build:
  skip: true  # [win or py != 38]
  number: 0
  merge_build_host: True

requirements:
  host:
    - python
  run:
    - python

outputs:
  - name: stackvana-{{ eups_product }}
    version: {{ version }}
    script: build_product.sh
    requirements:
      host:
        - python
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - stackvana-core =={{ version }}
        - stackvana-afw =={{ version }}
        - sysroot_linux-64 2.17.*  # [linux64]
        - cfitsio
        - curl
        - fftw
        - gsl
        - hdf5
        - hdf5 * mpi_mpich_*
        - libblas
        - libcblas
        - liblapack
        - liblapacke
        - log4cxx
        - mpich
      run:
        - python
        - stackvana-core =={{ version }}
        - stackvana-afw =={{ version }}
        - cfitsio
        - curl
        - fftw
        - gsl
        - hdf5
        - hdf5 * mpi_mpich_*
        - mpich
        - {{ pin_compatible('numpy') }}
    test:
      commands:
        - setup {{ eups_product }}
        - python -c "import lsst.afw"
        - if [[ ! `eups list -s | grep "{{ eups_product }}"` ]]; then exit 1; fi

  - name: stackvana
    version: {{ version }}
    script: build_stackvana.sh
    requirements:
      host:
        - python
      run:
        - python
        - stackvana-{{ eups_product }} =={{ version }}
    test:
      commands:
        - python -c "import lsst.afw"

about:
  home: https://github.com/beckermr/stackvana-core
  license: GPL-3.0-or-later
  license_family: GPL
  license_file:
    - LICENSE
    - COPYRIGHT
    - licenses/firefly-client.txt  # this one can be removed on the next version bump
    - licenses/scarlet.txt
    - licenses/eigen.txt  # this one can be removed when eigen 3.4 is pulled from conda-forge
    - licenses/kht.txt
  summary: 'stackvana build up to lsst_distrib'

extra:
  recipe-maintainers:
    - beckermr
