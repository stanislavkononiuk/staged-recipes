diff --git a/CMakeModules/FindR.cmake b/CMakeModules/FindR.cmake
index 9ffe3de8..e02a7ff0 100644
--- a/CMakeModules/FindR.cmake
+++ b/CMakeModules/FindR.cmake
@@ -14,12 +14,17 @@ include(CheckIncludeFile)
 include(FindPackageHandleStandardArgs)
 
 if(NOT R_EXECUTABLE)
+  set(TEMP_CMAKE_FIND_APPBUNDLE ${CMAKE_FIND_APPBUNDLE})
+  set(CMAKE_FIND_APPBUNDLE "NEVER")
   find_program(R_EXECUTABLE NAMES R)
+  set(CMAKE_FIND_APPBUNDLE ${TEMP_CMAKE_FIND_APPBUNDLE})
 endif(NOT R_EXECUTABLE)
 
 if(R_EXECUTABLE)
+  message(STATUS "Found R executable: ${R_EXECUTABLE}")
   execute_process(COMMAND ${R_EXECUTABLE} RHOME OUTPUT_VARIABLE RHOME)
   string(STRIP ${RHOME} RHOME)
+  message(STATUS "Found R home: ${RHOME}")
   set(R_INCLUDE_DIR "${RHOME}/include")
   set(R_LIBRARY_DIR "${RHOME}/lib")
   set(CMAKE_REQUIRED_INCLUDES ${R_INCLUDE_DIR})
@@ -28,11 +33,13 @@ endif(R_EXECUTABLE)
 check_include_file(R.h HAVE_R_H)
 
 if(NOT WIN32)
-find_library(R_LIBRARY NAMES R libR PATHS ${R_LIBRARY_DIR})
+find_library(R_LIBRARY NAMES R libR PATHS ${R_LIBRARY_DIR} NO_DEFAULT_PATH)
 if(R_LIBRARY)
+  message(STATUS "Checking R library: ${R_LIBRARY}")
   check_library_exists(${R_LIBRARY} Rprintf "" HAVE_R_LIBRARY)
 endif(R_LIBRARY)
 if(HAVE_R_LIBRARY)
+  message(STATUS "Found R library: ${R_LIBRARY}")
   set(R_LIBRARIES ${R_LIBRARY})
 endif(HAVE_R_LIBRARY)
 find_package_handle_standard_args(R DEFAULT_MSG R_EXECUTABLE HAVE_R_LIBRARY HAVE_R_H)
