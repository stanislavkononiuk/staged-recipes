{% set name = "liblbfgs" %}
{% set version = "1.10" %}
{% set sha = "4158ab7402b573e5c69d5f6b03c973047a91e16ca5737d3347e3af9c906868cf" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/downloads/chokkan/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha }}

build:
  number: 0
  skip: True  # [win]
  run_exports:
  - {{ pin_subpackage('liblbfgs', max_pin='x.x') }}

requirements:
  build:
    - {{ compiler('cxx') }}

# note that liblbfgs builds a sample binary (sample/sample). Infortunately
# this seems to be linked awkwardly and can not be used in the test.
# Nevertheless its executed in the build, i.e. the build fails if the sample
# does not work.
test:
  commands:
    - test -f ${PREFIX}/include/lbfgs.h
    - test -f ${PREFIX}/lib/liblbfgs${SHLIB_EXT}
    - test -f ${PREFIX}/share/doc/liblbfgs/README

about:
  home: http://www.chokkan.org/software/liblbfgs/
  license: MIT
  license_family: MIT
  license_file: COPYING
  summary: 'implementation of Limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) method'

  description: |
    libLBFGS is a C port of the implementation of Limited-memory
    Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) method written by Jorge Nocedal.
    The original FORTRAN source code is available at:
    http://www.ece.northwestern.edu/~nocedal/lbfgs.html
    The L-BFGS method solves the unconstrainted minimization problem:
    minimize F(x), x = (x1, x2, ..., xN),
    only if the objective function F(x) and its gradient G(x) are computable.
  doc_url: http://www.chokkan.org/software/liblbfgs/
  dev_url: https://github.com/chokkan/liblbfgs/

extra:
  recipe-maintainers:
    - bernt-matthias
