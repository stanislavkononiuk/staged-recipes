{% set name = "openmm" %}
{% set version = "7.4.0" %}
{% set build = 0 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/openmm/{{ name }}/archive/{{ version }}.tar.gz
  sha256: cb7ddd923d6f402cf2723b3c14509915abad328505e8ce401ac3131706dabeff

build:
  number: {{ build }}
  skip: True  # [win]
  skip: True  # [py2k]
  detect_binary_files_with_prefix: False
  merge_build_host: True
  missing_dso_whitelist:
  - "*/libcuda.*"  # [linux]
  - "*/libOpenCL.*"  # [unix]


requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - cmake
    - jom  # [win]

  host:
    - python
    - fftw
    - swig
    - pthread-stubs
    - lxml
    - numpy
    - cython
    # needed for Python wrappers
    - doxygen 1.8.14

  run:
    - python
    - fftw
    - numpy
    - cython

test:
  imports:
    - simtk
    - simtk.openmm
  commands:
    - python -m simtk.testInstallation
    # Existence tests
    - test -f $PREFIX/lib/libOpenMM$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCUDA$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMOpenCL$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCPU$SHLIB_EXT  # [unix]
    # Debug hardcoded library path
    - python -c "import os, simtk.openmm.version as v; print(v.openmm_library_path); assert os.path.isdir(v.openmm_library_path), 'Directory does not exist'"
    # # Check for silent errors in plugin loading
    # - python -c "import simtk.openmm as mm; err = mm.Platform.getPluginLoadFailures(); assert not err, err"
    # # We should see all four platforms in Linux, but only three in MacOS
    # - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 4, f'# platforms ({n}) != 4'"  # [linux]
    # - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 3, f'# platforms ({n}) != 3'"  # [osx]

about:
  home: http://openmm.org
  license: MIT
  license_family: MIT
  license_file: docs-source/licenses/Licenses.txt
  summary: 'A high performance toolkit for molecular simulation.'

  description: |
    OpenMM is a toolkit for molecular simulation. It can be used either as a
    stand-alone application for running simulations, or as a library you call
    from your own code. It provides a combination of extreme flexibility
    (through custom forces and integrators), openness, and high performance
    (especially on recent GPUs) that make it truly unique among simulation
    codes.
  doc_url: http://docs.openmm.org
  dev_url: https://github.com/openmm/openmm

extra:
  recipe-maintainers:
    - jchodera
    - jaimergp
    - peastman
