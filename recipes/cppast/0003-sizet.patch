From 77307f03c3c6d5831b5f063ffd94d9e50bffbdd7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Julian=20R=C3=BCth?= <julian.rueth@fsfe.org>
Date: Tue, 6 Sep 2022 19:15:17 +0400
Subject: [PATCH] Use types as defined in tiny-process-library interface

i.e., ::size_t instead of std::size_t (apparently, on Windows this is
not always the same:)

```
%SRC_DIR%\src\libclang\libclang_parser.cpp(250): error C2664: 'TinyProcessLib::Process::Process(const std::vector<TinyProcessLib::Process::string_type,std::allocator<TinyProcessLib::Process::string_type>> &,const TinyProcessLib::Process::string_type &,std::function<void (const char *,size_t)>,std::function<void (const char *,size_t)>,bool,const TinyProcessLib::Config &) noexcept': cannot convert argument 1 from 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' to 'const std::vector<TinyProcessLib::Process::string_type,std::allocator<TinyProcessLib::Process::string_type>> &'
%SRC_DIR%\src\libclang\libclang_parser.cpp(251): note: Reason: cannot convert from 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>' to 'const std::vector<TinyProcessLib::Process::string_type,std::allocator<TinyProcessLib::Process::string_type>>'
%SRC_DIR%\src\libclang\libclang_parser.cpp(251): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called
%PREFIX%\Library\include\process.hpp(79): note: see declaration of 'TinyProcessLib::Process::Process'
```
---
 src/libclang/libclang_parser.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/libclang/libclang_parser.cpp b/src/libclang/libclang_parser.cpp
index cdacc8a..1736c45 100644
--- a/src/libclang/libclang_parser.cpp
+++ b/src/libclang/libclang_parser.cpp
@@ -248,7 +248,7 @@ namespace
 bool is_valid_binary(const std::string& binary)
 {
     tpl::Process process(
-        binary + " -v", "", [](const char*, std::size_t) {}, [](const char*, std::size_t) {});
+        binary + " -v", "", [](const char*, size_t) {}, [](const char*, size_t) {});
     return process.get_exit_status() == 0;
 }
 
@@ -263,8 +263,8 @@ void add_default_include_dirs(libclang_compile_config& config)
     std::string  verbose_output;
     tpl::Process process(
         detail::libclang_compile_config_access::clang_binary(config) + " -x c++ -v -", "",
-        [](const char*, std::size_t) {},
-        [&](const char* str, std::size_t n) { verbose_output.append(str, n); }, true);
+        [](const char*, size_t) {},
+        [&](const char* str, size_t n) { verbose_output.append(str, n); }, true);
     process.write("", 1);
     process.close_stdin();
     process.get_exit_status();
-- 
2.37.1

