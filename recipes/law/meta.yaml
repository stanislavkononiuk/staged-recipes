{% set name = "law" %}
{% set version = "0.0.41" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz"
  sha256: 3b6e457bb99da69ddab03e91a80057958ee9477dba7bb6f8823059b2cbce19b3

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - python
    - pip
    - six >=1.10
    - luigi >=2.8.2,<3  # [py<=27]
    - luigi >=2.8.2  # [py>30]
  run:
    - python
    - six >=1.10
    - luigi >=2.8.2,<3  # [py<=27]
    - luigi >=2.8.2  # [py>30]

test:
  requires:
    - ipython
  imports:
    - law
    - law.cli
    - law.contrib
    - law.contrib.arc
    - law.contrib.cms
    - law.contrib.coffea
    - law.contrib.docker
    - law.contrib.dropbox
    - law.contrib.git
    - law.contrib.glite
    - law.contrib.hdf5
    - law.contrib.htcondor
    - law.contrib.ipython
    - law.contrib.keras
    - law.contrib.lsf
    - law.contrib.matplotlib
    - law.contrib.mercurial
    - law.contrib.numpy
    - law.contrib.profiling
    - law.contrib.rich
    - law.contrib.root
    - law.contrib.singularity
    - law.contrib.slack
    - law.contrib.tasks
    - law.contrib.telegram
    - law.contrib.tensorflow
    - law.contrib.wlcg
    - law.job
    - law.sandbox
    - law.target
    - law.task
    - law.workflow
  commands:
     - law --help

about:
  home: https://github.com/riga/law
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: "Use law to build complex and large-scale task workflows."
  description: |
    Use law to build complex and large-scale task workflows. It is build on top of luigi and adds
    abstractions for run locations, storage locations and software environments. Law strictly
    disentangles these building blocks and ensures they remain interchangeable and
    resource-opportunistic.

    Key features:
    - CLI with auto-completion and interactive status and dependency inspection.
    - Remote targets with automatic retries and local caching: WebDAV, HTTP, Dropbox, SFTP, all WLCG
      protocols (srm, xrootd, rfio, dcap, gsiftp, ...)
    - Automatic submission to batch systems from within tasks: HTCondor, LSF, gLite, ARC
    - Environment sandboxing, configurable on task level: Docker, Singularity, Sub-Shells
  doc_url: https://law.readthedocs.io
  dev_url: https://github.com/riga/law

extra:
  recipe-maintainers:
    - riga
