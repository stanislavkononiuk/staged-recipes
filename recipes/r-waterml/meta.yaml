{% set version = '1.7.1' %}

package:
  name: r-waterml
  version: {{ version }}

source:
  fn: WaterML_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/WaterML_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/WaterML/WaterML_{{ version }}.tar.gz
  sha256: b2685dc6242f8024450c0c5c596d4c9d03a4a1c66b56fa66e0a90e2ab0550c2b

build:
  number: 0
  script: R CMD INSTALL --build .
  skip: True  # [win]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - r-base
    - r-rjsonio
    - r-xml
    - r-httr
  run:
    - r-base
    - r-rjsonio
    - r-xml
    - r-httr

test:
  commands:
    - $R -e "library('WaterML')"  # [not win]
    - "\"%R%\" -e \"library('WaterML')\""  # [win]

about:
  home: https://github.com/jirikadlec2/waterml
  license: MIT
  license_file: LICENSE
  license_family: MIT
  summary: 'Lets you connect to any of the Consortium of Universities for the Advancement of
    Hydrologic Sciences, Inc. (''CUAHSI'') Water Data Center ''WaterOneFlow'' web services
    and read any ''WaterML'' hydrological time series data file. To see list of available
    web services, see <http://hiscentral.cuahsi.org>. All versions of ''WaterML'' (1.0,
    1.1 and 2.0) and both types of the web service protocol (''SOAP'' and ''REST'')
    are supported. The package has six data download functions: GetServices(): show
    all public web services from the HIS Central Catalog. HISCentral_GetSites() and
    HISCentral_GetSeriesCatalog(): search for sites or time series from the HIS Central
    catalog based on geographic bounding box, server, or keyword. GetVariables(): Show
    a data.frame with all variables on the server. GetSites(): Show a data.frame with
    all sites on the server. GetSiteInfo(): Show what variables, methods and quality
    control levels are available at the specific site. GetValues(): Given a site code,
    variable code, start time and end time, fetch a data.frame of all the observation
    time series data values. The GetValues() function can also parse ''WaterML'' data
    from a custom URL or from a local file. The package also has five data upload functions:
    AddSites(), AddVariables(), AddMethods(), AddSources(), and AddValues(). These functions
    can be used for uploading data to a ''HydroServer Lite'' Observations Data Model
    (''ODM'') database via the ''JSON'' data upload web service interface.'

extra:
  recipe-maintainers:
    - ocefpaf
