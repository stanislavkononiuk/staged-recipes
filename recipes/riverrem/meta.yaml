# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "riverrem" %}
{% set version = "1.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  url: https://github.com/OpenTopography/RiverREM/archive/refs/tags/v{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: 6ae168c8896e2660cc1ad885a9301ea5c4237bfc24c5a25db08c10fcfe5f93e8
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python >=3.6
    - pip
  run:
    - python >=3.6
    - gdal
    - scipy
    - osmnx
    - shapely
    - geopandas
    - dataclasses

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - riverrem
    - riverrem.RasterViz
    - riverrem.REMMaker
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  # requires:
  #   - pip
  # commands:
  #   - pip check

about:
  home: https://github.com/OpenTopography/RiverREM
  summary: 'Make river relative elevation models (REM) and REM visualizations from an input digital elevation model (DEM).'
  description: |
    RiverREM is a Python package for automatically generating river relative elevation model (REM) visualizations 
    from nothing but an input digital elevation model (DEM). The package uses the OpenStreetMap API to retrieve 
    river centerline geometries over the DEM extent. Interpolation of river elevations is automatically handled 
    using a sampling scheme based on raster resolution and river sinuosity to create striking high-resolution 
    visualizations without interpolation artefacts straight out of the box and without additional manual steps. 
    The package also contains a helper class for creating DEM raster visualizations.
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: GPL-3.0-only
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". 
  # Optional
  license_family: GPL
  # It is required to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # Please also note that some projects have multiple license files which all need to be added using a valid yaml list.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE
  # The doc_url and dev_url are optional.
  doc_url: https://opentopography.github.io/RiverREM/
  dev_url: https://github.com/OpenTopography/RiverREM/

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - klarrieu
