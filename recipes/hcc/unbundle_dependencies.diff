diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4107991..56ebf7c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -322,52 +322,14 @@ if(EXISTS ${PROJECT_SOURCE_DIR}/clang-tools-extra/CMakeLists.txt)
   set(LLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR "${PROJECT_SOURCE_DIR}/clang-tools-extra")
 endif()
 
-add_subdirectory(${CLANG_SRC_DIR})
-get_directory_property(CLANG_VERSION DIRECTORY clang DEFINITION CLANG_VERSION)
-
-install(PROGRAMS $<TARGET_FILE:llvm-as>
-                 $<TARGET_FILE:llvm-dis>
-                 $<TARGET_FILE:llvm-link>
-                 $<TARGET_FILE:llvm-lto>
-                 $<TARGET_FILE:llvm-objdump>
-                 $<TARGET_FILE:llvm-mc>
-                 $<TARGET_FILE:opt>
-                 $<TARGET_FILE:llc>
-        DESTINATION bin
-        COMPONENT compiler)
-
-add_custom_target(clang_links DEPENDS clang)
-if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "ppc64le")
-  set(RT_BUILTIN_SUFFIX "powerpc64le")
-else()
-  set(RT_BUILTIN_SUFFIX ${CMAKE_SYSTEM_PROCESSOR})
-endif()
+add_custom_target(clang_links)
+
 add_custom_command(TARGET clang_links POST_BUILD
-  COMMAND ${CMAKE_COMMAND} -E create_symlink ${CLANG_BIN_DIR}/lib/clang/${CLANG_VERSION}/lib/linux/libclang_rt.builtins-${RT_BUILTIN_SUFFIX}.a ${PROJECT_BINARY_DIR}/lib/libclang_rt.builtins-${RT_BUILTIN_SUFFIX}.a
-  COMMAND ${CMAKE_COMMAND} -E create_symlink ${CLANG_BIN_DIR}/bin/clang ${PROJECT_BINARY_DIR}/bin/clang
-  COMMAND ${CMAKE_COMMAND} -E create_symlink ${CLANG_BIN_DIR}/bin/clang++ ${PROJECT_BINARY_DIR}/bin/clang++
   COMMAND ${CMAKE_COMMAND} -E create_symlink ${CLANG_BIN_DIR}/bin/hcc ${PROJECT_BINARY_DIR}/bin/hcc
 )
 
-# install certain LLVM libraries needed by HIP
-install(PROGRAMS $<TARGET_FILE:LLVMAMDGPUDesc>
-                 $<TARGET_FILE:LLVMAMDGPUUtils>
-                 $<TARGET_FILE:LLVMMC>
-                 $<TARGET_FILE:LLVMCore>
-                 $<TARGET_FILE:LLVMSupport>
-                 $<TARGET_FILE:LLVMSelectAcceleratorCode>
-                 $<TARGET_FILE:LLVMPromotePointerKernArgsToGlobal>
-                 $<TARGET_FILE:LLVMHello>
-        DESTINATION lib
-        COMPONENT compiler
-)
-
 # force library install path to lib
-set(CMAKE_INSTALL_LIBDIR "lib" CACHE INTERNAL "Installation directory for libraries" FORCE)
-
-install(FILES ${CLANG_BIN_DIR}/lib/clang/${CLANG_VERSION}/lib/linux/libclang_rt.builtins-${RT_BUILTIN_SUFFIX}.a
-        DESTINATION  ${CMAKE_INSTALL_LIBDIR}
-        COMPONENT compiler)
+set(CMAKE_INSTALL_LIBDIR "lib" CACHE INTERNAL "Installation directory for libraries")
 
 install( FILES ${CMAKE_CURRENT_SOURCE_DIR}/scripts/cmake/ImportedTargets.cmake
          DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/hcc )
@@ -391,7 +353,7 @@ if (HCC_INTEGRATE_ROCDL)
   set(GENERIC_IS_ZERO ON CACHE BOOL ON FORCE)
   set(BUILD_HC_LIB ON)
   set(AMDGCN_TARGETS_LIB_LIST "AMDGCN_LIB_TARGETS")
-  find_package(LLVM REQUIRED CONFIG PATHS ${CMAKE_BINARY_DIR}/compiler NO_DEFAULT_PATH)
+  find_package(LLVM REQUIRED CONFIG PATHS ${CMAKE_BINARY_DIR}/compiler)
 
   list(APPEND CMAKE_MODULE_PATH "${LLVM_CMAKE_DIR}")
   include(AddLLVM)
diff --git a/cmake-tests/CMakeLists.txt b/cmake-tests/CMakeLists.txt
index a851247..d8dbd49 100644
--- a/cmake-tests/CMakeLists.txt
+++ b/cmake-tests/CMakeLists.txt
@@ -1,6 +1,6 @@
 
 if(NOT CMAKE_CXX_COMPILER MATCHES ".*hcc")
-    set(CMAKE_CXX_COMPILER "${PROJECT_BINARY_DIR}/compiler/bin/clang++")
+    set(CMAKE_CXX_COMPILER "clang++")
 endif()
 
 add_executable(cmake-test cmake-test.cpp)
@@ -17,7 +17,7 @@ endif()
 set_target_properties(cmake-test PROPERTIES LINK_FLAGS ${new_cmake_test_link_flags})
 
 if(TARGET hccrt)
-    add_dependencies(cmake-test clang_links rocdl_links mcwamp_hsa mcwamp)
+    add_dependencies(cmake-test clang_links mcwamp_hsa mcwamp)
     target_link_libraries(cmake-test hccrt hc_am)
 else()
     # Append default hcc installation
diff --git a/scripts/cmake/MCWAMP.cmake b/scripts/cmake/MCWAMP.cmake
index 05c1f6a..e1f0fc1 100644
--- a/scripts/cmake/MCWAMP.cmake
+++ b/scripts/cmake/MCWAMP.cmake
@@ -20,7 +20,7 @@ include(ImportedTargets)
 # with debug information while other parts are not.
 
 macro(amp_target name )
-  set(CMAKE_CXX_COMPILER "${PROJECT_BINARY_DIR}/compiler/bin/clang++")
+  set(CMAKE_CXX_COMPILER "clang++")
   add_compile_options(-std=c++11)
 
   # printf has to be disable on RHEL/CentOS 7.x due to unstable support of std::regex
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index bb9d4b1..6751776 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -64,7 +64,7 @@ endif()
 set(NUM_TEST_THREADS "4" CACHE STRING "Number of test threads")
 
 add_custom_target(test
-  COMMAND python ${LLVM_ROOT}/bin/llvm-lit -j ${NUM_TEST_THREADS} --path ${LLVM_TOOLS_DIR} -sv ${CMAKE_CURRENT_BINARY_DIR}
+  COMMAND lit -j ${NUM_TEST_THREADS} --path ${LLVM_TOOLS_DIR} -sv ${CMAKE_CURRENT_BINARY_DIR}
   # DEPENDS ${CPPAMP_GTEST_LIB}
   COMMENT "Running HCC regression tests")
 
diff --git a/tests/Unit/AcceleratorViewCopy/avcopy_classic.cpp b/tests/Unit/AcceleratorViewCopy/avcopy_classic.cpp
index e919a5a..18e220c 100644
--- a/tests/Unit/AcceleratorViewCopy/avcopy_classic.cpp
+++ b/tests/Unit/AcceleratorViewCopy/avcopy_classic.cpp
@@ -7,7 +7,7 @@
 #include <hc.hpp>
 #include <hc_am.hpp>
 
-#include "/opt/rocm/include/hsa/hsa.h"
+#include "hsa/hsa.h"
 
 #include <algorithm>
 #include <cassert>
@@ -299,4 +299,4 @@ int main()
     pass = pass && test_size<int>(*gpu_acc, 1024 * 1024 * 16);
 
     return EXIT_SUCCESS;
-}
\ No newline at end of file
+}
