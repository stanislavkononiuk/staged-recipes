{% set version = '0.0.5' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-ccdralgorithm
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/ccdrAlgorithm_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/ccdrAlgorithm/ccdrAlgorithm_{{ version }}.tar.gz
  sha256: cc33ce8d5261f9d23147c767d7c45f962ca11edb6ca85ad0c85a794c2e38339c

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('cxx') }}      # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
  host:
    - r-base
    - r-rcpp >=0.11.0
    - r-sparsebnutils >=0.0.5
  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp >=0.11.0
    - r-sparsebnutils >=0.0.5

test:
  commands:
    - $R -e "library('ccdrAlgorithm')"           # [not win]
    - "\"%R%\" -e \"library('ccdrAlgorithm')\""  # [win]

about:
  home: https://github.com/itsrainingdata/ccdrAlgorithm
  license: GPL (>= 2)
  summary: Implementation of the CCDr (Concave penalized Coordinate Descent with reparametrization)
    structure learning algorithm as described in Aragam and Zhou (2015) <http://www.jmlr.org/papers/v16/aragam15a.html>.
    This is a fast, score-based method for learning Bayesian networks that uses sparse
    regularization and block-cyclic coordinate descent.
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r
    - dpryan79
