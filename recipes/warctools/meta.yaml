{%set name = "warctools" %}
{%set version = "4.10.0" %}
{%set compress_type = "tar.gz" %}
{%set hash_type = "sha256" %}
{%set hash_val = "ce0c6e274db8ac8810f7c97b3943e8e8deadbc3f5c982db77cddaae2d2ae6170" %}
{%set build_num = "0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.{{ compress_type }}
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ compress_type }}
  {{ hash_type }}: {{ hash_val }}

build:
  skip: True  # [py2k or py35]
  number: {{ build_num }}
  preserve_egg_dir: True
  script: python setup.py install --single-version-externally-managed --record=record.txt
  entry_points:
    - warcdump=hanzo.warcdump:run
    - arc2warc=hanzo.arc2warc:run
    - warcextract=hanzo.warcextract:run
    - warcfilter=hanzo.warcfilter:run
    - warcindex=hanzo.warcindex:run
    - warclinks=hanzo.warclinks:run
    - warcvalid=hanzo.warcvalid:run
    - warc2warc=hanzo.warc2warc:run
    - warcpayload=hanzo.warcpayload:run

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools

test:
  imports:
    - hanzo
    - hanzo.httptools
    - hanzo.warctools

  commands:
    - warcdump --help
    - arc2warc --help
    - warcextract --help
    - warcfilter --help
    - warcindex --help
    - warclinks --help
    - warcvalid --help
    - warc2warc --help
    - warcpayload --help

about:
  home: https://github.com/internetarchive/warctools
  license: MIT
  #license_file: No MANIFEST.in in source
  license_family: MIT
  summary: 'Command line tools and libraries for handling and manipulating WARC files (and HTTP contents)'
  license_family: MIT
  dev_url: https://github.com/internetarchive/warctools

extra:
  recipe-maintainers:
    - pmlandwehr
