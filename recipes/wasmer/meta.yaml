{% set name = "wasmer" %}
{% set version = "1.0.1" %}
# TODO: Also Included in the 1.0.1 release is an experimental, minified version of wasmer called wasmer-headless that can only run precompiled Wasm modules.

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/wasmerio/{{ name }}/archive/{{ version }}.tar.gz
  sha256: 2143a37e180a77af84dac53526b1c6f44e8482ff9e7334dbd2aa014c90b84b8e

build:
  skip: true  # [osx]
  number: 0

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - rust >=1.47
    - llvmdev >=10
  host:
    - libffi
    - openssl
    - zlib
  run: []

# TODO: ideally have some "canonical" WASM to run...
{% set test_wasm = "tests/wasi-wast/wasi/snapshot1/hello.wasm" %}
{% set test_text = "Hello, world!" %}

test:
  source_files:
    - {{ name }}-{{ version }}-cargo-dependencies.json
    - {{ test_wasm }}
  requires:
    - python >=3.6
    - pytest
    - ruamel_yaml
  commands:
    - wasmer --version
    - wasmer --help
    - wasmer validate {{ test_wasm }}
    - wasmer run {{ test_wasm }}
    - wasmer run {{ test_wasm }} | grep '{{ test_text }}'
    - python test_licenses.py --ignore wasmer
    # TODO: enable C API, multiple outputs, etc.
    # - mkdir .wsmr
    # {% for backend in ["singlepass", "cranelift", "llvm"] %}
    # - wasmer run --{{ backend }} {{ test_wasm }}
    # - wasmer run --{{ backend }} {{ test_wasm }} | grep '{{ test_text }}'
    # - WASMER_DIR=$PREFIX wasmer create-exe --{{ backend }} {{ test_wasm }} -o ./hello-{{ backend }}
    # - ls -lathr hello-{{ backend }}
    # - ./hello-{{ backend }}
    # - ./hello-{{ backend }} | grep '{{ test_text }}'
    # {% endfor %}

about:
  home: https://wasmer.io
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    # TODO: this is... some of the third-party licenses... need the whole rust license toolchain
    - ATTRIBUTIONS.md
  summary: Universal WebAssembly runtime
  description: |
    Wasmer is a standalone JIT WebAssembly runtime, aiming to be fully
    compatible with WASI and Emscripten.
  dev_url: https://github.com/wasmerio/wasmer
  doc_url: https://docs.wasmer.io
  doc_source_url: https://github.com/wasmerio/docs.wasmer.io

extra:
  recipe-maintainers:
    - bollwyvl
