{% set version = '1.2.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-edfreader
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/edfReader_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/edfReader/edfReader_{{ version }}.tar.gz
  sha256: 1602b74abb498f5133dd74f93242565b42f61869ca39ee8cbad934e84856ce1c

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
  run:
    - r-base

test:
  commands:
    - $R -e "library('edfReader')"           # [not win]
    - "\"%R%\" -e \"library('edfReader')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=edfReader
  license: GPL-3.0-only
  summary: |
    Reads European Data Format files EDF and EDF+, see <http://www.edfplus.info>, BioSemi
    Data Format files BDF, see <http://www.biosemi.com/faq/file_format.htm>, and BDF+
    files, see <http://www.teuniz.net/edfbrowser/bdfplus%20format%20description.html>.
    The files are read in two steps: first the header is read and then the signals (using
    the header object as a parameter).
  license_family: GPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - dipterix
    - conda-forge/r

# Package: edfReader
# Type: Package
# Title: Reading EDF(+) and BDF(+) Files
# Version: 1.2.1
# Date: 2019-03-19
# Authors@R: person ("Jan", "Vis", email = "jan@visconsultancy.eu", role = c("aut", "cre"))
# Maintainer: Jan Vis <jan@visconsultancy.eu>
# Description: Reads European Data Format files EDF and EDF+, see <http://www.edfplus.info>, BioSemi Data Format files BDF, see <http://www.biosemi.com/faq/file_format.htm>, and BDF+ files, see <http://www.teuniz.net/edfbrowser/bdfplus%20format%20description.html>. The files are read in two steps: first the header is read and then the signals (using the header object as a parameter).
# License: GPL-3
# Language: en-GB
# LazyData: TRUE
# Imports:
# RoxygenNote: 6.0.1
# Depends: R (>= 3.2.0)
# Suggests: testthat, knitr, rmarkdown, ggplot2
# VignetteBuilder: knitr
# NeedsCompilation: no
# Packaged: 2019-03-21 16:57:07 UTC; Jan
# Author: Jan Vis [aut, cre]
# Repository: CRAN
# Date/Publication: 2019-03-21 18:00:02 UTC
