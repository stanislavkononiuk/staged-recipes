diff --git a/modules/cctbx_project/cbflib_adaptbx/SConscript b/modules/cctbx_project/cbflib_adaptbx/SConscript
index ee0fc3525c..4ae2fbf349 100644
--- a/modules/cctbx_project/cbflib_adaptbx/SConscript
+++ b/modules/cctbx_project/cbflib_adaptbx/SConscript
@@ -67,70 +67,3 @@ if os.path.isfile( os.path.join(env_etc.cbflib_dist,"src","cbf_ws.c") ):
 cpppath = env_etc.cbflib_common_includes
 if (libtbx.env.build_options.use_conda):
   cpppath += env_etc.conda_cpppath
-
-env.Append(CPPPATH=cpppath)
-env.StaticLibrary(target='#lib/cbf',
-  source = [prefix+"/"+s for s in [
-    "src/img.c",
-    "src/cbf.c",
-    "src/cbf_alloc.c",
-    "src/cbf_ascii.c",
-    "src/cbf_binary.c",
-    "src/cbf_byte_offset.c",
-    "src/cbf_canonical.c",
-    "src/cbf_codes.c",
-    "src/cbf_compress.c",
-    "src/cbf_context.c",
-    "src/cbf_file.c",
-    "src/cbf_lex.c",
-    "src/cbf_nibble_offset.c",
-    "src/cbf_packed.c",
-    "src/cbf_predictor.c",
-    "src/cbf_read_binary.c",
-    "src/cbf_read_mime.c",
-    "src/cbf_simple.c",
-    "src/cbf_string.c",
-    "src/cbf_stx.c",
-    "src/cbf_tree.c",
-    "src/cbf_uncompressed.c",
-    "src/cbf_write.c",
-    "src/cbf_write_binary.c",
-    "src/md5c.c",
-  ] + cbflib_092_forward ] + [
-    "detectors/mar_adaptor.cpp",
-    "detectors/cbf_adaptor.cpp",
-    "detectors/cbf_byte_offset_optimized.cpp",
-    "detectors/buffer_based_service.cpp",
-  ])
-
-if (not env_etc.no_boost_python):
-  Import("env_no_includes_boost_python_ext")
-
-  env_cbflib_boost_python_ext = env_no_includes_boost_python_ext.Clone()
-  env_cbflib_boost_python_ext.Prepend(CPPFLAGS=["-DSWIG_PYTHON_STRICT_BYTE_CHAR"])
-
-  env_etc.include_registry.append(
-    env=env_cbflib_boost_python_ext,
-    paths=env_etc.cbflib_common_includes + [env_etc.python_include])
-
-  env_cbflib_boost_python_ext.SharedLibrary(
-    target='#lib/_pycbf',
-    source=[prefix+"/pycbf/pycbf_wrap.c",
-            prefix+"/src/cbf_airy_disk.c"],
-    LIBS=["cbf"]+env_etc.libs_python+env_etc.libm)
-
-  Export("env_cbflib_boost_python_ext")
-
-  SConscript("detectors/boost_python/SConscript")
-
-env_standalone = env.Clone(LIBS = [env_etc.libm,],CPPPATH=cpppath)
-env_standalone.Prepend(LIBS=["cbf",])
-
-for source in ["detectors/tst_memory",]:
-  target = "cbflib."+os.path.basename(source)
-  exe = env_standalone.Program(
-    target="#exe_dev/"+env["PROGPREFIX"]+target+env["PROGSUFFIX"],
-    source=source+".cpp")
-  libtbx.env.write_dispatcher_in_bin(
-    source_file=exe[0].get_abspath(),
-    target_file=target)
