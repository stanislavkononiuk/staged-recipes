{% set version = '0.4.2' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-reproj
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/reproj_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/reproj/reproj_{{ version }}.tar.gz
  sha256: d15a2b3b0b7da4c98c664728a21907c9d1e9e78059163aa5491938d6f50ead53

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-proj >=0.1.6
    - r-crsmeta >=0.3.0
    - r-proj4
  run:
    - r-base
    - r-proj >=0.1.6
    - r-crsmeta >=0.3.0
    - r-proj4

test:
  commands:
    - $R -e "library('reproj')"           # [not win]
    - "\"%R%\" -e \"library('reproj')\""  # [win]

about:
  home: https://github.com/hypertidy/reproj/
  license: GPL-3.0-only
  summary: Transform coordinates from a specified source to a specified target map projection.
    This uses the 'PROJ' library directly, by wrapping the 'PROJ' package (if functional),
    otherwise the 'proj4' package. The 'reproj()' function is generic, methods may be
    added to remove the need for an explicit source definition. If 'proj4' is in use
    'reproj()' handles the requirement for conversion of angular units where necessary.
    This is for use primarily to transform generic data formats and direct leverage
    of the underlying 'PROJ' library. (There are transformations that aren't possible
    with 'PROJ' and that are provided by the 'GDAL' library, a limitation which users
    of this package should be aware of.) The 'PROJ' library is available at <https://proj.org/>.
  license_family: GPL3
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3

extra:
  recipe-maintainers:
    - conda-forge/r
