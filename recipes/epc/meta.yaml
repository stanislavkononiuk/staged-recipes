{% set name = "epc" %}
{% set version = "0.0.5" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "a14d2ea74817955a20eb00812e3a4630a132897eb4d976420240f1152c0d7d25" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  build:
    - python
    - pip
    - sexpdata >=0.0.3
  run:
    - python
    - sexpdata >=0.0.3

test:
  imports:
    - epc
    - epc.tests

about:
  home: https://github.com/tkf/python-epc
  license: GPL3
  license_family: GPL3
  license_file: COPYING
  summary: EPC (RPC stack for Emacs Lisp) implementation in Python
  description: "EPC (RPC stack for Emacs Lisp) for Python\n=========================================\n\nLinks:\n\n* `Documentation <http://python-epc.readthedocs.org/>`_ (at Read the Docs)\n* `Repository\
    \ <https://github.com/tkf/python-epc>`_ (at GitHub)\n* `Issue tracker <https://github.com/tkf/python-epc/issues>`_ (at GitHub)\n* `PyPI <http://pypi.python.org/pypi/epc>`_\n* `Travis CI <https://travis-ci.org/#!/tkf/python-epc>`_\
    \ |build-status|\n\nOther resources:\n\n* `kiwanami/emacs-epc <https://github.com/kiwanami/emacs-epc>`_\n  (Client and server implementation in Emacs Lisp and Perl.)\n* `tkf/emacs-jedi <https://github.com/tkf/emacs-jedi>`_\n\
    \  (Python completion for Emacs using EPC server.)\n\n.. |build-status|\n   image:: https://secure.travis-ci.org/tkf/python-epc.png\n           ?branch=master\n   :target: http://travis-ci.org/tkf/python-epc\n\
    \   :alt: Build Status\n\n\nWhat is this?\n-------------\n\nEPC is an RPC stack for Emacs Lisp and Python-EPC is its server side\nand client side implementation in Python.  Using Python-EPC, you can\n\
    easily call Emacs Lisp functions from Python and Python functions from\nEmacs.  For example, you can use Python GUI module to build widgets\nfor Emacs (see `examples/gtk/server.py`_ for example).\n\n\
    Python-EPC is tested against Python 2.6, 2.7 and 3.2.\n\nInstall\n-------\n\nTo install Python-EPC and its dependency sexpdata_, run the following\ncommand.::\n\n   pip install epc\n\n.. _sexpdata:\
    \ https://github.com/tkf/sexpdata\n\n\nUsage\n-----\n\nSave the following code as ``my-server.py``.\n(You can find functionally the same code in `examples/echo/server.py`_)::\n\n   from epc.server import\
    \ EPCServer\n\n   server = EPCServer(('localhost', 0))\n\n   @server.register_function\n   def echo(*a):\n       return a\n\n   server.print_port()\n   server.serve_forever()\n\n\nAnd then run the following\
    \ code from Emacs.\nThis is a stripped version of `examples/echo/client.el`_ included in\nPython-EPC repository_.::\n\n   (require 'epc)\n\n   (defvar my-epc (epc:start-epc \"python\" '(\"my-server.py\"\
    )))\n\n   (deferred:$\n     (epc:call-deferred my-epc 'echo '(10))\n     (deferred:nextc it\n       (lambda (x) (message \"Return : %S\" x))))\n\n   (message \"Return : %S\" (epc:call-sync my-epc 'echo\
    \ '(10 40)))\n\n\n.. _examples/echo/server.py:\n   https://github.com/tkf/python-epc/blob/master/examples/echo/server.py\n.. _examples/echo/client.el:\n   https://github.com/tkf/python-epc/blob/master/examples/echo/client.el\n\
    \nIf you have carton_ installed, you can run the above sample by\nsimply typing the following commands::\n\n   make elpa        # install EPC in a separated environment\n   make run-sample  # run examples/echo/client.el\n\
    \n.. _carton: https://github.com/rejeep/carton\n\n\nFor example of bidirectional communication and integration with GTK,\nsee `examples/gtk/server.py`_.  You can run this example by::\n\n   make elpa\n\
    \   make run-gtk-sample  # run examples/gtk/client.el\n\n.. _examples/gtk/server.py:\n   https://github.com/tkf/python-epc/blob/master/examples/gtk/server.py\n\n\nLicense\n-------\n\nPython-EPC is licensed\
    \ under GPL v3.\nSee COPYING for details."

extra:
  recipe-maintainers:
    - asmeurer
