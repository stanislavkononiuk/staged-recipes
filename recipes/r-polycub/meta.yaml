{% set version = '0.7.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-polycub
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/polyCub_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/polyCub/polyCub_{{ version }}.tar.gz
  sha256: 675c3f2b2b5977c03d500bbcaedebde72e9ae8e7a95652df30f86d6278b1c152

build:
  merge_build_host: True  # [win]
  number: 0

  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-sp >=1.0_11

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-sp >=1.0_11

test:
  commands:
    - $R -e "library('polyCub')"           # [not win]
    - "\"%R%\" -e \"library('polyCub')\""  # [win]

about:
  home: https://github.com/bastistician/polyCub
  license: GPL-2
  summary: 'Numerical integration of continuously differentiable functions f(x,y) over simple
    closed polygonal domains. The following cubature methods are implemented: product
    Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>),
    the simple two-dimensional midpoint rule (wrapping ''spatstat'' functions), adaptive
    cubature for radially symmetric functions via line integrate() along the polygon
    boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration
    of the bivariate Gaussian density based on polygon triangulation. For simple integration
    along the axes, the ''cubature'' package is more appropriate.'

  license_family: GPL2
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: polyCub
# Title: Cubature over Polygonal Domains
# Version: 0.7.1
# Date: 2019-02-07
# Authors@R: c( person("Sebastian", "Meyer", email = "seb.meyer@fau.de", role = c("aut","cre","trl"), comment = c(ORCID = "0000-0002-1791-9449")), person("Leonhard", "Held", email = "Leonhard.Held@uzh.ch", role = "ths"), person("Michael", "Hoehle", email = "hoehle@math.su.se", role = "ths") )
# Description: Numerical integration of continuously differentiable functions f(x,y) over simple closed polygonal domains. The following cubature methods are implemented: product Gauss cubature (Sommariva and Vianello, 2007, <doi:10.1007/s10543-007-0131-2>), the simple two-dimensional midpoint rule (wrapping 'spatstat' functions), adaptive cubature for radially symmetric functions via line integrate() along the polygon boundary (Meyer and Held, 2014, <doi:10.1214/14-AOAS743>, Supplement B), and integration of the bivariate Gaussian density based on polygon triangulation. For simple integration along the axes, the 'cubature' package is more appropriate.
# License: GPL-2
# URL: https://github.com/bastistician/polyCub
# BugReports: https://github.com/bastistician/polyCub/issues
# Depends: R (>= 2.15.0), methods
# Imports: grDevices, graphics, stats, sp (>= 1.0-11)
# Suggests: spatstat, lattice, testthat, mvtnorm, statmod, rgeos, gpclib, cubature, knitr, rmarkdown, microbenchmark
# RoxygenNote: 6.1.1
# VignetteBuilder: knitr, rmarkdown
# NeedsCompilation: yes
# Packaged: 2019-02-07 10:20:59 UTC; smeyer
# Author: Sebastian Meyer [aut, cre, trl] (<https://orcid.org/0000-0002-1791-9449>), Leonhard Held [ths], Michael Hoehle [ths]
# Maintainer: Sebastian Meyer <seb.meyer@fau.de>
# Repository: CRAN
# Date/Publication: 2019-02-07 16:30:02 UTC
