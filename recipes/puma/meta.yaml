# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "puma" %}
{% set version = "3.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://gitlab.com/fsemerar/puma-dev/-/archive/main/puma-dev-main.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: ec0450d99d5c7d32b3605b145ae1d594d334a05385865e4a02b96d45fbbcdccf
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # script: ${RECIPE_DIR}/build.sh
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # script: "{{ PYTHON }} -m pip install . -vv"
  skip: True  # [win]


requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make
    # - swig
    # - cython
    - eigen
    - fftw
    - openmp
    - libtiff
    # - llvm-openmp  # [osx]
    # - libgomp  # [linux]
    
  host:
    # - python>=3.7
    # - pip
    # - numpy>=1.20.0
    # - scipy>=1.6.2
    # - scikit-image
    # - scikit-umfpack
    # - matplotlib
    # - ipympl
    # - pyevtk
    # - paraview==5.7.0  # [osx]
    # - paraview==5.8.1  # [linux]
    # - visvis
    # - pyqt  # [osx]
    - eigen
    - fftw
    - openmp
    - libtiff
    # - llvm-openmp  # [osx]
    # - libgomp  # [linux]
    
  run:
    - eigen
    - fftw
    - openmp
    - libtiff
    # - llvm-openmp  # [osx]
    # - libgomp  # [linux]

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - pumapy
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pumaX_main

about:
  home: https://gitlab.com/jcfergus/puma-dev
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: NASA Open Source
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  # license_family: MIT
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE_2021.pdf
  summary: 'A package to compute material properties from micro-CT data.'
  # The remaining entries in this section are optional, but recommended.
  description: |
    puma description.
  doc_url: https://puma-nasa.readthedocs.io/
  dev_url: https://gitlab.com/jcfergus/puma-dev

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - fsemerar
