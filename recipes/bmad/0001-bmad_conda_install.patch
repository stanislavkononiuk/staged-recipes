diff --git a/bmad/CMakeLists.txt b/bmad/CMakeLists.txt
index 7422aee..9abaeaf 100644
--- a/bmad/CMakeLists.txt
+++ b/bmad/CMakeLists.txt
@@ -7,8 +7,17 @@ SET (CREATE_SHARED true)
 
 SET (PLOT_LINK_LIBS $ENV{PLOT_LINK_LIBS})
 
-SET (INC_DIRS
+# If this is a conda build, xraylib is contained
+# one level deeper in the include folder
+IF ($ENV{ACC_CONDA_BUILD})
+  SET (INC_DIRS
+    $ENV{PREFIX}/include/xraylib/
   )
+ELSE ()
+  set (INC_DIRS
+
+  )
+ENDIF ()
 
 SET (SRC_DIRS 
   code 
diff --git a/build_system/Master.cmake b/build_system/Master.cmake
index bfac3db..6522bf9 100644
--- a/build_system/Master.cmake
+++ b/build_system/Master.cmake
@@ -235,8 +235,6 @@ ENDIF ()
 
 IF (${CMAKE_SYSTEM_NAME} MATCHES "Linux" AND NOT $ENV{ACC_PLOT_PACKAGE} MATCHES "none")
   SET (ACC_PLOT_LIB_DIRS /usr/lib64)
-ELSEIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-  SET (ACC_PLOT_LIB_DIRS /opt/local/lib /opt/X11/lib)
 ENDIF ()
 
 IF (${CMAKE_Fortran_COMPILER} STREQUAL "ifort" AND "$ENV{ACC_ENABLE_SHARED}" MATCHES "Y")
diff --git a/fgsl/acc_build_fgsl b/fgsl/acc_build_fgsl
index 826f20b..97d911b 100755
--- a/fgsl/acc_build_fgsl
+++ b/fgsl/acc_build_fgsl
@@ -15,6 +15,11 @@ func_configure_make_install () {
             BUILD_SHARED=1
             ;;
     esac
+    case "${ACC_CONDA_BUILD}" in
+        "Y" | "y" | "1" )
+            CONDA_BUILD=1
+            ;;
+    esac
 
     cd ${WORK_DIR}
 
@@ -22,17 +27,23 @@ func_configure_make_install () {
 
     if [ ! -e ALREADY_BUILT ] ; then
 
-	if ( [[ "${ACC_PKG}" ]] && [[ "${ACC_PKG}/${BUILD_TYPE}/lib/libgsl*19*" ]] ) ; then
-	    export GSLLIBDIR=${ACC_PKG}/${BUILD_TYPE}/lib
-	    export GSLINCDIR=${ACC_PKG}/${BUILD_TYPE}/include
-	    echo -e "Uisng GSL version 2.3 library in ${ACC_PKG}/${BUILD_TYPE}/lib\n"
-	elif [[ "${OUTPUT_DIR}/lib/libgsl*19*" ]] ; then
-	    export GSLLIBDIR=${OUTPUT_DIR}/lib
-	    export GSLINCDIR=${OUTPUT_DIR}/include
-	    echo -e "Uisng GSL version 2.3 library in ${OUTPUT_DIR}/lib\n"
-	else
-	    echo -e "Required GSL version 2.3 not found, exiting...\n"
-	    exit 72
+	if ( [[ "${CONDA_BUILD}" ]] ) ; then
+            export GSLLIBDIR=${PREFIX}/lib
+	    export GSLINCDIR=${PREFIX}/include
+	    echo -e "Uisng GSL library from conda in ${GSLLIBDIR}\n"
+        else
+    	    if ( [[ "${ACC_PKG}" ]] && [[ "${ACC_PKG}/${BUILD_TYPE}/lib/libgsl*19*" ]] ) ; then
+	        export GSLLIBDIR=${ACC_PKG}/${BUILD_TYPE}/lib
+	        export GSLINCDIR=${ACC_PKG}/${BUILD_TYPE}/include
+	        echo -e "Uisng GSL version 2.3 library in ${ACC_PKG}/${BUILD_TYPE}/lib\n"
+	    elif [[ "${OUTPUT_DIR}/lib/libgsl*19*" ]] ; then
+	        export GSLLIBDIR=${OUTPUT_DIR}/lib
+	        export GSLINCDIR=${OUTPUT_DIR}/include
+	        echo -e "Uisng GSL version 2.3 library in ${OUTPUT_DIR}/lib\n"
+	    else
+	        echo -e "Required GSL version 2.3 not found, exiting...\n"
+	        exit 72
+	    fi
 	fi
 
 	[ "${ACC_ENABLE_OPENMP}" == "Y" ] && CONFIG_OPTIONS="--enable-openmp"
diff --git a/tao/cmake.tao b/tao/cmake.tao
index 333fd3f..58baac3 100644
--- a/tao/cmake.tao
+++ b/tao/cmake.tao
@@ -25,8 +25,11 @@ SET (LINK_LIBS
   hdf5
 )
 
-IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-  link_directories(/opt/local/lib)
+# If this is a conda build we must expand the
+# library search with the PREFIX/lib
+# folder.
+IF ($ENV{ACC_CONDA_BUILD})
+  link_directories($ENV{PREFIX}/lib)
 ENDIF ()
 
 IF ($ENV{ACC_PLOT_PACKAGE} MATCHES "plplot")
diff --git a/tao/customization/cmake.custom_tao b/tao/customization/cmake.custom_tao
index 503c1c5..4ebd846 100644
--- a/tao/customization/cmake.custom_tao
+++ b/tao/customization/cmake.custom_tao
@@ -23,10 +23,6 @@ set (LINK_LIBS
   hdf5
 )
 
-IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-  link_directories(/opt/local/lib)
-ENDIF ()
-
 IF ($ENV{ACC_PLOT_PACKAGE} MATCHES "plplot")
   set (SHARED_LINK_LIBS
     pangocairo-1.0
diff --git a/util/Distribution_User_Utility_Wrapper b/util/Distribution_User_Utility_Wrapper
index efadc40..41d0674 100755
--- a/util/Distribution_User_Utility_Wrapper
+++ b/util/Distribution_User_Utility_Wrapper
@@ -11,11 +11,24 @@
 [ "${ACC_PLOT_PACKAGE}" == "pgplot" ] && export ACC_PLOT_PACKAGE_DIR="PGPLOT" 
 [ "${ACC_PLOT_PACKAGE}" == "plplot" ] && export ACC_PLOT_PACKAGE_DIR="plplot"
 
-# List of Project Directories - Order here matters!
-DIRLIST=( ${ACC_PLOT_PACKAGE_DIR} hdf5 fftw lapack gsl fgsl forest recipes_f-90_LEPP sim_utils xraylib bmad tao cpp_bmad_interface examples bsim util_programs lux regression_tests )
+case "${ACC_CONDA_BUILD}" in
+    "Y" | "y" | "1" )
+    CONDA_BUILD=1
+    ;;
+esac
+
+if ( [[ "${CONDA_BUILD}" ]] ) ; then
+    DIRLIST=( fgsl forest recipes_f-90_LEPP sim_utils bmad tao cpp_bmad_interface bsim util_programs lux )
+    # plplot is not available via conda so we use the source with bmad and build it
+    [ "${ACC_PLOT_PACKAGE}" == "plplot" ] && DIRLIST=( plplot ${DIRLIST[*]} )
+else
+    # List of Project Directories - Order here matters!
+    DIRLIST=( ${ACC_PLOT_PACKAGE_DIR} hdf5 fftw lapack gsl fgsl forest recipes_f-90_LEPP sim_utils xraylib bmad tao cpp_bmad_interface examples bsim util_programs lux regression_tests )
+
+    # Build OpenMPI, if requested
+    [ "${ACC_ENABLE_MPI}" == "Y" ] && DIRLIST=( openmpi ${DIRLIST[*]} )
+fi
 
-# Build OpenMPI, if requested
-[ "${ACC_ENABLE_MPI}" == "Y" ] && DIRLIST=( openmpi ${DIRLIST[*]} )
 
 # General Distribution Build Function
 func_dist_build () { 
diff --git a/util/acc_build_common b/util/acc_build_common
index 6c4e1ef..da63504 100755
--- a/util/acc_build_common
+++ b/util/acc_build_common
@@ -168,40 +168,14 @@ func_set_fpic_flags () {
 # Function to check for required MacPorts install on Mac OS X
 
 func_check_macports () {
+    if ( [[ "${CONDA_BUILD}" ]] ) ; then
+	    return
+    fi
 
     if ( [ `uname` == "Darwin" ] ) ; then
 	if ( [ "$(type gcc &> /dev/null ; echo $?)" -eq 0 ] ) ; then
 	    export VER=$(uname -r | cut -d. -f1)
 	    export GCC_PATH=$(type gcc | cut -d" " -f3)
-	    if ( [ "${GCC_PATH}" != "/usr/local/bin/gcc" ] ) ; then
-		if ( [ "${VER}" -gt 11 ] && [ ! -d "/opt/local/etc/macports" ] ) ; then 
-		    echo -e \
-			 "\nCan't find GNU GCC, please install MacPorts, using instructions on:" \
-			 "\n\n    http://www.macports.org/install.php" \
-			 "\n\nThen follow instructions on:" \
-			 "\n\n    ${ACC_LIB_TOOLS_WIKI}\n"
-		    exit 69
-		elif [ ! -L /opt/local/bin/gcc ] ; then
-		    echo -e \
-			 "\nNo selected MacPorts gcc version..." \
-			 "\n\nPlease follow instructions on:" \
-		    "\n\n    ${ACC_LIB_TOOLS_WIKI}\n"
-		    exit 70
-		elif ( [ "${GCC_PATH}" == "/usr/bin/gcc" ] && [ -d "/opt/local/etc/macports" ] ) ; then
-		    echo -e \
-			 "\nWarning: MacPorts gcc is not in your PATH..." \
-			 "\nPlease add the following line to the bottom of your ~/.bash_profile or ~/.bashrc file:" \
-			 "\n\n    export PATH=/opt/local/bin:/opt/local/sbin:\$PATH" \
-			 "\n\nThen logout and log back in, cd into the Bmad distribution folder and" \
-			 "\nreinitialize the Bmad Environment using:" \
-			 "\n\n    source util/dist_source_me\n"
-		    exit 78
-		elif [ "${GCC_PATH}" == "/opt/local/bin/gcc" ] ; then
-		    export CC=gcc
-		fi
-	    elif ( [ "${GCC_PATH}" == "/usr/local/bin/gcc" ] ) ; then
-		export CC=gcc
-	    fi
 	else
 	    echo -e \
 		 "\nCan't find GCC, please install Xcode and MacPorts, using instructions on:" \
@@ -508,10 +482,6 @@ func_install_utilities () {
 	fi
     }
 
-    if ( [ `uname` == "Darwin" ] && [ -d "/opt/local/libexec/gnubin" ] ) ; then
-        export PATH=/opt/local/libexec/gnubin${PATH:+:${PATH}}
-    fi
-
     export PATH=${UTIL_DIR}/bin:${OTHER_OUTPUT_DIR}/gnu_utilities/bin${PATH:+:${PATH}}
     export LD_LIBRARY_PATH=${UTIL_DIR}/lib:${OTHER_OUTPUT_DIR}/gnu_utilities/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
 
@@ -699,6 +669,11 @@ func_cleanup_variables () {
 
 
 # Main script
+case "${ACC_CONDA_BUILD}" in
+    "Y" | "y" | "1" )
+        CONDA_BUILD=1
+        ;;
+esac
 
 if ( [ "${1}" == "-debug" ] || [ "${1}" == "-production" ] ) ; then
 
diff --git a/util/dist_prefs b/util/dist_prefs
index 293a3d3..0538d90 100644
--- a/util/dist_prefs
+++ b/util/dist_prefs
@@ -157,3 +157,25 @@ export ACC_ENABLE_PROFILING="N"
 # value is "2" and cannot be set lower than "1"
 #-----------------------------------------------------------
 export ACC_SET_GMAKE_JOBS="2"
+
+#-----------------------------------------------------------
+# By default the conda build flag is off.
+# Setting the variable ACC_CONDA_BUILD here to "Y" will
+# enable the compilation path assuming external
+# dependencies from the system and it will also reduce
+# the number of targets to only essential pieces.
+# E.g.: regression tests are not compiled
+#-----------------------------------------------------------
+export ACC_CONDA_BUILD="N"
+export DIST_F90_REQUEST="gfortran"
+export ACC_PLOT_PACKAGE="pgplot"
+export ACC_PLOT_DISPLAY_TYPE="X"
+export ACC_ENABLE_OPENMP="N"
+export ACC_ENABLE_MPI="N"
+export ACC_FORCE_BUILTIN_MPI="N"
+export ACC_ENABLE_GFORTRAN_OPTIMIZATION="Y"
+export ACC_ENABLE_SHARED="Y"
+export ACC_ENABLE_FPIC="Y"
+export ACC_ENABLE_PROFILING="N"
+export ACC_SET_GMAKE_JOBS="8"
+export ACC_CONDA_BUILD="Y"
diff --git a/util/dist_source_me b/util/dist_source_me
index da736ea..3a9f554 100644
--- a/util/dist_source_me
+++ b/util/dist_source_me
@@ -69,14 +69,16 @@ func_set_os_env () {
 	fi
     fi
 
-    # For Mac OS X "Darwin"
-    if [ "$(uname)" == "Darwin" ] ; then
-	# Force MacPorts gcc/g++ as GNU compiler
-	if [ -e /opt/local/bin/gcc ] ; then
-	    export CC=gcc
-	    export CXX=g++
-	fi
+    case "${ACC_CONDA_BUILD}" in
+        "Y" | "y" | "1" )
+            CONDA_BUILD=1 
+            ;;
+    esac
+
+	if ( [[ "${CONDA_BUILD}" ]] ) ; then
+	    return;
     fi
+
 }
 
 
@@ -364,9 +366,6 @@ func_add_bmad_path () {
 
 	    if ( [ "${DIST_F90_REQUEST}" == "ifort" ] && [ -d /opt/intel/lib ] ) ; then
 		export DYLD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/intel/lib
-
-	    elif [ -d /opt/local/lib ] ; then
-	     	export DYLD_LIBRARY_PATH=${LD_LIBRARY_PATH}
 	    fi
 	fi
     fi
@@ -394,7 +393,7 @@ func_add_bmad_path () {
 # Set universal ACC_ROOT_DIR variable. Defined for both 
 # Release and Distribution Builds.
 #-----------------------------------------------------------------
-DIST_SETUP_LOG=${HOME}/.Bmad_Dist_Setup_Log.tmp
+DIST_SETUP_LOG=/dev/stdout
 CWD=$(pwd)
 CWD_DIR_CHECK=$(func_is_dir_toplevel ${CWD})
 DIST_BASE_DIR_CHECK=$(func_is_dir_toplevel ${DIST_BASE_DIR})
@@ -408,18 +407,17 @@ if ( [ "${CWD_DIR_CHECK}" == "Y" ] && [[ ! ${CWD} -ef ${DIST_BASE_DIR} ]]) ; the
     export DIST_BASE_DIR=${CWD}
     echo -e "\nCurrent working directory is the root of a Bmad Distribution tree." \
 	> ${DIST_SETUP_LOG}
-
-    func_set_os_env
+    
     func_set_bmad_env
+    func_set_os_env    
     func_add_bmad_path
-    func_check_fortran_version
 
 elif ( [ "${DIST_BASE_DIR_CHECK}" == "Y" ] ) ; then
     echo -e "\nThe working directory of the Bmad Distribution tree is defined by DIST_BASE_DIR." \
 	> ${DIST_SETUP_LOG}
 
-    func_set_os_env
     func_set_bmad_env
+    func_set_os_env
     func_add_bmad_path
     func_check_fortran_version
 
@@ -450,4 +448,3 @@ echo -e "     https://wiki.classe.cornell.edu/ACC/ACL/OffsiteDoc\n" \
 #-----------------------------------------------------------------
 # Display Logfile, unless requested not to.
 #-----------------------------------------------------------------
-[ "${DIST_SETUP_QUIET}" != "Y" ] && cat ${DIST_SETUP_LOG}
