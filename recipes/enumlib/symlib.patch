From 20350b0143dbbe615bebd958c4d3eb0ad9905e7a Mon Sep 17 00:00:00 2001
From: Jan Janssen <jan-janssen@users.noreply.github.com>
Date: Wed, 14 Jul 2021 09:56:47 +0200
Subject: [PATCH] Update Makefile

---
 src/Makefile | 44 --------------------------------------------
 1 file changed, 44 deletions(-)

diff --git a/src/Makefile b/src/Makefile
index 89ed12be..0e2c8cbe 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -2,50 +2,6 @@
 # multiple platforms/compilers. Branch according to an environmental
 # variable F90. I wish someone would show me a better way of doing this.
 
-ifeq (${F90},gfortran)  # free fortran compiler
-  FFLAGS =  -g -fbounds-check -fPIC -pedantic -Wall -ffree-line-length-none
-  FOUND = true
-endif
-
-ifeq (${F90},ifort)  # Intel compiler
-  ifeq (${DEBUG},false)
-     FFLAGS =  -O3 -fPIC
-     FOUND = true
-  endif
-  ifeq (${DEBUG},true)
-     FFLAGS =  -g -error-limit 7 -traceback -check bounds -check uninit -check pointers -fp-stack-check  -warn -heap-arrays -fpic
-     FOUND = true
-  endif
-  ifeq (${DEBUG},)
-     FFLAGS =  -g -error-limit 7 -traceback -check bounds -warn -heap-arrays -fpic
-     FOUND = true
-  endif
-
-endif
-
-ifeq (${F90},ifc)  # Intel compiler
-  F90 =  /opt/intel/fc/9.1.040/bin/ifort
-  FFLAGS =  -g -fPIC -error-limit 7 -traceback -check bounds -warn -heap-arrays
-  FOUND = true
-endif
-ifeq (${F90},xlf90) # IBM compiler
-  FFLAGS = -g -C -fPIC -qsuffix=f=f90  
-  FOUND = true
-endif
-ifeq (${F90},f95) # Absoft PPC compiler
-  FFLAGS = -Rb -Rc  -z2 -ea -fPIC
-# B80 entry into each subroutine  ; Rb bounds; Rc array conformance
-  FOUND = true
-endif
-ifeq (${F90},)  # If the variable isn't set, make sure compilation bombs
-error:
-	echo Error: environmental variable "F90" not set! Use make F90=[gfortran|ifort]
-endif
-ifneq (${FOUND},true) # If it's set but no matching flags then bomb
-error:	
-	echo Error: makefile doesn\'t have flags for this compiler; use make F90=[gfortran|ifort]
-endif
-
 SRC = num_types.f90 utilities.f90 numerical_utilities.f90	\
 vector_matrix_utilities.f90 symmetry.f90 compare_structures.f90 \
 combinatorics.f90 rational_mathematics.f90 group_theory.f90 itertools.f90 \
