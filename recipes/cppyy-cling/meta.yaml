{% set name = "cppyy-cling" %}
{% set version = "6.15.2.9" %}
# The first three items of version define the version of ROOT that we're building from.
{% set root_version = "6.15.02" %}
{% set clang_version = "5.0.0" %}
{% set clang_patches_version = "6.16.00" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://bitbucket.org/wlav/cppyy-backend/get/{{ name }}-{{ version }}.tar.gz
    sha256: 7b4343d8d68442a80486165d40dbc8b03b0a3299aa891b3f0f83b186e267f2fc
    patches:
    - manylinux.patch
    - skip_download.patch
  - url: https://root.cern.ch/download/root_v{{ root_version }}.source.tar.gz
    sha256: 2236fe4935139459239c935b2f93b3aa6bbfe92765ae9d9db9dd0b947bf19071
    folder: cling/root-{{ root_version }}

build:
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
  host:
    - python
    - pip
    - zlib
    - clangdev={{ clang_version }}
    - clang_variant * cling_{{ clang_patches_version }}
    - llvmdev==5
    # Copied over from conda-forge's cling recipe:
    # FIXME: The generated allDict.cxx.pch is dependent on version of the C++
    # headers used As it is shipped in the macOS binaries we have to use the
    # same one as in the compilers package
    - libcxx =4  # [osx]
  run:
    - compilers
    - python
    # Copied over from conda-forge's cling recipe:
    - libcxx=4  # [osx]

test:
  commands:
    - which rootcling
    - which cppyy-generator
    - which cling-config
    - which genreflex

about:
  home: https://pypi.org/project/cppyy-cling
  license: BSD-3-Clause
  license_family: BSD
  license_file: cling/LICENSE.txt
  summary: 'A repackaging of Cling for Automatic Python-C++ Bindings'
  description: |
    A repackaging of Cling, the interactive C++ interpreter, including C/C++
    wrappers that expose no further external headers or types.
  doc_url: http://cppyy.readthedocs.io/
  dev_url: https://bitbucket.org/wlav/cppyy-backend/src/master/cling/

extra:
  recipe-maintainers:
    - saraedum
    - isuruf
