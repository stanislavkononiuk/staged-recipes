diff --git a/cling/create_src_directory.py b/cling/create_src_directory.py
index 51b64cb..e2a6f10 100755
--- a/cling/create_src_directory.py
+++ b/cling/create_src_directory.py
@@ -128,29 +128,28 @@ if not os.path.exists(TARBALL_CACHE_DIR):
 
 fn = 'root_v%s.source.tar.gz' % ROOT_VERSION
 addr = 'https://root.cern.ch/download/'+fn
-if not os.path.exists(os.path.join(TARBALL_CACHE_DIR, fn)):
-    try:
-        print('retrieving', fn)
-        if sys.hexversion < 0x3000000:
-            output_fn = fn
-        else:
-            output_fn = bytes(fn, 'utf-8')
-        resp = urllib2.urlopen(addr, output_fn)
-        out = open(os.path.join(TARBALL_CACHE_DIR, fn), 'wb')
-        out.write(resp.read())
-        out.close()
-    except urllib2.HTTPError:
-        print('release %s not found' % ROOT_VERSION)
-        sys.exit(ERR_RELEASE_NOT_FOUND)
-else:
-    print('reusing', fn, 'from local directory')
-
-
-fn = os.path.join(TARBALL_CACHE_DIR, fn)
+tarball_fn = os.path.join(TARBALL_CACHE_DIR, fn)
 pkgdir = os.path.join('root-' + ROOT_VERSION)
 if not os.path.exists(pkgdir):
+    if not os.path.exists(tarball_fn):
+        try:
+            print('retrieving', fn)
+            if sys.hexversion < 0x3000000:
+                output_fn = fn
+            else:
+                output_fn = bytes(fn, 'utf-8')
+            resp = urllib2.urlopen(addr, output_fn)
+            out = open(os.path.join(TARBALL_CACHE_DIR, fn), 'wb')
+            out.write(resp.read())
+            out.close()
+        except urllib2.HTTPError:
+            print('release %s not found' % ROOT_VERSION)
+            sys.exit(ERR_RELEASE_NOT_FOUND)
+    else:
+        print('reusing', fn, 'from local directory')
+    
     print('now extracting', ROOT_VERSION)
-    tf = tarfile.TarFile.gzopen(fn)
+    tf = tarfile.TarFile.gzopen(tarball_fn)
     tf.extractall()
     tf.close()
 else:
