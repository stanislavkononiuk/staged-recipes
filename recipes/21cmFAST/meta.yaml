{% set name = "21cmFAST" %}
{% set version = "3.0.0.dev5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 0acf356e74ad8a2254f6c729b06b98f4b6cdde0b838e46c614d9ae68f8e56791
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "INC=$(CONDA_PREFIX)/include LIB=$(CONDA_PREFIX)/lib {{ PYTHON }} -m pip install . -vv"
  skip: True  # [win]
  
requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
  host:
    - python
    - pip
    - cffi
    - fftw
    - gsl
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - libopenblas
  run:
    - python
    - scipy
    - numpy
    - click
    - pyyaml
    - cffi >=1.0
    - scipy
    - astropy >=2.0
    - h5py >=2.8.0
    - cached-property
    - matplotlib-base
    - fftw
    - gsl
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    - libopenblas
    
test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - py21cmfast

about:
  home: https://github.com/21cmFAST/21cmFAST
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: A semi-numerical cosmological simulation code for the 21cm signal
  description: |
    21cmFAST provides a simple and fast simulation package for the cosmological
    21cm signal as either coeval cubes or full lightcones.
  doc_url: https://21cmFAST.readthedocs.io/
  dev_url: https://github.com/21cmFAST/21cmFAST

extra:
  recipe-maintainers:
    - steven-murray
