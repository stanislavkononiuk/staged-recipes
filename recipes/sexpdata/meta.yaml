{% set name = "sexpdata" %}
{% set version = "0.0.3" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "1ac827a616c5e87ebb60fd6686fb86f8a166938c645f4089d92de3ffbdd494e0" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: 'python setup.py install '

requirements:
  host:
    - python
  run:
    - python

test:
  imports:
    - sexpdata

about:
  home: https://github.com/tkf/sexpdata
  license: BSD
  license_family: BSD
  license_file: ''
  summary: S-expression parser for Python
  description: "S-expression parser for Python\n==============================\n\n`sexpdata` is a simple S-expression parser/serializer.  It has\nsimple `load` and `dump` functions like `pickle`, `json`\
    \ or `PyYAML`\nmodule.\n\n>>> from sexpdata import loads, dumps\n>>> loads('(\"a\" \"b\")')\n['a', 'b']\n>>> print(dumps(['a', 'b']))\n(\"a\" \"b\")\n\n\nYou can install `sexpdata` from PyPI_::\n\n\
    \  pip install sexpdata\n\n\nLinks:\n\n* `Documentation (at Read the Docs) <http://sexpdata.readthedocs.org/>`_\n* `Repository (at GitHub) <https://github.com/tkf/sexpdata>`_\n* `Issue tracker (at GitHub)\
    \ <https://github.com/tkf/sexpdata/issues>`_\n* `PyPI <http://pypi.python.org/pypi/sexpdata>`_\n* `Travis CI <https://travis-ci.org/#!/tkf/sexpdata>`_\n\n\nLicense\n-------\n\n`sexpdata` is licensed\
    \ under the terms of the BSD 2-Clause License.\nSee the source code for more information."
  doc_url: ''
  dev_url: ''

extra:
    recipe-maintainers:
        - egeogretmen
