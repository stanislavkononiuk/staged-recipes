From f51bdf4eed8a7edd492e4865ab07cc6e2ebaa483 Mon Sep 17 00:00:00 2001
From: Sebastian Ehlert <28669218+awvwgk@users.noreply.github.com>
Date: Fri, 4 Feb 2022 13:22:04 +0100
Subject: [PATCH] Allow compiling QCxMS with GCC (#47)

* Allow compiling QCxMS with GCC

* Block compilation with GCC version's older than 8

* Ensure correct tblite/mctc-lib versions are used
---
 .github/workflows/build.yml | 15 ++++++++-
 config/meson.build          | 62 +++++++++++++------------------------
 src/egrad.f90               |  2 --
 src/iniqm.f90               |  6 +---
 src/{main.f90 => main.F90}  |  6 +++-
 src/meson.build             |  2 +-
 src/mo_spec.f90             | 10 +++---
 src/msindo.f90              |  2 --
 src/orca.f90                | 21 ++++++-------
 src/tm.f90                  | 22 ++++---------
 src/utility.f90             |  6 ----
 subprojects/tblite.wrap     |  2 +-
 12 files changed, 65 insertions(+), 91 deletions(-)
 rename src/{main.f90 => main.F90} (99%)

diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml
index 4e9d170..3647fcc 100644
--- a/.github/workflows/build.yml
+++ b/.github/workflows/build.yml
@@ -31,6 +31,19 @@ jobs:
         compiler: [intel]
         version: [2021]
 
+        include:
+          - os: ubuntu-latest
+            build: meson
+            build-type: debug
+            compiler: gnu
+            version: 11
+
+          - os: ubuntu-latest
+            build: meson
+            build-type: debug
+            compiler: gnu
+            version: 9
+
     env:
       FC: ${{ matrix.compiler == 'intel' && 'ifort' || 'gfortran' }}
       CC: ${{ matrix.compiler == 'intel' && 'icc' || 'gcc' }}
@@ -184,7 +197,7 @@ jobs:
     - name: Run unit tests
       if: ${{ matrix.build == 'meson' }}
       run: |
-         meson test -C ${{ env.BUILD_DIR }} --print-errorlogs --no-rebuild --num-processes 2 -t 2
+         meson test -C ${{ env.BUILD_DIR }} --print-errorlogs --no-rebuild --num-processes 1 -t 2
 
     - name: Run unit tests
       if: ${{ matrix.build == 'cmake' }}
diff --git a/config/meson.build b/config/meson.build
index 3b7e9be..cc380b9 100644
--- a/config/meson.build
+++ b/config/meson.build
@@ -11,7 +11,9 @@ if fc_id == 'gcc'
     '-fbacktrace',
     language: 'fortran',
   )
-  error('This project does not support compilation with GCC yet')
+  if fc.version().version_compare('<8')
+    error('GCC version 8 or higher is required.')
+  endif
 elif fc_id == 'intel'
   add_project_arguments(
     '-traceback',
@@ -95,46 +97,26 @@ else
   exe_deps += blas_dep
 endif
 
-# Look for tool-chain library as external dependency
-mctc_dep = dependency('mctc-lib', required: false, static: static)
-if not mctc_dep.found()
-  # Create the tool chain library as subproject
-  mctc_prj = subproject(
-    'mctc-lib',
-    version: '>=0.2',
-    default_options: [
-      'default_library=static',
-    ],
-  )
-  mctc_dep = mctc_prj.get_variable('mctc_dep')
-
-  if install
-    install_data(
-      mctc_prj.get_variable('mctc_lic'),
-      install_dir: get_option('datadir')/'licenses'/meson.project_name()/'mctc-lib'
-    )
-  endif
-endif
+# Create the tool chain library as subproject
+mctc_dep = dependency(
+  'mctc-lib',
+  version: '>=0.2',
+  fallback: ['mctc-lib', 'mctc_dep'],
+  default_options: ['default_library=static'],
+  static: static,
+)
 exe_deps += mctc_dep
 
-# Look tight-binding framework as external dependency
-tblite_dep = dependency('tblite', required: false, static: static)
-if not tblite_dep.found()
-  # Create the tight-binding framework as subproject
-  tblite_prj = subproject(
-    'tblite',
-    version: '>=0.1',
-    default_options: [
-      'default_library=static',
-    ],
-  )
-  tblite_dep = tblite_prj.get_variable('tblite_dep')
+# Create the tight-binding framework as subproject
+tblite_dep = dependency(
+  'tblite',
+  version: '>=0.1',
+  fallback: ['tblite', 'tblite_dep'],
+  default_options: ['default_library=static'],
+  static: static,
+)
+exe_deps += tblite_dep
 
-  if install
-    install_data(
-      tblite_prj.get_variable('tblite_lic'),
-      install_dir: get_option('datadir')/'licenses'/meson.project_name()/'tblite'
-    )
-  endif
+if tblite_dep.version().version_compare('>=0.2')
+  error('tblite version 0.2 or higher is not supported yet.')
 endif
-exe_deps += tblite_dep
diff --git a/src/egrad.f90 b/src/egrad.f90
index 1954c3c..78a84fd 100644
--- a/src/egrad.f90
+++ b/src/egrad.f90
@@ -37,8 +37,6 @@ subroutine egrad(first,nuc,xyz,iat,chrg,spin,etemp,E,grad,qat,aspin,ECP,gradfail
    logical :: ECP
    logical :: ok,gradfail
 
-   external system
-
    disp   = 0
    E    = 0
    grad = 0
diff --git a/src/iniqm.f90 b/src/iniqm.f90
index bc645e2..ad8a57a 100644
--- a/src/iniqm.f90
+++ b/src/iniqm.f90
@@ -80,8 +80,6 @@ subroutine iniqm(nat,xyz,iat,chrg,spin,etemp,edum,ok,ECP)
     
        character(len=20) :: atmp
     
-       external :: system
-    
        stat=0
        edum=0
     
@@ -258,8 +256,6 @@ subroutine eqm(prog,nat,xyz,iat,chrg,dumspin,etemp,newcalc,iok, &
        integer :: stat
        character(len=:), allocatable :: output_name
     
-       external :: system
-    
        call electrons_amount(nat, iat, chrg, nel, nb, z)
     
     ! spec.f and regular IP/EA evaluations will use this input option
@@ -294,7 +290,7 @@ subroutine eqm(prog,nat,xyz,iat,chrg,dumspin,etemp,newcalc,iok, &
           if(chrg == 0)then
              call qccall(0,'neutral.out')
           else
-             call system(0,'ion.out')
+             call qccall(0,'ion.out')
           endif
           call dftbenergy(energy)
        endif
diff --git a/src/main.f90 b/src/main.F90
similarity index 99%
rename from src/main.f90
rename to src/main.F90
index 9c805d7..471dd08 100644
--- a/src/main.f90
+++ b/src/main.F90
@@ -141,7 +141,6 @@ program QCxMS
   !logical gbsa ! set solvation model
 
   intrinsic :: get_command_argument
-  external  :: system
 
   interface
     function calc_ECOM(beta,e_kin) result(E_COM)
@@ -338,7 +337,12 @@ end function calc_ECOM
   call setetemp(1,-1.0d0,betemp)
 
   ! ini RNDs
+#ifdef __INTEL_COMPILER
   call random_seed (put=iseed)
+#else
+  ! FIXME: this is probably not the right way to do this
+  call random_seed (put=spread(iseed(1), 1, 8))
+#endif
   call random_number(randx)
 
   ! for GS every n steps a struc. is used later for production, i.e.
diff --git a/src/meson.build b/src/meson.build
index debc981..9d2b740 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -55,5 +55,5 @@ srcs += files(
 )
 
 prog += files(
-  'main.f90',
+  'main.F90',
 )
diff --git a/src/mo_spec.f90 b/src/mo_spec.f90
index d2adcb7..e6b5ea5 100644
--- a/src/mo_spec.f90
+++ b/src/mo_spec.f90
@@ -50,12 +50,12 @@ subroutine getspec(echo,nat,iat,xyz,mchrg,emo,ehomo,mopop,ihomo,nb,ECP)
           ! USE ORCA
            write(*,*) 'Not yet working'
            ! eps has to be rewritten; changed it in readpopmo to emo and focc
-           stop
+           error stop
            write(*,*) 'doing DFT for MO spectrum for M ...'
            call eqm(3,nat,xyz,iat,mchrg,-1,0.0_wp,.false.,idum,energy,nel,nb,ECP,spec_calc)
            call system('rm -f ORCA.INPUT.prop')
            call system('mv neutral.out qcxms.Mspec')
-           if(abs(energy).lt.1.d-8.or.idum.ne.1) stop'QC initialization error'
+           if(abs(energy).lt.1.d-8.or.idum.ne.1) error stop 'QC initialization error'
            call geteps('qcxms.Mspec',nat,iat,mchrg,eps,mopop,ncore,ihomo,nb)
            emo (1:ihomo) = eps(1,1:ihomo)
 
@@ -64,7 +64,7 @@ subroutine getspec(echo,nat,iat,xyz,mchrg,emo,ehomo,mopop,ihomo,nb,ECP)
            write(*,*) 'doing XTB for MO spectrum for M ...'
            call eqm(7,nat,xyz,iat,mchrg,-1,0.0_wp,.false.,idum,energy,nel,nb,ECP,spec_calc)
            call system('mv neutral.out qcxms.Mspec.xtb')
-           if(abs(energy).lt.1.d-8.or.idum.ne.1) stop'QC initialization error'
+           if(abs(energy).lt.1.d-8.or.idum.ne.1) error stop 'QC initialization error'
            call readpopmo(nat,nao,ihomo,emo,focc,mopop)
            
         ! USE XTB2 (default for everything else)
@@ -72,7 +72,7 @@ subroutine getspec(echo,nat,iat,xyz,mchrg,emo,ehomo,mopop,ihomo,nb,ECP)
            write(*,*) 'doing XTB2 for MO spectrum for M ...'
            call eqm(8,nat,xyz,iat,mchrg,-1,0.0_wp,.false.,idum,energy,nel,nb,ECP,spec_calc)
            call system('mv neutral.out qcxms.Mspec.xtb2')
-           if(abs(energy).lt.1.d-8.or.idum.ne.1) stop'QC initialization error'
+           if(abs(energy).lt.1.d-8.or.idum.ne.1) error stop 'QC initialization error'
            call readpopmo(nat,nao,ihomo,emo,focc,mopop)
         endif
 
@@ -107,7 +107,7 @@ subroutine getspec(echo,nat,iat,xyz,mchrg,emo,ehomo,mopop,ihomo,nb,ECP)
         write(*,'('' alpha/beta '',10F8.2)')pmo(1:ihomo)
      endif
 
-     if (emo(ihomo)-emo(1).lt.1.0) stop 'weird epsilons'
+     if (emo(ihomo)-emo(1).lt.1.0) error stop 'weird epsilons'
 
      emo =(-1.0_wp) * emo * evtoau  ! convert to neg. and au
 
diff --git a/src/msindo.f90 b/src/msindo.f90
index ed21e41..7beb97d 100644
--- a/src/msindo.f90
+++ b/src/msindo.f90
@@ -24,8 +24,6 @@ subroutine getmsindograd(first,nat,ic,chrg,spin,xyz,etemp,nav,&
   
      logical :: first
   
-     external system
-  
      if(spin.eq.0) call getspin(nat,ic,chrg,spin)
   
      cyc=200
diff --git a/src/orca.f90 b/src/orca.f90
index e76e8bf..3fddf2c 100644
--- a/src/orca.f90
+++ b/src/orca.f90
@@ -60,28 +60,28 @@ subroutine orcaout(nat,xyz,iat,chrg,spin,etemp,grad,ECP)
         open(file='ORCA.INPUT', newunit=io_orca)
 
      ! hybrid vs other funcs.... nat is number of atoms
-        if ( func <= 4 .and. nat < 60 .and. noconv ==  .false. ) then
+        if ( func <= 4 .and. nat < 60 .and. .not.noconv ) then
            write(io_orca,'(''! CONV SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  7 .and. nat < 60 .and. noconv ==  .false.) then
+        elseif ( func  ==  7 .and. nat < 60 .and. .not.noconv ) then
            write(io_orca,'(''! CONV SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  8 .and. nat < 60 .and. noconv  ==  .false.) then
+        elseif ( func  ==  8 .and. nat < 60 .and. .not.noconv ) then
            write(io_orca,'(''! CONV SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  9 .and. nat < 60 .and. noconv  ==  .false.) then
+        elseif ( func  ==  9 .and. nat < 60 .and. .not.noconv ) then
            write(io_orca,'(''! CONV SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func <= 4 .and. noconv ==  .True.)then
+        elseif ( func <= 4 .and. noconv)then
            write(io_orca,'(''! DIRECT SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  7 .and. noconv ==  .True.) then
+        elseif ( func  ==  7 .and. noconv) then
            write(io_orca,'(''! DIRECT SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  8 .and. noconv ==  .True.) then
+        elseif ( func  ==  8 .and. noconv) then
            write(io_orca,'(''! DIRECT SMALLPRINT NORI NOSOSCF'')')
 
-        elseif ( func  ==  9 .and. noconv ==  .True.) then
+        elseif ( func  ==  9 .and. noconv) then
            write(io_orca,'(''! DIRECT SMALLPRINT NORI NOSOSCF'')')
 
         ! RI
@@ -104,9 +104,9 @@ subroutine orcaout(nat,xyz,iat,chrg,spin,etemp,grad,ECP)
         endif
 
         ! IF ECP true
-        if (ecp  ==  .true. .and. func /= 14)then
+        if (ecp .and. func /= 14)then
            write(io_orca,'(''! ecp('',a,'')'')')trim(basis(bas))
-        elseif(ecp  ==  .true. .and. func  ==  14)then
+        elseif(ecp .and. func  ==  14)then
            write(io_orca,'(''! ecp(def2-mSVP)'')')
         endif
 
@@ -344,7 +344,6 @@ subroutine copyorc(line)
    
    integer :: line
    character(len=80) :: command
-   external :: system
    
    if(line >= 10000)stop 'error 1 inside copyorc'
    
diff --git a/src/tm.f90 b/src/tm.f90
index df30719..b01f0c5 100644
--- a/src/tm.f90
+++ b/src/tm.f90
@@ -13,7 +13,6 @@ subroutine rdtmgrad(nat,g,chrg,spin,edum)
      integer  :: nat,i,j
      integer  :: nn,io_grad
      real(wp) :: g(3,nat),xx(10),edum,chrg(nat),spin(nat)
-     external :: system
   
      open(file='gradient',newunit=io_grad)
      i=0
@@ -53,7 +52,7 @@ subroutine rdtmgrad(nat,g,chrg,spin,edum)
      open(file='job.last',newunit=io_grad)
      do 
        read(io_grad,'(a)',iostat=iocheck)line
-       if (iocheck > 0) stop 'Something is wrong in tm.f90. Exiting...'
+       if (iocheck > 0) error stop 'Something is wrong in tm.f90. Exiting...'
        if( iocheck < 0) exit
   
        if(index(line,'atomic populations from total density:').ne.0)then
@@ -107,7 +106,6 @@ end subroutine rdtmenergy
   subroutine setfermi(temp)
      real(wp) :: temp
      character(len=80) :: atmp
-     external :: system
   
   !      write(atmp,'(''$fermi tmstrt='',F8.1,'' tmend='',F8.1)')temp,temp
      write(atmp,'(''$fermi tmstrt='',F8.1,'' hlcrt=-1.0E0  stop=1.E-99 addTS noerf '')')temp
@@ -124,8 +122,6 @@ end subroutine setfermi
   
   subroutine dscftm
 
-     external :: system
-  
      if(shell.eq.1) call system('( /usr/local/bin/ridft >  job.last ) > & /dev/null')
      if(shell.eq.2) call system('( ridft >  job.last  2>   /dev/null')
   
@@ -134,8 +130,6 @@ end subroutine dscftm
   
   subroutine gradtm
 
-     external :: system
-  
   !     if(shell.eq.1) call system('( grad >> job.last ) > & /dev/null')
   !     if(shell.eq.2) call system('  grad >> job.last  2>   /dev/null')
   
@@ -158,8 +152,6 @@ subroutine initm(n,iat,chrg,spin)
   
      logical :: strange_elem
   
-     external :: system
-  
   ! set strange element to false
      strange_elem=.false.
   ! save info
@@ -268,7 +260,7 @@ subroutine initm(n,iat,chrg,spin)
         call system("echo '$end              '   >> control")
   !     PBE12 and PBE38 do not work
      elseif(func.eq.2.or.func.eq.3.or.func.eq.9.or.func.eq.13) then
-        stop'PBE12/PBE38/B3PW91/REVPBE not implemented with Turbomole.'
+        error stop 'PBE12/PBE38/B3PW91/REVPBE not implemented with Turbomole.'
   !     M062X without dispersion!
      elseif(func.eq.4) then
         call system("echo ' functional m062x'   >> control")
@@ -380,9 +372,8 @@ end subroutine wrcoord
   subroutine copytm(it)
      integer  :: it
      character(len=80) :: fname
-     external :: system
   
-     if(it.ge.10000)stop 'error 1 inside copytm'
+     if(it.ge.10000)error stop 'error 1 inside copytm'
   
      call system('cp coord coord.original')
   
@@ -458,7 +449,7 @@ subroutine copytm(it)
         return
      endif
   
-     stop 'error 2 inside copytm'
+     error stop 'error 2 inside copytm'
   
   end subroutine
   
@@ -470,9 +461,8 @@ subroutine copytm_ip(it)
   
      integer  :: it
      character(len=80) :: fname
-     external :: system
   
-     if(it.ge.10000)stop 'error 1 inside copytm'
+     if(it.ge.10000)error stop 'error 1 inside copytm'
   
      call system('cp coord coord.original')
   
@@ -500,7 +490,7 @@ subroutine copytm_ip(it)
         return
      endif
   
-     stop 'error 2 inside copytm'
+     error stop 'error 2 inside copytm'
   
   end subroutine
 
diff --git a/src/utility.f90 b/src/utility.f90
index 599e482..2a375fe 100644
--- a/src/utility.f90
+++ b/src/utility.f90
@@ -90,8 +90,6 @@ subroutine qccall(iprog,fout)
       character(len=* ) :: fout
       character(len=80) :: atmp
    
-      external system
-   
       calls = calls + 1
    
    ! DFTB+
@@ -150,7 +148,6 @@ subroutine mdtmpdir(it)
    
       integer  :: it
       character(len=80) :: fname
-      external :: system
    
       if(it.lt.10000)write(fname,'(''mkdir TMPQCXMS/TMP.'',i4)')it
       if(it.lt.1000) write(fname,'(''mkdir TMPQCXMS/TMP.'',i3)')it
@@ -167,7 +164,6 @@ subroutine copytb(it)
    
       integer :: it
       character(len=80) :: fname
-      external system
    
       if(it.ge.10000)stop 'error 1 inside copytb'
    
@@ -214,7 +210,6 @@ subroutine copymop(it)
    
       integer :: it
       character(len=80) :: fname
-      external system
    
       if(it.ge.10000)stop 'error 1 inside copymop'
    
@@ -269,7 +264,6 @@ subroutine copymsindo(it)
    
       integer :: it
       character(len=80) :: fname
-      external system
    
       if(it.ge.10000)stop 'error 1 inside copymsindo'
    
diff --git a/subprojects/tblite.wrap b/subprojects/tblite.wrap
index 127a353..6aa8da5 100644
--- a/subprojects/tblite.wrap
+++ b/subprojects/tblite.wrap
@@ -1,4 +1,4 @@
 [wrap-git]
 directory = tblite
 url = https://github.com/awvwgk/tblite
-revision = head
+revision = v0.1.0
