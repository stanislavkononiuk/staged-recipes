{% set version = "1.9" %}
package:
    name: easydict
    version: {{ version }}
source:
    sha256: 3f3f0dab07c299f0f4df032db1f388d985bb57fa4c5be30acd25c5f9a516883b
    url: https://pypi.io/packages/source/e/easydict/easydict-{{ version }}.tar.gz
build:
    number: '0'
    script: "{{ PYTHON }} -m pip install . --no-deps -vv"

requirements:
    host:
        - python
        - pip
    run:
        - python
test:
    imports:
        - easydict
about:
    description: "*EasyDict* allows to access dict values as attributes (works recursively).\
        \ \nA Javascript-like properties dot notation for python dicts.\n\n=====\n\
        USAGE\n=====\n\n::\n\n    >>> from easydict import EasyDict as edict\n   \
        \ >>> d = edict({'foo':3, 'bar':{'x':1, 'y':2}})\n    >>> d.foo\n    3\n \
        \   >>> d.bar.x\n    1\n    \n    >>> d = edict(foo=3)\n    >>> d.foo\n  \
        \  3\n\n\nVery useful when exploiting parsed JSON content ! \n\n::\n\n   \
        \ >>> from easydict import EasyDict as edict\n    >>> from simplejson import\
        \ loads\n    >>> j = \"\"\"{\n    \"Buffer\": 12,\n    \"List1\": [\n    \
        \    {\"type\" : \"point\", \"coordinates\" : [100.1,54.9] },\n        {\"\
        type\" : \"point\", \"coordinates\" : [109.4,65.1] },\n        {\"type\" :\
        \ \"point\", \"coordinates\" : [115.2,80.2] },\n        {\"type\" : \"point\"\
        , \"coordinates\" : [150.9,97.8] }\n    ]\n    }\"\"\"\n    >>> d = edict(loads(j))\n\
        \    >>> d.Buffer\n    12\n    >>> d.List1[0].coordinates[1]\n    54.9\n\n\
        Can set attributes as easily as getting them :\n\n::\n\n    >>> d = EasyDict()\n\
        \    >>> d.foo = 3\n    >>> d.foo\n    3\n\nIt is still a ``dict`` !\n\n::\n\
        \n    >>> d = EasyDict(log=False)\n    >>> d.debug = True\n    >>> d.items()\n\
        \    [('debug', True), ('log', False)]\n\nInstance and class attributes are\
        \ accessed like usual objects...\n\n::\n\n    >>> class Flower(EasyDict):\n\
        \    ...     power = 1\n    ...\n    >>> f = Flower({'height': 12})\n    >>>\
        \ f.power\n    1\n    >>> f['power']\n    1\n\n=======\nLICENSE\n=======\n\
        \n* Lesser GNU Public License\n\n=======\nAUTHORS\n=======\n\n* Mathieu Leplatre\
        \ <mathieu.leplatre@makina-corpus.com>\n\n|makinacom|_\n\n.. |makinacom| image::\
        \ http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\
        \nSimilar tools\n=============\n\n* `TreeDict <http://pypi.python.org/pypi/treedict>`_,\
        \ a fast and full-featured dict-like tree container.\n* `addict <https://github.com/mewwts/addict>`_\n\
        \n\n=========\nCHANGELOG\n=========\n\n1.7 (2017-04-27)\n================\n\
        \n* Prevent copying sub-EasyDicts on assignment to fix unpickling (#7, thanks\
        \ @Chronos-Sk)\n\n1.6 (2015-01-27)\n================\n\n* Allow setting attributes\
        \ via setting items (thanks phivos)\n\n1.5 (2014-08-07)\n================\n\
        \n* Allow subclassing using self instead of class name (thanks Steve Engledow)\n\
        \n1.4 (2011-03-13)\n================\n\n* Access class attributes like instance\
        \ attributes\n\n1.3 (2012-02-08)\n================\n\n* Better documentation\
        \ and tests\n\n1.2 (2011-06-08)\n================\n\n* Fix inclusion of README\n\
        \n1.1 (2012-04-21)\n================\n\n* Switch to distutils2\n\n1.0 (2011-04-18)\n\
        ================\n\n* Initial working version"
    home: https://github.com/makinacorpus/easydict
    license: LPGL, see LICENSE file.
    license_family: OTHER
    summary: Access dict values as attributes (works recursively).

