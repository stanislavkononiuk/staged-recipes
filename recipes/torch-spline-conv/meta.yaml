{% set name = "torch_spline_conv" %}
{% set version = "1.2.0" %}

{% set pytorch_spline_conv_proc_type = "cpu" if cuda_compiler_version == "None" else "gpu" %}  # [linux or win]
{% set pytorch_spline_conv_proc_type = "cpu" %}                                                # [osx]

package:
  name: py{{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: b7a1788004f6c6143d47040f2dd7d8a579a0c69a0cb0b5d7537416bf37c082a5

build:
  number: 0
  skip: True  # [win]

outputs:
  # A meta-package to select CPU or GPU pytorch_spline_conv build.
  - name: pytorch_spline_conv_proc
    version: 1.0.0
    build:
      number: 0
      string: "{{ pytorch_spline_conv_proc_type }}"
    test:
      commands:
        - exit 0

  - name: pytorch_spline_conv
    version: {{ version }}
    build:
      number: 0
      script: python -m pip install . -vv
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [linux and cuda_compiler_version != "None"]
      host:
        - python
        - pytorch
        - setuptools
        - pytest-runner
        - pip
      run:
        - python
        - pytorch
      run_constrained:
        - pytorch_spline_conv_proc * {{ pytorch_spline_conv_proc_type }}
    test:
      requires:
        - pytest
        - pytest-cov
      imports:
        - torch_spline_conv
    about:
      home: https://github.com/rusty1s/torch-spline-conv
      summary: Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorch
      license: MIT
      license_file: LICENSE
      dev_url: https://github.com/rusty1s/torch-spline-conv

about:
  home: https://github.com/rusty1s/torch-spline-conv
  summary: Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorch
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/rusty1s/torch-spline-conv

extra:
  recipe-maintainers:
    - rluria14
    - oblute
    - ndmaxar
