From e0192dfebcf2a356892e82bed6dc3e113639e8ba Mon Sep 17 00:00:00 2001
From: Logan Ward <ward.logan.t@gmail.com>
Date: Thu, 4 Jan 2018 08:41:00 -0600
Subject: [PATCH] Python 3 compatibility fixes

---
 ptplotter/__init__.py | 2 +-
 ptplotter/plotter.py  | 7 ++++---
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/ptplotter/__init__.py b/ptplotter/__init__.py
index e60ecd2..7bfef19 100644
--- a/ptplotter/__init__.py
+++ b/ptplotter/__init__.py
@@ -1 +1 @@
-from plotter import *
+from .plotter import *
diff --git a/ptplotter/plotter.py b/ptplotter/plotter.py
index 84d006b..a949388 100644
--- a/ptplotter/plotter.py
+++ b/ptplotter/plotter.py
@@ -6,6 +6,7 @@
 import matplotlib.pylab as plt
 from matplotlib.patches import Polygon
 from matplotlib.collections import PatchCollection
+from six import string_types
 
 INSTALL_PATH = os.path.dirname(os.path.abspath(__file__))
 
@@ -28,7 +29,7 @@ def symbol(data):
 def get_coord_from_symbol(data):
     """Determines the cartesian coordinate of an element on the periodic
     table."""
-    if isinstance(data, basestring):
+    if isinstance(data, string_types):
         data = elt_data[data]
     x = data['group']
     y = data['period']
@@ -382,7 +383,7 @@ def __len__(self):
         return len(self.patches)
 
     def set_labels(self, labels, **kwargs):
-        if isinstance(labels, basestring):
+        if isinstance(labels, string_types):
             self.single_label(labels, **kwargs)
         elif len(labels) == 1:
             self.single_label(labels[0], **kwargs)
@@ -445,7 +446,7 @@ def single_label(self, label, position="top", **kwargs):
              +------------+
                 bottom
         """
-        assert isinstance(label, basestring)
+        assert isinstance(label, string_types)
         if position == 'top':
             x = self.x + self.dx/2
             y = self.y + self.dy*1.25
