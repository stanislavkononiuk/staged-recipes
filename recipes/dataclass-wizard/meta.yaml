{% set name = "dataclass-wizard" %}
{% set version = "0.22.0" %}
{% set author = "rnag" %}
{% set repo_url = "https://github.com/rnag/dataclass-wizard" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 1a870882a8ff19e7ab9ede7b672b2f7c1ce8d69bbd2fc6d9629da749227268fd

build:
  number: 0
  entry_points:
    - wiz={{ name|replace('-', '_') }}.wizard_cli.cli:main
  script: {{ PYTHON }} -m pip install . -vv
  skip: True  # [py<36]

requirements:
  host:
    - python
    - pip
  run:
    - python
    - backports-datetime-fromisoformat ==1.0.0  # [py==36]
    - dataclasses  # [py==36]
    - typing-extensions >=3.7.4.2  # [py<=39]

test:
  imports:
    - {{ name|replace('-', '_') }}
  requires:
    - pip
  commands:
    - pip check
    - wiz --help

about:
  home: {{ repo_url }}
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: Marshal dataclasses to/from JSON. Use field properties with initial values. Construct a dataclass schema with JSON input.
  description: |
    The dataclass-wizard library provides a set of simple, yet
    elegant *wizarding* tools for interacting with the Python
    `dataclasses` module in Python 3.6+.

    The primary use is as a fast serialization framework that enables
    dataclass instances to be converted to/from JSON; this works well
    in particular with a *nested dataclass* model.

    The dataclass-wizard is pure Python code that relies entirely on
    stdlib, with the only added dependency being
    `typing-extensions` <https://pypi.org/project/typing-extensions/>
    for Python 3.9 and below.
  doc_url: https://{{ name }}.readthedocs.io/
  dev_url: {{ repo_url }}

extra:
  recipe-maintainers:
    - {{ author }}
