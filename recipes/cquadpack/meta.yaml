{% set name = "cquadpack" %}
{% set version = "1.1.1" %}
{% set sha256 = "e193023a33b6b6d86d92935ddce4f1b7efe35e259e06c88bd45e20d7e896ae38" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: v{{ version }}.tar.gz
  url: https://github.com/ESSS/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [osx]
  features:
    - vc9   # [win and py27]
    - vc10  # [win and py34]
    - vc14  # [win and py35]

requirements:
  build:
    - python  # [win]
    - vc 9  # [win and py27]
    - vc 10  # [win and py34]
    - vc 14  # [win and py35]
    - toolchain
    - cmake
  run:
    - vc 9  # [win and py27]
    - vc 10  # [win and py34]
    - vc 14  # [win and py35]

test:
  commands:
    - test -f $PREFIX/include/cquadpack.h  # [unix]
    - if not exist %LIBRARY_INC%\cquadpack.h exit 1  # [win]

about:
  home: https://github.com/ESSS/cquadpack
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'A complete port of the QUADPACK Fortran codes to C'

  description: |
    Unlike ports created by translators, this port reimplements the algorithms to
    take advantage of C program structure and dynamic memory. Every effort has been
    made to leave the low level code intact, except where some opportunity to convert
    from unstructured blocks to more structured form was taken.
  dev_url: https://github.com/ESSS/cquadpack

extra:
  recipe-maintainers:
    - edisongustavo
