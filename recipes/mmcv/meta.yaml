{% set version = "1.5.3" %}
{% set number = 0 %}

{% if cuda_compiler_version != "None" %}
{% set number = number + 200 %}
{% endif %}

package:
  name: mmcv-recipe
  version: {{ version }}

source:
  url: https://github.com/open-mmlab/mmcv/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 650929f52f1d0b2bae1bdaaa874e1e6dfdfa15f40bab5c366330488a9949ddd0
build:
  number: {{ number }}
  skip: true  # [win]

outputs:
  - name: mmcv-full
    build:
      string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == "None"]
      detect_binary_files_with_prefix: false
      run_exports:
        - {{ pin_subpackage('mmcv-full', max_pin='x.x') }}
    script: build_mmcv.sh  # [not win]
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - sysroot_linux-64  2.17  # [linux64]
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}    # [cuda_compiler_version != "None"]
        # (from pytorch-feedstock) Should be fixed in other versions
        # https://gitlab.kitware.com/cmake/cmake/-/issues/23368
        - cmake  !=3.23.0
        - ninja
        - make      # [linux]

      host:
        # GPU requirements
        - cudnn                           # [cuda_compiler_version != "None"]
        # other requirements
        - python
        - numpy
        # dataclasses is a backport of python 3.7 module
        - dataclasses   # [py==36]
        - pip
        - pyyaml
        - requests
        - future
        - six
        - typing
        - pkg-config  # [unix]
        - typing_extensions
        - pytorch 1.11
        - torchvision
        - libopencv
        - py-opencv
        - opencv
        - setuptools
      run:
        # GPU requirements without run_exports
        - addict
        - packaging
        - Pillow
        - pyyaml
        - yapf
        - {{ pin_compatible('numpy') }}
        - typing_extensions
        # Need ninja to load C++ extensions (?)
        - ninja
        # Conda exposes the maximum CUDA version supported by the installed Nvidia drivers through a virtual pockage
        - __cuda  # [cuda_compiler_version != "None"]
    test:
      requires:
        - pytest
        - requests
        - scipy
        - libopencv
        - py-opencv
        - opencv
        - python-lmdb
        - libiconv
        - tifffile
        - python-dateutil
        # - addict
      imports:
        - mmcv
      source_files:
        - tests
      commands:
        # ignoring cuda specific tests and IO tests that use tubrojpeg - conflicts with OpenCV (uses libjpeg)
        # test_geometric:test_imcrop - fails due to diff in cv2.imread of stored JPEG (turbojpeg vs libjpeg)
        - python3 -m pytest ./tests/ --ignore=./tests/test_ops --ignore=./tests/test_runner --ignore=./tests/test_image/test_geometric.py --ignore=./tests/test_image/test_io.py  # [not win]
        - python3 -c "import mmcv; print(mmcv.__version__)"


about:
  home: https://github.com/open-mmlab/mmcv
  summary: 'Foundational library for computer vision research'
  description: |
    MMCV is a foundational library for computer vision research and supports many research projects.
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.txt
  dev_url: https://github.com/open-mmlab/mmcv

extra:
  recipe-maintainers:
    - apatsekin
