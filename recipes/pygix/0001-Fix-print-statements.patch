From 419fae9320d69bf7a94499699530e447c5bd845c Mon Sep 17 00:00:00 2001
From: Maksim Rakitin <mrakitin@bnl.gov>
Date: Wed, 6 Oct 2021 16:09:20 -0400
Subject: [PATCH] Fix print statements

---
 pygix/process.py | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/pygix/process.py b/pygix/process.py
index b5aa1d0..08bac75 100755
--- a/pygix/process.py
+++ b/pygix/process.py
@@ -153,7 +153,7 @@ class Processor(object):
         t_start = time.time()
 
         for i, f in enumerate(file_list):
-            print 'processing file: {}/{}\n\t{}'.format(i + 1, n_files, f)
+            print('processing file: {}/{}\n\t{}'.format(i + 1, n_files, f))
 
             # THIS WORKS BUT NEEDS TESTING
             # if self.out_fname is not None:
@@ -166,7 +166,7 @@ class Processor(object):
         t_end = time.time() - t_start
         msg = '{} files processed in {} seconds\n'
         msg += '{} seconds per file'
-        print msg.format(n_files, t_end, t_end/n_files)
+        print(msg.format(n_files, t_end, t_end/n_files))
 
         y_scale = np.arange(0, n_files)
         out = (out_array, x_scale, y_scale)
@@ -185,7 +185,7 @@ class Processor(object):
         t_start = time.time()
 
         for i, f in enumerate(file_list):
-            print 'processing file: {}/{}\n\t{}'.format(i + 1, n_files, f)
+            print('processing file: {}/{}\n\t{}'.format(i + 1, n_files, f))
 
             # THIS WORKS BUT NEEDS TESTING
             # if self.out_fname is not None:
@@ -197,7 +197,7 @@ class Processor(object):
         t_end = time.time() - t_start
         msg = '{} files processed in {} seconds\n'
         msg += '{} seconds per file'
-        print msg.format(n_files, t_end, t_end/n_files)
+        print(msg.format(n_files, t_end, t_end/n_files))
 
         return True
 
@@ -369,8 +369,8 @@ def init_pygix(calibration_dict):
 
 if __name__ == '__main__':
     if len(sys.argv) is not 2:
-        print 'usage: process.py recipe.yaml'
+        print('usage: process.py recipe.yaml')
         sys.exit(0)
     else:
         rp = Processor(sys.argv[1])
-        rp.process()
\ No newline at end of file
+        rp.process()
-- 
2.24.0

