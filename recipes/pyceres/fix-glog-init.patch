diff --git a/_pyceres/glog.cc b/_pyceres/glog.cc
index 44c65b0..5e5699c 100644
--- a/_pyceres/glog.cc
+++ b/_pyceres/glog.cc
@@ -30,7 +30,18 @@ void PyBindLogStack(const char* data, T size) {
   std::cerr << std::endl << std::endl << std::endl;
 }
 
-void PyBindLogTermination() {
+// Newer versions of glog require the function passed to InstallFailureFunction
+// to be noreturn. But glog spells that in multiple possible ways, depending on
+// platform. But glog's choice of spelling does not match how the
+// noreturn-ability of std::abort is spelled. Some compilers consider this a
+// type mismatch on the function-ptr type. To fix the type mismatch, we wrap
+// std::abort and mimic the condition and the spellings from glog here.
+#if defined(__GNUC__)
+__attribute__((noreturn))
+#else
+[[noreturn]]
+#endif
+static void PyBindLogTermination() {
   std::chrono::milliseconds timespan(2000);  // or whatever
   py::scoped_estream_redirect stream(
       std::cerr,                                // std::ostream&
@@ -78,7 +89,7 @@ void init_glog(py::module& m) {
            []() {
              google::InstallFailureSignalHandler();
              google::InitGoogleLogging("");
-             google::InstallFailureFunction(&PyBindLogTermination);
+             google::InstallFailureFunction(PyBindLogTermination);
            })
       .def("install_failure_writer",
            []() { google::InstallFailureWriter(&PyBindLogStack); })
