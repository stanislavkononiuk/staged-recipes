{% set version = '1.2-5' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-terra
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/terra_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/terra/terra_{{ version }}.tar.gz
  sha256: 4dd9d41f5f12cf7246ca5f44d188b4f009707a0314f7804e6f3d1ce1cb59b972

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0
  # no skip

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: parallel, tinytest, ncdf4
requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}sed               # [win]
    - {{ posix }}grep              # [win]
    - {{ posix }}autoconf
    - {{ posix }}automake          # [not win]
    - {{ posix }}automake-wrapper  # [win]
    - {{ posix }}pkg-config
    - {{ posix }}make
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]

  host:
    - r-base
    - r-rcpp
    - r-raster
    - libgdal  # [not win]
    - proj  # [not win]
    - geos  # [not win]

  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-raster
    - libgdal  # [not win]
    - proj  # [not win]
    - geos  # [not win]

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('terra')"           # [not win]
    - "\"%R%\" -e \"library('terra')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://rspatial.org/terra

  license: GPL-3.0-or-later
  summary: Methods for spatial data analysis with raster and vector data. Raster methods allow
    for low-level data manipulation as well as high-level global, local, zonal, and
    focal computation. The predict and interpolate methods facilitate the use of regression
    type (interpolation, machine learning) models for spatial prediction, including
    with satellite remote sensing data. Processing of very large files is supported.
    See the manual and tutorials on <https://rspatial.org/terra/> to get started. 'terra'
    is very similar to the 'raster' package; but 'terra' can do more, is simpler to
    use, and it is faster.

  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r
    - TomAugspurger

# The original CRAN metadata for this package was:

# Package: terra
# Type: Package
# Title: Spatial Data Analysis
# Version: 1.2-5
# Date: 2021-04-29
# Depends: R (>= 3.5.0)
# Suggests: parallel, tinytest, ncdf4
# LinkingTo: Rcpp
# Imports: methods, Rcpp, raster (>= 3.3-7)
# SystemRequirements: C++11, GDAL (>= 2.2.3), GEOS (>= 3.4.0), PROJ (>= 4.9.3)
# Maintainer: Robert J. Hijmans <r.hijmans@gmail.com>
# Description: Methods for spatial data analysis with raster and vector data. Raster methods allow for low-level data manipulation as well as high-level global, local, zonal, and focal computation. The predict and interpolate methods facilitate the use of regression type (interpolation, machine learning) models for spatial prediction, including with satellite remote sensing data. Processing of very large files is supported. See the manual and tutorials on <https://rspatial.org/terra/> to get started. 'terra' is very similar to the 'raster' package; but 'terra' can do more, is simpler to use, and it is faster.
# License: GPL (>= 3)
# URL: https://rspatial.org/terra
# BugReports: https://github.com/rspatial/terra/issues/
# LazyLoad: yes
# Authors@R: c( person("Robert J.", "Hijmans", role = c("cre", "aut"), email = "r.hijmans@gmail.com", comment = c(ORCID = "0000-0001-5872-2872")), person("Roger", "Bivand",  role = "ctb", comment = c(ORCID = "0000-0003-2392-6140")), person("Karl", "Forner", role = "ctb"), person("Jeroen", "Ooms", role = "ctb", comment = c(ORCID = "0000-0002-4035-0289")), person("Edzer", "Pebesma", role = "ctb", comment = c(ORCID = "0000-0001-8049-7069")))
# NeedsCompilation: yes
# Packaged: 2021-04-30 04:05:01 UTC; rhijm
# Author: Robert J. Hijmans [cre, aut] (<https://orcid.org/0000-0001-5872-2872>), Roger Bivand [ctb] (<https://orcid.org/0000-0003-2392-6140>), Karl Forner [ctb], Jeroen Ooms [ctb] (<https://orcid.org/0000-0002-4035-0289>), Edzer Pebesma [ctb] (<https://orcid.org/0000-0001-8049-7069>)
# Repository: CRAN
# Date/Publication: 2021-04-30 10:40:03 UTC

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
