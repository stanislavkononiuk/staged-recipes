{% set name = "eventemitter" %}
{% set version = "0.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 0147a0d6fc8b03641997b337b8c755e89608bd0784335a4fec50bde1e31f8d6f

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - python
    - pip
  run:
    - python

about:
  home: https://github.com/asyncdef/eventemitter
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: 'Tools for working with async events.'
  
  description: |
    EventEmitter, The EventEmitter class can be used directly or as a mix-in to provide the ability to publish and subscribe to events.
    Listener functions can be defined using def or async def. All listeners are executed in a deferred way. The coro that calls emit must yield for the event to propagate.
    EventIterable, If the callback-style model of listening for events is undesirable, an async iterable is provided to offer a second model for handling events.
    The EventIterable implements the async iterable interface and can be used in conjunction with any of the tools in aitertools.
  doc_url: https://pypi.org/project/eventemitter/#description
  dev_url: https://github.com/asyncdef/eventemitter

extra:
  recipe-maintainers:
    - wiphoo
