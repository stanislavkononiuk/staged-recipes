# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 13 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "pyreadstat" %}
{% set version = "0.2.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  #sha256: 8e48f4ad426dce82ee0036f5874223fd7688709cc4a7a337fd9896cefca73596
  url: https://files.pythonhosted.org/packages/7b/60/96aad9b1062ad85090fec94fcb634b36a27b585f699cf05a408ddbdfd134/pyreadstat-0.2.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl  # [osx and py36]
  sha256: b52214aea6699df88090166741e94fc43f0acc581667ef9f1dcf9a47797ce16b  # [osx and py36]
  url: https://files.pythonhosted.org/packages/f8/fb/715c08dcce6299878e9f8bbbc5a2f8119f4ae7cdd57c63c9193fb36a5da8/pyreadstat-0.2.1-cp36-cp36m-manylinux1_x86_64.whl  # [linux and py36]
  sha256: 7ca1085bb8db830d73233055e3fe249ef440ad34b376c221f96576b3b97a0d7f  # [linux and py36]
  url: https://files.pythonhosted.org/packages/70/7b/d226370c3fa6f4aaf87f7c337a22095470f28606843defd12ab59e1d9be2/pyreadstat-0.2.1-cp36-cp36m-win_amd64.whl  # [win64 and py36]
  sha256: 124f2b10083f9b33459ac1ac78ee0899a5abb9986d31e1bb696b3c898dceda87  # [win64 and py36]
  url: https://files.pythonhosted.org/packages/1c/d4/06d5a1b031a68fc6a005832acc2ea30c4f1a2c4a7c0409f08ffd2542ffa8/pyreadstat-0.2.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl  # [osx and py37]
  sha256: 56def246f7501e7beeecab0f124bfe1637aad2d5b15a6d0ca2389a1c6220fe49  # [osx and py37]
  url: https://files.pythonhosted.org/packages/6e/7b/d0b572258560aaeaec86dfd515e59a88ddb06535782c243206d80eae5c59/pyreadstat-0.2.1-cp37-cp37m-manylinux1_x86_64.whl  # [linux and py37]
  sha256: a8aaa10d7f039729e750a5dcc47fd143cff3359b0dd32867ec8e39f1dc006273  # [linux and py37]
  url: https://files.pythonhosted.org/packages/48/27/5aaeb223b2723830a41f8ab22375a4d7c2150c3b910f4a0ea5f9f7bae7b6/pyreadstat-0.2.1-cp37-cp37m-win_amd64.whl  # [win64 and py37]
  sha256: 71ba27dc446afb5ea2a166ebf6882b34846bcd3db30aca47d42e1138a7bb3ba1  # [win64 and py37]
  # If getting the source from GitHub remove the line above
  # uncomment the line below and modify as needed
  # url: https://github.com/simplejson/{{ name }}/archive/{{ version }}.tar.gz
  
  # sha256 is the prefered checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/meta.html#building-noarch-packages for more details.
  # noarch: python
  number: 13
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # Note: --no-deps is currently required due to https://github.com/conda/conda-build/issues/3254
  # Once resolved, it should be removed.
  #script: "{{ PYTHON }} -m pip install . --no-deps -vv"
  skip: True  # [py<35]
  skip: True  # [win32]
  skip: True  # [linux32]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp36-cp36m-win_amd64.whl --no-deps -vv"  # [win64 and py36]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp37-cp37m-win_amd64.whl --no-deps -vv"  # [win64 and py37]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl --no-deps -vv"  # [osx and py36]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp36-cp36m-manylinux1_x86_64.whl --no-deps -vv"  # [linux and py36]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl --no-deps -vv"  # [osx and py37]
  script: "{{ PYTHON }} -m pip install pyreadstat-0.2.1-cp37-cp37m-manylinux1_x86_64.whl --no-deps -vv"  # [linux and py37]

requirements:
  build:
    # if your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # compilers are named 'c', 'cxx' and 'fortran'.
    #- {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python
    - pandas

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - pyreadstat
    #- pandas
    #- simplejson.tests

   
about:
  home: https://github.com/Roche/pyreadstat
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: Apache
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: Apache
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE.txt
  summary: 'read SAS, SPSS and STATA files into pandas data frames'

  # The remaining entries in this section are optional, but recommended
  description: |
    A Python package to read SAS (sas7bdat, sas7bcat, xport/xpt), SPSS (sav, zsav, por) and Stata (dta) files into pandas data frames. It is a wrapper around the C library readstat.
  doc_url: https://github.com/Roche/pyreadstat
  dev_url: https://github.com/Roche/pyreadstat

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - ofajardo
