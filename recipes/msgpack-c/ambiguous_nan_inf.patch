diff --git a/test/msgpack_c.cpp b/test/msgpack_c.cpp
index f6ba171..92be60d 100644
--- a/test/msgpack_c.cpp
+++ b/test/msgpack_c.cpp
@@ -229,16 +229,16 @@ TEST(MSGPACKC, simple_buffer_float)
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
         EXPECT_EQ(MSGPACK_OBJECT_DOUBLE, obj.type);
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
-        if (isnan(val)) {
-            EXPECT_TRUE(isnan(obj.via.f64));
+        if (std::isnan(val)) {
+            EXPECT_TRUE(std::isnan(obj.via.f64));
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
-            EXPECT_TRUE(isnan(obj.via.dec));
+            EXPECT_TRUE(std::isnan(obj.via.dec));
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
         }
-        else if (isinf(val)) {
-            EXPECT_TRUE(isinf(obj.via.f64));
+        else if (std::isinf(val)) {
+            EXPECT_TRUE(std::isinf(obj.via.f64));
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
-            EXPECT_TRUE(isinf(obj.via.dec));
+            EXPECT_TRUE(std::isinf(obj.via.dec));
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
         }
         else {
@@ -294,16 +294,16 @@ TEST(MSGPACKC, simple_buffer_double)
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
         EXPECT_EQ(MSGPACK_OBJECT_DOUBLE, obj.type);
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
-        if (isnan(val)) {
-            EXPECT_TRUE(isnan(obj.via.f64));
+        if (std::isnan(val)) {
+            EXPECT_TRUE(std::isnan(obj.via.f64));
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
-            EXPECT_TRUE(isnan(obj.via.dec));
+            EXPECT_TRUE(std::isnan(obj.via.dec));
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
         }
-        else if (isinf(val)) {
-            EXPECT_TRUE(isinf(obj.via.f64));
+        else if (std::isinf(val)) {
+            EXPECT_TRUE(std::isinf(obj.via.f64));
 #if defined(MSGPACK_USE_LEGACY_NAME_AS_FLOAT)
-            EXPECT_TRUE(isinf(obj.via.dec));
+            EXPECT_TRUE(std::isinf(obj.via.dec));
 #endif // MSGPACK_USE_LEGACY_NAME_AS_FLOAT
         }
         else {

