From a198dddb9786a10c2eb2470f68bfe50a21d1565b Mon Sep 17 00:00:00 2001
From: Vasilij Litvinov <vasilij.n.litvinov@intel.com>
Date: Mon, 23 Nov 2020 13:14:24 +0300
Subject: [PATCH 10/12] Add workaround for os.path.isdir on Windows

Signed-off-by: Vasilij Litvinov <vasilij.n.litvinov@intel.com>
---
 python/setup.py | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/python/setup.py b/python/setup.py
index 1e8ae41f7..3ad34870a 100644
--- a/python/setup.py
+++ b/python/setup.py
@@ -225,6 +225,24 @@ def download_pickle5(pickle5_dir):
             finally:
                 wzf.close()
 
+def patch_isdir():
+    '''
+    Python on Windows is having hard times at telling if a symlink is
+    a directory - it can "guess" wrong at times, which bites when
+    finding packages. Replace with a fixed version which unwraps links first.
+    '''
+    orig_isdir = os.path.isdir
+    def fixed_isdir(path, debug=False):
+        orig_path = path
+        while os.path.islink(path):
+            try:
+                link = os.readlink(path)
+            except OSError as err:
+                break
+            path = os.path.abspath(os.path.join(os.path.dirname(path), link))
+        return orig_isdir(path)
+    os.path.isdir = fixed_isdir
+
 def replace_symlinks_with_junctions():
     _LINKS = {
         r'ray\new_dashboard': '../../dashboard',
@@ -263,6 +281,7 @@ def replace_symlinks_with_junctions():
             subprocess.check_call('MKLINK /J "{}" "{}"'.format(os.path.basename(link), target), shell=True, cwd=os.path.dirname(path))
 
 if is_native_windows_or_msys():
+    patch_isdir()
     replace_symlinks_with_junctions()
 
 def build(build_python, build_java):
-- 
2.11.0

