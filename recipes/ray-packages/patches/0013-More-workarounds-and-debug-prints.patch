From 4e9b16330663155d41021cb0dd3f3ea406bfa4a8 Mon Sep 17 00:00:00 2001
From: Vasilij Litvinov <vasilij.n.litvinov@intel.com>
Date: Mon, 23 Nov 2020 16:41:18 +0300
Subject: [PATCH 13/13] More workarounds and debug prints

Signed-off-by: Vasilij Litvinov <vasilij.n.litvinov@intel.com>
---
 python/setup.py | 28 ++++++++++++++++++++++------
 1 file changed, 22 insertions(+), 6 deletions(-)

diff --git a/python/setup.py b/python/setup.py
index 038200e93..18d1b96a4 100644
--- a/python/setup.py
+++ b/python/setup.py
@@ -232,12 +232,28 @@ def patch_isdir():
     finding packages. Replace with a fixed version which unwraps links first.
     '''
     orig_isdir = os.path.isdir
-    def fixed_isdir(path):
-        while os.path.islink(path):
+    import stat
+    def fixed_islink(path):
+        try:
+            st = os.lstat(path)
+        except OSError:
+            return os.path.islink(path)
+        return stat.S_ISLNK(st.st_mode)
+
+    def fixed_isdir(path, debug=False):
+        orig_path = path
+        while fixed_islink(path):
             try:
-                path = os.readlink(path)
-            except OSError:
+                link = os.readlink(path)
+            except OSError as err:
+                if debug:
+                    print('[DEBUG] fixed_isdir("{}" -> "{}") -> {}'.format(orig_path, path, err))
                 break
+            if debug:
+                print('[DEBUG] fixed_isdir: "{}" -> "{}"'.format(path, link))
+            path = os.path.abspath(os.path.join(os.path.dirname(path), link))
+        if debug:
+            print('[DEBUG] fixed_isdir("{}" -> "{}") == {}'.format(orig_path, path, orig_isdir(path)))
         return orig_isdir(path)
     os.path.isdir = fixed_isdir
 
@@ -252,9 +268,9 @@ def replace_symlinks_with_junctions():
         path = os.path.join(root_dir, link)
         if os.path.exists(os.path.join(path, '__init__.py')):
             print('"{}" does not need workarounds, skipping'.format(link))
-            for func in (os.stat, os.lstat, os.path.isdir, os.path.isfile):
+            for func in (os.stat, os.lstat, os.path.isdir, os.path.isfile, os.readlink):
                 try:
-                    val = func(path)
+                    val = func(path) if func != os.path.isdir else func(path, debug=True)
                 except BaseException as ex:
                     val = ex
                 print('[DEBUG] {}("{}") = {}'.format(func.__name__, link, val))
-- 
2.11.0

