{% set version = '0.4.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-plackettluce
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/PlackettLuce_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/PlackettLuce/PlackettLuce_{{ version }}.tar.gz
  sha256: 519495973977f10913bb827c3527748907acde3abc55d46fc62437b52d8174d0

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-cvxr
    - r-matrix
    - r-r6
    - r-rspectra
    - r-igraph
    - r-matrixstats
    - r-partykit
    - r-psychotools
    - r-psychotree
    - r-qvcalc
    - r-sandwich
  run:
    - r-base
    - r-cvxr
    - r-matrix
    - r-r6
    - r-rspectra
    - r-igraph
    - r-matrixstats
    - r-partykit
    - r-psychotools
    - r-psychotree
    - r-qvcalc
    - r-sandwich

test:
  commands:
    - $R -e "library('PlackettLuce')"           # [not win]
    - "\"%R%\" -e \"library('PlackettLuce')\""  # [win]

about:
  home: https://hturner.github.io/PlackettLuce/
  license: GPL-3.0-only
  summary: Functions to prepare rankings data and fit the Plackett-Luce model jointly attributed
    to Plackett (1975) <doi:10.2307/2346567> and Luce (1959, ISBN:0486441369). The standard
    Plackett-Luce model is generalized to accommodate ties of any order in the ranking.
    Partial rankings, in which only a subset of items are ranked in each ranking, are
    also accommodated in the implementation. Disconnected/weakly connected networks
    implied by the rankings may be handled by adding pseudo-rankings with a hypothetical
    item. Optionally, a multivariate normal prior may be set on the log-worth parameters
    and ranker reliabilities may be incorporated as proposed by Raman and Joachims (2014)
    <doi:10.1145/2623330.2623654>. Maximum a posteriori estimation is used when priors
    are set. Methods are provided to estimate standard errors or quasi-standard errors
    for inference as well as to fit Plackett-Luce trees. See the package website or
    vignette for further details.
  license_family: GPL3
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3

extra:
  recipe-maintainers:
    - conda-forge/r
