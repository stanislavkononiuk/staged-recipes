# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "libestools" %}
{% set version = "2.5.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/festvox/speech_tools/archive/63ff01938f81443f5a294bc5f9ea6ac6ab38f6b0.tar.gz
  sha256: 8781ab15ce13fcddcb7df8fd23755a5cb6e4ab7d1a9bdbd741128b990b425496

build:
  skip: True  # [not linux]
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
  host:
    - ncurses
  run:
    - _openmp_mutex

test:
  commands:
    - test -f $PREFIX/lib/libestbase.so  # [linux]
    - test -f $PREFIX/lib/libestbase.so.2.5  # [linux]
    - test -f $PREFIX/lib/libestools.so  # [linux]
    - test -f $PREFIX/lib/libestools.so.2.5  # [linux]
    - test -f $PREFIX/lib/libeststring.so  # [linux]
    - test -f $PREFIX/lib/libeststring.so.2.5  # [linux]

about:
  home: https://github.com/festvox/speech_tools
  summary: 'EDINBURGH SPEECH TOOLS LIBRARY'
  description: |
    The Edinburgh speech tools system is a library of C++ classes, functions
    and utility programs that are frequently used in speech software. The
    system compiles to a single unix library .a file which can be linked with
    software. At present, C++ classes for several useful speech and language
    classes have been written, along with audio software and some basic signal
    processing software.
  license: BSD-4-Clause
  license_family: BSD
  license_file: COPYING
  doc_url: https://www.cstr.ed.ac.uk/projects/speech_tools/
  dev_url: https://github.com/festvox/speech_tools

extra:
  recipe-maintainers:
    - peci1
