# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "aerobulk-python" %}
{% set version = "0.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:

  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 33a75115d0901b95e4863f25a749902ea4def90494907893d3e27e39c3ef2de7


build:
  number: 0 # this was different for xcape, lets try the default here.
  skip: true  # [py<36 or win]
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - {{ compiler('fortran') }}  # [not win]
    - {{ compiler('m2w64_fortran') }}  # [win]
  host:
    - setuptools-scm
    - python
    - pip
    - numpy
  run:
    - python
    - {{ pin_compatible('numpy') }}

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - aerobulk.test
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/xgcm/aerobulk-python
  summary: 'A python wrapper for the aerobulk air-sea flux fortran code'
  license: GPL-3.0-only
  license_family: GPL
  license_file: LICENSE.txt

extra:
  recipe-maintainers:
    - jbusecke
