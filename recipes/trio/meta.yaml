{% set name = "trio" %}
{% set version = "0.3.0" %}
{% set hash_type = "sha256" %}
{% set hash_value = "d54fcfb12305bbdaa11843efe22c130acdbc72fa7dafb9c5d777051de3fbd72e" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  skip: True  # [py27]
  number: 0
  script: python setup.py install  --single-version-externally-managed --record=record.txt  

requirements:
  build:
    - python
    - setuptools    
  run:
    - python
    - attrs
    - sortedcontainers
    - async_generator >=1.6
    - idna
    - cffi  # [win]

test:
  imports:
    - trio
    - trio._core
    - trio._core.tests
    - trio._core.tests.test_multierror_scripts
    - trio.testing
    - trio.tests

about:
  home: https://github.com/python-trio/trio
  license: MIT
  license_family: MIT
  license_file: ''
  summary: An async/await-native I/O library for humans and snake people
  description: ".. image:: https://cdn.rawgit.com/python-trio/trio/9b0bec646a31e0d0f67b8b6ecc6939726faf3e17/logo/logo-with-background.svg\n   :width: 200px\n   :align: right\n\nThe Trio project's goal is\
    \ to produce a production-quality, `permissively\nlicensed <https://github.com/python-trio/trio/blob/master/LICENSE>`__,\nasync/await-native I/O library for Python. Like all async libraries,\nits main\
    \ purpose is to help you write programs that do **multiple\nthings at the same time** with **parallelized I/O**. A web spider that\nwants to fetch lots of pages in parallel, a web server that needs\
    \ to\njuggle lots of downloads and websocket connections at the same time, a\nprocess supervisor monitoring multiple subprocesses... that sort of\nthing. Compared to other libraries, Trio attempts to\
    \ distinguish\nitself with an obsessive focus on **usability** and\n**correctness**. Concurrency is complicated; we try to make it *easy*\nto get things *right*.\n\nTrio was built from the ground up\
    \ to take advantage of the `latest\nPython features <https://www.python.org/dev/peps/pep-0492/>`__, and\ndraws inspiration from `many sources\n<https://github.com/python-trio/trio/wiki/Reading-list>`__,\
    \ in\nparticular Dave Beazley's `Curio <https://curio.readthedocs.io/>`__.\nThe resulting design is radically simpler than older competitors like\n`asyncio <https://docs.python.org/3/library/asyncio.html>`__\
    \ and\n`Twisted <https://twistedmatrix.com/>`__, yet just as capable. Trio is\nthe Python I/O library I always wanted; I find it makes building\nI/O-oriented programs easier, less error-prone, and just\
    \ plain more\nfun. Perhaps you'll find the same.\n\nThis project is young and still somewhat experimental: the overall\ndesign is solid and the existing features are fully tested and\ndocumented, but\
    \ you may encounter missing functionality or rough\nedges. We *do* encourage you do use it, but you should `read and\nsubscribe to issue #1\n<https://github.com/python-trio/trio/issues/1>`__ to get\
    \ warning and a\nchance to give feedback about any compatibility-breaking changes.\n\nVital statistics:\n\n* Supported environments: Linux, MacOS, or Windows running some kind of Python\n  3.5-or-better\
    \ (either CPython or PyPy3 is fine). \\*BSD and illumus likely\n  work too, but are not tested.\n\n* Install: ``python3 -m pip install -U trio`` (or on Windows, maybe\n  ``py -3 -m pip install -U trio``).\
    \ No compiler needed.\n\n* Tutorial and reference manual: https://trio.readthedocs.io\n\n* Bug tracker and source code: https://github.com/python-trio/trio\n\n* License: MIT or Apache 2, your choice\n\
    \n* Contributor guide: https://trio.readthedocs.io/en/latest/contributing.html\n\n* Code of conduct: Contributors are requested to follow our `code of\n  conduct\n  <https://trio.readthedocs.io/en/latest/code-of-conduct.html>`_\n\
    \  in all project spaces.\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers:
    - nicoddemus
