# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "CaImAn" %}
{% set version = "1.5.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/flatironinstitute/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: ab272a4cd8ed4200fd844c7a9fa5770257313a8f6eb658ce57a82577f0ca3e75

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  skip: True  # [not py==36]
  #script: "{{ PYTHON }} -m pip install . -vv"
#  entry_points:
#    - thecommand = package.module:function

requirements:
#  build:
#    - {{ compiler('c') }}  # [not osx]
#    - {{ compiler('cxx') }}  # [not osx]
#    - cython
#    - numpy
##    - libcxx
##    - clang
  host:
#    - {{ compiler('c') }}   # [not osx]
#    - {{ compiler('cxx') }}  # [not osx]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - python
    - pip
    - numpy
    - cython
    - ripgrep
#    - libcxx
#    - clang
  run:
    - python=3.6
    - tensorflow
    - bokeh
    - cython
    - future
    - h5py
    - ipykernel=4.10
    - ipython
    - ipyparallel
    - jupyter
    - matplotlib
    - mypy
    - nose
    - numpy
    - opencv
    - peakutils
    - pims
    - scipy
    - scikit-image
    - scikit-learn
    - spyder
    - tifffile
    - tk=8.6.8
    - tqdm
    - pyqtgraph
    - pynwb

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - caiman
#  commands:
#    - thecommand

about:
  home: http://github.com/flatironinstitute/caiman
  license: GPL-2.0
  license_family: GPL
  license_file: LICENSE.txt
  summary: 'Calcium imaging analysis'

  # The remaining entries in this section are optional, but recommended.
  description: |
    CaImAn implements a set of essential methods required in the analysis
    pipeline of large scale calcium imaging data. Fast and scalable algorithms
    are implemented for motion correction, source extraction, spike
    deconvolution, and component registration across multiple days. It is
    suitable for both two-photon and one-photon fluorescence microscopy data,
    and can be run in both batch and online mode.
  doc_url: http://caiman.readthedocs.io
  dev_url: https://github.com/flatironinstitute/CaImAn

extra:
  recipe-maintainers:
    - pgunn
    - epnev

