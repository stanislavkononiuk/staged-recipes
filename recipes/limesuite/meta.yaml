{% set name = "LimeSuite" %}
{% set version = "20.10.0" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/myriadrf/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: f6d79dc67cb52a5aea839d1dc00e65f85367cb2c275d77f149833d32cf79b467
  patches:
    - 0001-Modify-build-system-to-use-system-glew-instead-of-th.patch
    - 0002-ConnectionFX3-Allow-choice-between-libusb-and-CyAPI-.patch

build:
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - {{ cdt('libudev-devel') }}  # [linux]
    - ninja
    # required for OpenGL support
    # See https://conda-forge.org/docs/maintainer/knowledge_base.html?highlight=cdt#libgl
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libdrm-devel') }}  # [linux]
    - {{ cdt('libselinux') }}  # [linux]
    - {{ cdt('libxxf86vm-devel') }}  # [linux]
    # required for linking with gtk3 (through wxwidgets)
    - {{ cdt('libx11') }}  # [linux]
    - {{ cdt('libxau') }}  # [linux]
    - {{ cdt('libxcomposite') }}  # [linux]
    - {{ cdt('libxcursor') }}  # [linux]
    - {{ cdt('libxdamage') }}  # [linux]
    - {{ cdt('libxext') }}  # [linux]
    - {{ cdt('libxfixes') }}  # [linux]
    - {{ cdt('libxi') }}  # [linux]
    - {{ cdt('libxinerama') }}  # [linux]
    - {{ cdt('libxrandr') }}  # [linux]
    - {{ cdt('libxrender') }}  # [linux]
    # required for linking with wxwidgets
    - {{ cdt('libxtst') }}  # [linux]
  host:
    - glew
    - libusb
    - soapysdr
    # wxwidgets is not available for osx, otherwise we could ENABLE_GUI
    - wxwidgets  # [not osx]

outputs:
  - name: liblimesuite
    script: install.sh  # [unix]
    script: install.bat  # [not unix]
    build:
      run_exports:
        - {{ pin_subpackage('liblimesuite', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - libusb
    test:
      commands:
        # verify that executables can be run
        - LimeUtil --info

        # check that all the device connections we want are reported
        - LimeUtil --info | grep FT601  # [not win]
        - LimeUtil --info | grep FX3  # [not win]
        - LimeUtil --info | grep PCIEXillybus  # [not win]
        - LimeUtil --info | findstr /l FT601  # [win]
        - LimeUtil --info | findstr /l FX3  # [win]
        - LimeUtil --info | findstr /l PCIEXillybus  # [win]

        # verify that headers get installed
        - test -f $PREFIX/include/lime/LimeSuite.h  # [not win]
        - if not exist %PREFIX%\\Library\\include\\lime\\LimeSuite.h exit 1  # [win]

        # verify that libraries get installed
        - test -f $PREFIX/lib/libLimeSuite${SHLIB_EXT}  # [not win]
        - if not exist %PREFIX%\\Library\\bin\\LimeSuite.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\LimeSuite.lib exit 1  # [win]

        # verify that udev rule gets installed
        - test -f $PREFIX/lib/udev/rules.d/64-limesuite.rules  # [linux]
  - name: soapysdr-module-lms7
    script: install.sh  # [unix]
    script: install.bat  # [not unix]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - {{ pin_subpackage('liblimesuite', exact=True) }}
        - soapysdr
      run:
        - {{ pin_subpackage('liblimesuite', exact=True) }}
    test:
      commands:
        # verify that libraries get installed
        - test -f $PREFIX/lib/SoapySDR/modules0.7/libLMS7Support.so  # [not win]
        - if not exist %PREFIX%\\Library\\lib\\SoapySDR\\modules0.7\\LMS7Support.dll exit 1  # [win]

        # show info to see if module is detected
        - SoapySDRUtil --info
  - name: limesuite
    script: install.sh  # [unix]
    script: install.bat  # [not unix]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
      host:
        - glew
        - {{ pin_subpackage('liblimesuite', exact=True) }}
        - {{ pin_subpackage('soapysdr-module-lms7', exact=True) }}
        # wxwidgets is not available for osx, otherwise we could ENABLE_GUI
        - wxwidgets  # [not osx]
      run:
        - {{ pin_subpackage('liblimesuite', exact=True) }}
        - {{ pin_subpackage('soapysdr-module-lms7', exact=True) }}
    test:
      commands:
        # verify that GUI executables get installed
        - test -f $PREFIX/bin/LimeSuiteGUI  # [linux]
        - if not exist %PREFIX%\\Library\\bin\\LimeSuiteGUI.exe exit 1  # [win]

        # verify limesuite dependencies
        - LimeUtil --info

        # show info to see if module is detected
        - SoapySDRUtil --info

about:
  home: http://wiki.myriadrf.org/Lime_Suite
  license: Apache-2.0 AND MIT AND BSD-3-Clause
  license_file:
    - COPYING
    - external/cpp-feather-ini-parser/LICENSE
    - external/kissFFT/COPYING
  summary: Driver and GUI for LMS7002M-based (Lime) SDR platforms
  description: |
    Lime Suite is a collection of software supporting several hardware
    platforms including the LimeSDR, drivers for the LMS7002M transceiver
    RFIC, and other tools for developing with LMS7-based hardware.
    Installing the Lime Suite enables many SDR applications such as GQRX
    to work with supported hardware through the bundled SoapySDR support
    module.

    The `liblimesuite` package contains the main library that other
    packages should develop against. The `soapysdr-module-lms7` package
    contains the Soapy SDR module that supports Lime devices. The
    `limesuite` package provides the entire software suite, depending
    on the previous packages and also providing GUI tools.
  doc_url: https://wiki.myriadrf.org/Lime_Suite
  dev_url: https://github.com/myriadrf/LimeSuite

extra:
  feedstock-name: limesuite
  recipe-maintainers:
    - ryanvolz
