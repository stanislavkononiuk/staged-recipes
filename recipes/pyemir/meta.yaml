{% set name = "pyemir" %}
{% set version = "0.10" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "21e74bf615675bf4d5b3a45e4d788dcda111eda891f66f09d396361be8664013" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  skip: True  # [win]
  entry_points:
    - pyemir-apply_rectification_only = emirdrp.tools.apply_rectification_only:main
    - pyemir-apply_rectwv_coeff = emirdrp.processing.wavecal.apply_rectwv_coeff:main
    - pyemir-continuum_flatfield = emirdrp.tools.continuum_flatfield:main
    - pyemir-convert_refined_multislit_param = emirdrp.tools.convert_refined_multislit_param:main
    - pyemir-display_slitlet_arrangement = emirdrp.tools.display_slitlet_arrangement:main
    - pyemir-fit_boundaries = emirdrp.tools.fit_boundaries:main
    - pyemir-median_slitlets_rectified = emirdrp.processing.wavecal.median_slitlets_rectified:main
    - pyemir-merge_bounddict_files = emirdrp.tools.merge_bounddict_files:main
    - pyemir-merge2images = emirdrp.tools.merge2images:main
    - pyemir-rectwv_coeff_add_longslit_model = emirdrp.processing.wavecal.rectwv_coeff_add_longslit_model:main
    - pyemir-rect_wpoly_for_mos = emirdrp.tools.rect_wpoly_for_mos:main
    - pyemir-rectwv_coeff_from_arc_image = emirdrp.processing.wavecal.rectwv_coeff_from_arc_image:main
    - pyemir-rectwv_coeff_from_mos_library = emirdrp.processing.wavecal.rectwv_coeff_from_mos_library:main
    - pyemir-rectwv_coeff_to_ds9 = emirdrp.processing.wavecal.rectwv_coeff_to_ds9:main
    - pyemir-select_unrectified_slitlets = emirdrp.tools.select_unrectified_slitlets:main
    - pyemir-slitlet_boundaries_from_continuum = emirdrp.tools.slitlet_boundaries_from_continuum:main
    - pyemir-overplot_boundary_model = emirdrp.processing.wavecal.overplot_boundary_model:main
    - pyemir-overplot_bounddict = emirdrp.tools.overplot_bounddict:main
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed --no-cache-dir -vvv"

requirements:
  build:
    - python
    - pip
    - setuptools
  run:
    - python
    - setuptools
    - numpy
    - scipy
    - numina >=0.17
    - astropy >=2
    - enum34  # [py27]
    - matplotlib
    - six
    - photutils >=0.2
    - sep >0.5
    - scikit-image >=0.11
    - scikit-learn >=0.19
    - lmfit

test:
  imports:
    - emirdrp
    - emirdrp.core
    - emirdrp.instrument
    - emirdrp.instrument.configs
    - emirdrp.instrument.tests
    - emirdrp.processing
    - emirdrp.processing.tests
    - emirdrp.processing.wavecal
    - emirdrp.recipes
    - emirdrp.recipes.acquisition
    - emirdrp.recipes.aiv
    - emirdrp.recipes.aiv.tests
    - emirdrp.recipes.auxiliary
    - emirdrp.recipes.calibration
    - emirdrp.recipes.engineering
    - emirdrp.recipes.image
    - emirdrp.recipes.image.tests
    - emirdrp.recipes.spec
    - emirdrp.recipes.spec.tests
    - emirdrp.recipes.tests
    - emirdrp.simulation
    - emirdrp.tests
    - emirdrp.tools
    - emirdrp.util
  commands:
    - pyemir-apply_rectification_only --help
    - pyemir-apply_rectwv_coeff --help
    - pyemir-continuum_flatfield --help
    - pyemir-convert_refined_multislit_param --help
    - pyemir-display_slitlet_arrangement --help
    - pyemir-fit_boundaries --help
    - pyemir-median_slitlets_rectified --help
    - pyemir-merge_bounddict_files --help
    - pyemir-merge2images --help
    - pyemir-rectwv_coeff_add_longslit_model --help
    - pyemir-rect_wpoly_for_mos --help
    - pyemir-rectwv_coeff_from_arc_image --help
    - pyemir-rectwv_coeff_from_mos_library --help
    - pyemir-rectwv_coeff_to_ds9 --help
    - pyemir-select_unrectified_slitlets --help
    - pyemir-slitlet_boundaries_from_continuum --help
    - pyemir-overplot_boundary_model --help
    - pyemir-overplot_bounddict --help

about:
  home: http://guaix.fis.ucm.es/projects/emir
  license: GPL-3.0
  license_family: GPL
  license_file: LICENSE.txt
  summary: EMIR Data Processing Pipeline
  description: |
    EMIR is a wide-field, near-infrared (Z, J, H and K bands), multi-object 
    spectrograph for the Nasmyth focus of 10.4m telescope GTC. 
    This is PyEmir, the data reduction pipeline for EMIR.
  doc_url: https://pyemir.readthedocs.io/
  dev_url: https://github.com/guaix-ucm/pyemir

extra:
  recipe-maintainers: 
    - sergiopasra

