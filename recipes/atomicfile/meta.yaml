{% set name = "atomicfile" %}
{% set version = "1.01" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 190502c5c0b1145f5c294e0be07a9f029d8ea728a0d0806e0ca466467208763e

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - python
    - pip
  run:
    - python

test:
  imports:
    - atomicfile

about:
  home: https://github.com/sashka/atomicfile-py
  license: MIT
  license_family: MIT
  license_file: LICENSE.rst
  summary: 'Writeable file object that atomically updates a file.'

  description: |
    Writeable file object that atomically updates a file. All writes will 
    go to a temporary file. Call close() explicitly when you are done 
    writing, and AtomicFile will rename the temporary copy to the original 
    name, making the changes visible. If the object is destroyed without 
    being closed, all your writes are discarded. AtomicFile is friendly 
    to with statement.
  doc_url: https://github.com/sashka/atomicfile-py
  dev_url: https://github.com/sashka/atomicfile-py

extra:
  recipe-maintainers:
    - jan-janssen
