# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "dask-geomodeling" %}
{% set version = "2.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: da7f1450ba8ac87f61006b49aba8f341d742ca940fdb4d36ed4b783d694bfc7f

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"
  noarch: python

requirements:
  host:
    - python >=3.5
    - pip
  run:
    - python >=3.5
    - gdal
    - dask-core
    - toolz
    - geopandas
    - pytz
    - numpy
    - scipy

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - dask_geomodeling
    - dask_geomodeling.core
    - dask_geomodeling.geometry
    - dask_geomodeling.raster

about:
  home: http://github.com/nens/dask-geomodeling
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: 'On-the-fly operations on geographical maps'

  # The remaining entries in this section are optional, but recommended.
  description: |
    dsk-geomodeling is a collection of classes that are to be stacked together to
    create configurations for on-the-fly operations on geographical maps.
  doc_url: http://dask-geomodeling.readthedocs.io/
  dev_url: http://github.com/nens/dask-geomodeling

extra:
  recipe-maintainers:
    - caspervdw
    - reinout
