{% set name = "parallelproj" %}
{% set version = "1.2.6" %}
{% set build_number = "0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/gschramm/parallelproj/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 826a83e51db6459004d17c030c21fb32e7cb5205a45c28c8f50f87f235321196

build:
  run_exports:
    - {{ pin_subpackage( name|lower, max_pin='x.x') }}
  number: {{ build_number }}
  string: "cpuh{{ PKG_HASH }}_{{ build_number }}"   # [cuda_compiler_version == "None"]
  string: "cuda{{ cuda_compiler_version|string }}h{{ PKG_HASH }}_{{ build_number }}"  # [cuda_compiler_version != "None"]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}  # [cuda_compiler_version != "None"]
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake >=3.23
    - ninja
  host:
    - libgomp      # [linux]
    - llvm-openmp  # [osx]
test:
  commands:
    - test -f $PREFIX/lib/libparallelproj_c$SHLIB_EXT  # [unix]
    - if not exist %LIBRARY_LIB%\parallelproj_c.lib exit 1  # [win]
    - test -f $PREFIX/lib/libparallelproj_cuda$SHLIB_EXT  # [linux and cuda_compiler_version != "None"]
    - parallelproj_nontof_fwd_back_test  # [not win]
    - parallelproj_nontof_fwd_back_test.exe  # [win]

about:
  home: https://github.com/gschramm/parallelproj
  license:  MIT
  license_file: LICENSE
  summary: 'parallelized TOF PET projectors'

extra:
  recipe-maintainers:
    - gschramm
