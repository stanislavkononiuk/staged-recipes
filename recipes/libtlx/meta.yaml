{% set name = "libtlx" %}
{% set version = "0.5.20191212" %}
{% set hash_type = "sha256" %}
{% set hash_value = "5e67d3042a390dbb831b6d46437e3c7fadf738bff362aa7376b210b10ecd532d" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  - url: 'https://github.com/tlx/tlx/archive/v{{version}}.tar.gz'
    {{hash_type}}: {{hash_value}}

build:
  skip: true  # [win]
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake  >=3.5
    - make

test:
  commands:
    # Verify headers are present
    - test -f $PREFIX/include/tlx/algorithm.hpp  # [unix]

    # Verify pkg-config file is present
    - test -f $PREFIX/lib/pkgconfig/tlx.pc  # [linux32]
    - test -f $PREFIX/lib64/pkgconfig/tlx.pc  # [linux64]

    # Verify shared library is present
    - test -f $PREFIX/lib/libtlx.a  # [linux32]
    - test -f $PREFIX/lib64/libtlx.a  # [linux64]
    - test -f $PREFIX/lib/libtlx.a  # [osx]

    # conda tools
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]

about:
  home: https://github.com/tlx/tlx
  license: BSL-1.0
  license_family: OTHER
  license_file: License.txt
  summary: 'tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL.'
  description: |
          tlx is a collection of C++ helpers and extensions universally needed, but not found in the STL. The most important design goals and conventions are: (i) high modularity with as little dependencies between modules as possible. (ii) attempt to never break existing interfaces. (iii) compile on all platforms with C++ – smartphones, supercomputers, windows, etc. (iv) zero external dependencies: no additional libraries are required. (v) warning and bug-freeness on all compilers. (vi) keep overhead down – small overall size such that is can be included without bloating applications.
  doc_url: https://tlx.github.io/
  dev_url: https://github.com/tlx/tlx

extra:
  recipe-maintainers:
    - angriman
    - avdgrinten
    - fabratu
