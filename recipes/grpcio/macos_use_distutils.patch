diff --git a/setup.py b/setup.py
index 388e629..5eb54b4 100644
--- a/setup.py
+++ b/setup.py
@@ -243,15 +243,8 @@ def cython_extensions_and_necessity():
                   for name in CYTHON_EXTENSION_MODULE_NAMES]
   config = os.environ.get('CONFIG', 'opt')
   prefix = 'libs/' + config + '/'
-  if "darwin" in sys.platform:
-    extra_objects = [prefix + 'libares.a',
-                     prefix + 'libboringssl.a',
-                     prefix + 'libgpr.a',
-                     prefix + 'libgrpc.a']
-    core_c_files = []
-  else:
-    core_c_files = list(CORE_C_FILES)
-    extra_objects = []
+  core_c_files = list(CORE_C_FILES)
+  extra_objects = []
   extensions = [
       _extension.Extension(
           name=module_name,
diff --git a/src/python/grpcio/commands.py b/src/python/grpcio/commands.py
index 4c2ebae..24e835d 100644
--- a/src/python/grpcio/commands.py
+++ b/src/python/grpcio/commands.py
@@ -253,29 +253,6 @@ class BuildExt(build_ext.build_ext):
     LINK_OPTIONS = {}
 
     def build_extensions(self):
-        if "darwin" in sys.platform:
-            config = os.environ.get('CONFIG', 'opt')
-            target_path = os.path.abspath(
-                os.path.join(
-                    os.path.dirname(os.path.realpath(__file__)), '..', '..',
-                    '..', 'libs', config))
-            targets = [
-                os.path.join(target_path, 'libboringssl.a'),
-                os.path.join(target_path, 'libares.a'),
-                os.path.join(target_path, 'libgpr.a'),
-                os.path.join(target_path, 'libgrpc.a')
-            ]
-            make_process = subprocess.Popen(
-                ['make'] + targets,
-                stdout=subprocess.PIPE,
-                stderr=subprocess.PIPE)
-            make_out, make_err = make_process.communicate()
-            if make_out and make_process.returncode != 0:
-                sys.stdout.write(str(make_out) + '\n')
-            if make_err:
-                sys.stderr.write(str(make_err) + '\n')
-            if make_process.returncode != 0:
-                raise Exception("make command failed!")
 
         compiler = self.compiler.compiler_type
         if compiler in BuildExt.C_OPTIONS:
