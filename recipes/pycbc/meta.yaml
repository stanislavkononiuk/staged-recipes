{% set name = "PyCBC" %}
{% set version = "1.13.2" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 91bbe3398a3526132f71f188530b70266781a44a51ae4ed492e51cc0adb3538c
  patches:
    # remove symlink to pycbc library path
    - no-gwave.patch
    # add missing shebang
    - pycbc-ringinj.patch

build:
  number: 0
  skip: true  # [win]
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv "

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python 2.7
    - pip
    - setuptools
    - numpy 1.13.0
    - cython
  run:
    - python 2.7
    - astropy >=2.0.3
    - beautifulsoup4 >=4.6.0
    - cython
    - decorator >=3.4.2
    - dqsegdb
    - emcee ==2.2.1
    - h5py >=2.5
    - jinja2
    - kombine >=0.8.2
    - ligo-gracedb
    - ligo-segments
    - lscsoft-glue >=1.59.3
    - mako >=1.0.1
    - matplotlib >=1.5.1
    - mpld3 >=0.3
    - numpy >=1.13.0,<1.16.0
    - pillow
    - python-lal
    - python-lalframe
    - python-lalsimulation
    - python-pegasus-wms
    - requests >=1.2.1
    - scipy >=0.16.0
    - six >=1.10.0
    - weave

test:
  imports:
    - pycbc
    - pycbc.catalog
    - pycbc.distributions
    - pycbc.events
    - pycbc.fft
    - pycbc.filter
    - pycbc.frame
    - pycbc.inference
    - pycbc.inference.io
    - pycbc.inference.models
    - pycbc.inference.sampler
    - pycbc.inject
    - pycbc.io
    - pycbc.noise
    - pycbc.population
    - pycbc.psd
    - pycbc.results
    - pycbc.strain
    - pycbc.tmpltbank
    - pycbc.types
    - pycbc.vetoes
    - pycbc.waveform
    - pycbc.workflow
  requires:
    - fftw
  commands:
    - export MPLBACKEND="agg"
    - pycbc_aligned_bank_cat --help
    - pycbc_aligned_stoch_bank --help
    - pycbc_average_psd --help
    - pycbc_bank_verification --help
    - pycbc_banksim --help
    - pycbc_banksim_combine_banks --help
    - pycbc_banksim_match_combine --help
    - pycbc_banksim_plot_eff_fitting_factor --help
    - pycbc_banksim_plot_fitting_factors --help
    - pycbc_banksim_skymax --help
    - pycbc_banksim_table_point_injs --help
    - pycbc_brute_bank --help
    - pycbc_calculate_psd --help
    - pycbc_coinc_bank2hdf --help
    - pycbc_coinc_findtrigs --help
    - pycbc_coinc_hdfinjfind --help
    - pycbc_coinc_mergetrigs --help
    - pycbc_coinc_statmap --help
    - pycbc_coinc_statmap_inj --help
    - pycbc_coinc_time --help
    - pycbc_combine_coincident_events --help
    - pycbc_combine_statmap --help
    - pycbc_compress_bank --help
    - pycbc_condition_strain --help
    - pycbc_create_injections --help
    - pycbc_create_offline_search_workflow --help
    - pycbc_dark_vs_bright_injections --help
    - pycbc_distribute_background_bins --help
    - pycbc_faithsim --help
    - pycbc_fit_sngl_trigs --help
    - pycbc_fit_sngls_binned --help
    - pycbc_fit_sngls_by_template --help
    - pycbc_fit_sngls_over_multiparam --help
    - pycbc_fit_sngls_over_param --help
    - pycbc_foreground_censor --help
    - pycbc_foreground_minifollowup --help
    - pycbc_generate_hwinj --help
    - pycbc_generate_hwinj_from_xml --help
    - pycbc_geom_aligned_2dstack --help
    - pycbc_geom_aligned_bank --help
    - pycbc_geom_nonspinbank --help
    - pycbc_get_ffinal --help
    - pycbc_get_loudest_params --help
    - pycbc_hdf5_splitbank --help
    - pycbc_inference --help
    - pycbc_inference_extract_samples --help
    - pycbc_inference_plot_acceptance_rate --help
    - pycbc_inference_plot_acf --help
    - pycbc_inference_plot_acl --help
    - pycbc_inference_plot_gelman_rubin --help
    - pycbc_inference_plot_geweke --help
    - pycbc_inference_plot_inj_intervals --help
    - pycbc_inference_plot_inj_recovery --help
    - pycbc_inference_plot_movie --help
    - pycbc_inference_plot_posterior --help
    - pycbc_inference_plot_prior --help
    - pycbc_inference_plot_samples --help
    - pycbc_inference_table_summary --help
    - pycbc_inj_cut --help
    - pycbc_injection_minifollowup --help
    - pycbc_insert_frame_hwinj --help
    - pycbc_inspiral --help
    - pycbc_inspiral_skymax --help
    - pycbc_losc_segment_query --help
    - pycbc_make_bank_verifier_workflow --help
    - pycbc_make_banksim --help
    - pycbc_make_coinc_search_workflow --help
    - pycbc_make_faithsim --help
    - pycbc_make_html_page --help
    - pycbc_make_inference_inj_workflow --help
    - pycbc_make_inference_workflow --help
    - pycbc_make_offline_grb_workflow --help
    - pycbc_make_psd_estimation_workflow --help
    - pycbc_make_sbank_workflow --help
    - pycbc_make_uberbank_workflow --help
    - pycbc_merge_psds --help
    - pycbc_multi_inspiral --help
    - pycbc_multiifo_coinc_findtrigs --help
    - pycbc_optimal_snr --help
    - pycbc_page_banktriggerrate --help
    - pycbc_page_coinc_snrchi --help
    - pycbc_page_coincinfo --help
    - pycbc_page_foreground --help
    - pycbc_page_foundmissed --help
    - pycbc_page_ifar --help
    - pycbc_page_injinfo --help
    - pycbc_page_injtable --help
    - pycbc_page_recovery --help
    - pycbc_page_segments --help
    - pycbc_page_segplot --help
    - pycbc_page_segtable --help
    - pycbc_page_sensitivity --help
    - pycbc_page_snglinfo --help
    - pycbc_page_snrchi --help
    - pycbc_page_snrifar --help
    - pycbc_page_snrratehist --help
    - pycbc_page_vetotable --help
    - pycbc_plot_background_coincs --help
    - pycbc_plot_bank_bins --help
    - pycbc_plot_chigram --help
    - pycbc_plot_gating --help
    - pycbc_plot_hist --help
    - pycbc_plot_hwinj --help
    - pycbc_plot_psd_file --help
    - pycbc_plot_psd_timefreq --help
    - pycbc_plot_qscan --help
    - pycbc_plot_range --help
    - pycbc_plot_range_vs_mtot --help
    - pycbc_plot_singles_timefreq --help
    - pycbc_plot_singles_vs_params --help
    - pycbc_plot_throughput --help
    - pycbc_plot_trigger_timeseries --help
    - pycbc_plot_trigrate --help
    - pycbc_plot_waveform --help
    - pycbc_population_plots --help
    - pycbc_population_rates --help
    - pycbc_randomize_inj_dist_by_optsnr --help
    - pycbc_ringinj --help
    - pycbc_single_template --help
    - pycbc_single_template_plot --help
    - pycbc_sngl_minifollowup --help
    - pycbc_split_inspinj --help
    - pycbc_splitbank --help
    - pycbc_stat_dtphase --help
    - pycbc_strip_injections --help
    - pycbc_template_recovery_hist --help
    - pycbc_tmpltbank_to_chi_params --help
    - pycbc_upload_xml_to_gracedb --help

about:
  home: https://pycbc.org/
  dev_url: https://github.com/gwastro/pycbc/
  doc_url: http://pycbc.org/pycbc/latest/html/
  license: GPLv3
  license_family: GPL3
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'
  summary: Core library to analyze gravitational-wave data, find signals, and study their parameters.
  description: |
    PyCBC is a software package used to explore astrophysical sources
    of gravitational waves.
    It contains algorithms that can detect coalescing compact binaries
    and measure the astrophysical parameters of detected sources.
    PyCBC was used in the first direct detection of gravitational
    waves (GW150914) by LIGO and is used in the ongoing analysis of
    LIGO and Virgo data.

extra:
  recipe-maintainers:
    - duncanmmacleod
    - ahnitz
