{% set name = "QRules" %}
{% set version = "0.9.2" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url:
    https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: baa8f72320fed23310d1e40ab3f0d5970e30a94922c095b95d315c063cbde7a9

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - pip
    - python >=3.6
    - setuptools_scm
  run:
    - python >=3.6
    - attrs >=20.1.0
    - jsonschema
    - particle
    - python-constraint
    - PyYAML
    - tqdm >=4.24.0
    - typing-extensions

test:
  imports:
    - qrules
    - qrules.io
    - qrules.conservation_rules
    - qrules.particle
    - qrules.quantum_numbers
    - qrules.topology
    - qrules.transition

about:
  home: https://github.com/ComPWA/qrules
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary:
    Rule based particle reaction problem solver on a quantum number level

  description: |
    QRules is a Python package for **validating and generating particle reactions**
    using quantum number conservation rules. The user only has to provide a certain
    set of boundary conditions (initial and final state, allowed interaction types,
    expected decay topologies, etc.). QRules will then span the space of allowed
    quantum numbers over all allowed decay topologies and particle instances that
    correspond with the sets of allowed quantum numbers it has found.

    The resulting state transition objects are particularly useful for **amplitude
    analysis / Partial Wave Analysis** as they contain all information (such as
    expected masses, widths, and spin projections) that is needed to formulate an
    amplitude model.

  dev_url: https://github.com/ComPWA/qrules
  doc_url: https://qrules.readthedocs.io

extra:
  recipe-maintainers:
    - redeboer
