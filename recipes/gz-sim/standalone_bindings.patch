diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 52a41c1c2e..c58816032e 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -1,3 +1,18 @@
+if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
+  cmake_minimum_required(VERSION 3.16)
+  set(GZ_SIM_VER 7)
+  set(GZ_COMMON_VER 5)
+  project(gz-sim${GZ_SIM_VER}-python VERSION ${GZ_SIM_VER})
+  find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
+  find_package(pybind11 REQUIRED)
+  find_package(gz-sim${PROJECT_VERSION_MAJOR} REQUIRED)
+  set(PROJECT_LIBRARY_TARGET_NAME "gz-sim${PROJECT_VERSION_MAJOR}::gz-sim${PROJECT_VERSION_MAJOR}")
+  include(CTest)
+  if(BUILD_TESTING)
+    enable_testing()
+  endif()
+endif()
+
 if(WIN32 AND CMAKE_BUILD_TYPE STREQUAL "Debug")
   # pybind11 logic for setting up a debug build when both a debug and release
   # python interpreter are present in the system seems to be pretty much broken.
@@ -22,6 +37,9 @@ if(USE_SYSTEM_PATHS_FOR_PYTHON_INSTALLATION)
 
   if(USE_DIST_PACKAGES_FOR_PYTHON)
     string(REPLACE "site-packages" "dist-packages" GZ_PYTHON_INSTALL_PATH ${Python3_SITEARCH})
+  else()
+    # custom cmake command is returning dist-packages
+    string(REPLACE "dist-packages" "site-packages" GZ_PYTHON_INSTALL_PATH ${Python3_SITEARCH})
   endif()
 else()
   # If not a system installation, respect local paths
