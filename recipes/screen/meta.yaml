{% set name = "screen" %}
{% set version = "4.8.0" %}
{% set version_printed = "4.08.00" %}
{% set sha256 = "6e11b13d8489925fde25dfb0935bf6ed71f9eb47eff233a181e078fde5655aa1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://ftp.gnu.org/gnu/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [not unix]
  script: "./configure --prefix=${PREFIX} && make && make install"

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - make
    - texinfo
  host:
    - ncurses
  run:
    - ncurses

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  commands:
    - (screen -v || true) | grep 'Screen version {{ version_printed }}'

about:
  home: https://www.gnu.org/software/screen/
  license: GPL-3.0-only
  license_family: GPL
  license_file: COPYING
  summary: |
    Screen is a full-screen window manager that multiplexes a physical terminal between several processes, 
    typically interactive shells

  description: |
    Screen is a full-screen window manager that multiplexes a physical
    terminal between several processes, typically interactive
    shells. Each virtual terminal provides the functions of the DEC
    VT100 terminal and, in addition, several control functions from
    the ANSI X3.64 (ISO 6429) and ISO 2022 standards (e.g.,
    insert/delete line and support for multiple character sets). There
    is a scrollback history buffer for each virtual terminal and a
    copy-and-paste mechanism that allows the user to move text regions
    between windows. When screen is called, it creates a single window
    with a shell in it (or the specified command) and then gets out of
    your way so that you can use the program as you normally
    would. Then, at any time, you can create new (full-screen) windows
    with other programs in them (including more shells), kill the
    current window, view a list of the active windows, turn output
    logging on and off, copy text between windows, view the scrollback
    history, switch between windows, etc. All windows run their
    programs completely independent of each other. Programs continue
    to run when their window is currently not visible and even when
    the whole screen session is detached from the users terminal.
    simplejson is a simple, fast, complete, correct and extensible
    JSON <https://json.org> encoder and decoder for Python 2.5+ and
    Python 3.3+. It is pure Python code with no dependencies, but
    includes an optional C extension for a serious speed boost.
  doc_url: https://www.gnu.org/software/screen/manual/screen.html
  dev_url: https://savannah.gnu.org/git/?group=screen

extra:
  recipe-maintainers:
    - notestaff
