{% set name = "Quart" %}
{% set version = "0.6.10" %}
{% set sha256 = "0ce415d8618e5e1db0de3d09f108639c3353cd6b19e2dfb6f3260a31433853eb" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  noarch: python
  number: 0
  script: python -m pip install --no-deps --ignore-installed .
  entry_points:
    - quart=quart.cli:main

requirements:
  host:
    - pip
    - python >=3.7.0
    - setuptools >=40.6.2

  run:
    - python >=3.7.0
    - aiofiles >=0.4.0
    - blinker >=1.4
    - click >=7.0
    - hypercorn >=0.4.2
    - itsdangerous >=1.1.0
    - jinja2 >=2.10
    - multidict >=4.5.2
    - sortedcontainers >=2.1.0

test:
  imports:
    - quart
  commands:
    - quart --version

about:
  home: https://gitlab.com/pgjones/quart
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'A Python ASGI web microframework with the same API as Flask'
  description: |
    Quart is a Python ASGI web microframework. It is intended to provide the easiest way to use
    asyncio functionality in a web context, especially with existing Flask
    apps. This is possible as the Quart API is a superset of the Flask API.
    Quart aims to be a complete web microframework, as it supports
    HTTP/1.1, HTTP/2 and websockets. Quart is very extendable and has a
    number of known extensions and works
    with many of the Flask extensions.
  doc_url: https://pgjones.gitlab.io/quart/
  dev_url: https://gitlab.com/pgjones/quart

extra:
  recipe-maintainers:
    - maxyme
