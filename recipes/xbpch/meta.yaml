# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "xbpch" %}
{% set version = "0.3.1" %}
{% set sha256 = "903358ec30cd6ca8c577aa0c9f2b384574f95c525452911b53614c5ae2046271" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    # When setuptools is available add the `--single-version-externally-managed --record record.txt` above.
    - setuptools
    # if your project compiles code (such as a C extension) then add `toolchain` as a build requirement.
  run:
    - python
    - dask
    - xarray

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - xbpch
    - xbpch.open_bpchdataset

about:
  home: http://github.com/darothen/xbpch
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'xarray interface for bpch files'

  # The remaining entries in this section are optional, but recommended
  description: |
  xpbch is a simple utility for reading the proprietary binary punch
  format (bpch) outputs used in versions of GEOS-Chem earlier than v
  v11-02. The utility allows a user to load this data into an
  xarray/dask-powered workflow without necessarily pre-processing the
  data using GAMAP or IDL.
  doc_url: http://xbpch.readthedocs.io/
  dev_url: https://github.com/darothen/xbpch

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    - darothen
