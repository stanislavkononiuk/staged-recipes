# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "kenlm" %}
{% set version = environ.get('GIT_DESCRIBE_HASH') %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  git_url: https://github.com/kpu/kenlm
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  #sha256: 2b3a0c466fb4a1014ea131c2b8ea7c519f9278eba73d6fcb361b7bdb4fd494e9
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  skip: True  # [not linux64]
  number: 0
  script_env:
    - KENLM_MAX_ORDER=7

requirements:
  build:
    - {{ compiler('cxx') }}
    - make
    - cmake
  host:
    - pip
    - python
    - libboost >=1.71.0
    - eigen
    - zlib
    - bzip2
    - xz
  run:
    - python
    - libboost >=1.71.0
    - eigen
    - zlib
    - bzip2
    - xz

test:
  imports:
    - kenlm
  requires:
    - pip
  commands:
    - pip check
    - command -V lmplz
    - command -V filter
    - command -V build_binary

about:
  home: https://github.com/kpu/kenlm
  summary: Faster and Smaller Language Model Queries
  license: LGPL-2.1-only
  license_file: LICENSE

extra:
  recipe-maintainers:
    - cgr71ii
