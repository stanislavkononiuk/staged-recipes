# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "mmdet" %}
{% set version = "2.25.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/open-mmlab/mmdetection/archive/refs/tags/v{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: 6642d593395a6c2d13bd1a574525477a8d08ef0fb7e67f9127a91b67193b06a9
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs:
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - python >=3.7
    - pip
    - pytorch
  run:
    - python >=3.7
    - matplotlib
    - numpy
    - pycocotools
    - six
    - terminaltables

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - mmdet
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - mmcv-full
    - pytorch
    - opencv
  commands:
    - pip check
    - python3 -c "import mmdet; print(mmdet.__version__)"

about:
  home: https://github.com/open-mmlab/mmdetection
  summary: 'OpenMMLab Detection Toolbox and Benchmark'
  description: |
    MMDetection is an open source object detection toolbox based on PyTorch. It is a part of the OpenMMLab project.
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  doc_url: https://github.com/open-mmlab/mmdetection

extra:
  recipe-maintainers:
    - apatsekin
