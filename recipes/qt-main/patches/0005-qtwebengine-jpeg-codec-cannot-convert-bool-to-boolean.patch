From 11f5aa1b20bbdcf7479e25fa45179271c5c1b1e7 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Mon, 10 Dec 2018 15:25:39 -0600
Subject: [PATCH] qtwebengine: jpeg codec cannot convert bool to boolean

---
 .../pdfium/core/fxcodec/codec/fx_codec_jpeg.cpp      | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/qtwebengine/src/3rdparty/chromium/third_party/pdfium/core/fxcodec/codec/fx_codec_jpeg.cpp b/qtwebengine/src/3rdparty/chromium/third_party/pdfium/core/fxcodec/codec/fx_codec_jpeg.cpp
index f0b8d66d3a..932ac29aeb 100644
--- a/qtwebengine/src/3rdparty/chromium/third_party/pdfium/core/fxcodec/codec/fx_codec_jpeg.cpp
+++ b/qtwebengine/src/3rdparty/chromium/third_party/pdfium/core/fxcodec/codec/fx_codec_jpeg.cpp
@@ -77,11 +77,11 @@ static void _src_skip_data(struct jpeg_decompress_struct* cinfo, long num) {
 }
 
 static boolean _src_fill_buffer(j_decompress_ptr cinfo) {
-  return 0;
+  return FALSE;
 }
 
 static boolean _src_resync(j_decompress_ptr cinfo, int desired) {
-  return 0;
+  return FALSE;
 }
 
 static void _error_do_nothing(j_common_ptr cinfo) {}
@@ -94,7 +94,7 @@ static void _error_do_nothing2(j_common_ptr cinfo, char*) {}
 static void _dest_do_nothing(j_compress_ptr cinfo) {}
 
 static boolean _dest_empty(j_compress_ptr cinfo) {
-  return false;
+  return FALSE;
 }
 #endif  // _FX_PLATFORM_ == _FX_PLATFORM_WINDOWS_
 }  // extern "C"
@@ -147,7 +147,7 @@ static bool JpegLoadInfo(const uint8_t* src_buf,
     jpeg_destroy_decompress(&cinfo);
     return false;
   }
-  int ret = jpeg_read_header(&cinfo, true);
+  int ret = jpeg_read_header(&cinfo, TRUE);
   if (ret != JPEG_HEADER_OK) {
     jpeg_destroy_decompress(&cinfo);
     return false;
@@ -231,7 +231,7 @@ bool CCodec_JpegDecoder::InitDecode() {
   }
   cinfo.image_width = m_OrigWidth;
   cinfo.image_height = m_OrigHeight;
-  int ret = jpeg_read_header(&cinfo, true);
+  int ret = jpeg_read_header(&cinfo, TRUE);
   if (ret != JPEG_HEADER_OK)
     return false;
 
@@ -452,7 +452,7 @@ int CCodec_JpegModule::ReadHeader(Context* pContext,
                                   int* nComps,
                                   CFX_DIBAttribute* pAttribute) {
   auto* ctx = static_cast<CJpegContext*>(pContext);
-  int ret = jpeg_read_header(&ctx->m_Info, true);
+  int ret = jpeg_read_header(&ctx->m_Info, TRUE);
   if (ret == JPEG_SUSPENDED)
     return 2;
   if (ret != JPEG_HEADER_OK)
-- 
2.19.1

