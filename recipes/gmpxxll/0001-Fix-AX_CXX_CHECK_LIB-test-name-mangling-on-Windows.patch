From 35d637369713d802679e9e840f0901c27da0f86b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Julian=20R=C3=BCth?= <julian.rueth@fsfe.org>
Date: Sat, 13 Nov 2021 21:09:58 -0600
Subject: [PATCH] Fix check for GMP++ in configure.ac

by actually checking for something defined in the GMP++ shared library.
---
 configure.ac               |  9 ++--
 doc/news/configure-win.rst |  3 ++
 m4/ax_cxx_check_lib.m4     | 88 ++++----------------------------------
 3 files changed, 16 insertions(+), 84 deletions(-)
 create mode 100644 doc/news/configure-win.rst

diff --git a/configure.ac b/configure.ac
index 355ff5d..860ba88 100644
--- a/configure.ac
+++ b/configure.ac
@@ -28,10 +28,11 @@ AC_LANG([C++])
 dnl We use some C++17 features such as if constexpr
 AX_CXX_COMPILE_STDCXX(17)
 
-# GMPXX does not contain anything that we can check for with AX_CXX_CHECK_LIB
-# so we just check for something from the standard library, i.e., that -lgmpxx
-# goes through
-AX_CXX_CHECK_LIB([gmpxx], [std::runtime_error::what () const], [have_gmpxx=yes], AC_MSG_ERROR([GMP library for C++ not found]), [-lgmp])
+AC_CHECK_HEADERS([gmpxx.h], , AC_MSG_ERROR([GMP++ headers not found]))
+AX_CXX_CHECK_LIB([gmpxx], [
+#include <iostream>
+#include <gmpxx.h>
+], [std::cout << mpz_class()],  [have_gmpxx=yes], AC_MSG_ERROR([GMP library for C++ not found]), [-lgmp])
 
 dnl Our benchmarks use Google's C++ benchmark library.
 dnl We fail if they cannot be found but let the user disable it explicitly.
diff --git a/doc/news/configure-win.rst b/doc/news/configure-win.rst
new file mode 100644
index 0000000..b1d399f
--- /dev/null
+++ b/doc/news/configure-win.rst
@@ -0,0 +1,3 @@
+**Fixed:**
+
+* Fixed check for GMP++ on Windows.
diff --git a/m4/ax_cxx_check_lib.m4 b/m4/ax_cxx_check_lib.m4
index 8c1f5a5..65c3b17 100644
--- a/m4/ax_cxx_check_lib.m4
+++ b/m4/ax_cxx_check_lib.m4
@@ -1,33 +1,4 @@
-dnl @synopsis AX_CXX_CHECK_LIB(libname, functioname, action-if, action-if-not)
-dnl
-dnl The standard AC_CHECK_LIB can not test functions in namespaces.
-dnl Therefore AC_CHECK_LIB(cgicc, cgicc::Cgicc::getVersion) will always
-dnl fail. We need to decompose the functionname into a series of namespaces
-dnl where it gets declared so that it can be used for a link test.
-dnl
-dnl In the first version I did allow namespace::functionname to be a
-dnl reference to a void-argument global functionname (just wrapped in a
-dnl namespace) like its C counterparts would be - but in reality such
-dnl thing does not exist. The only global / static functions are always
-dnl made const-functions which is an attribute mangled along into the
-dnl library function export name. 
-dnl
-dnl The normal usage will ask for a test of a class-member function which
-dnl should be presented with a full function spec with arguments given in 
-dnl parentheses following the function name - if the function to test for 
-dnl does expect arguments then you should add default initial values in the 
-dnl prototype (even if they do not exist originally, these are used only 
-dnl locally to build a correct function call in the configure test script).
-dnl
-dnl In the current version if you do omit the parenthesis from the macro
-dnl argument then the macro will assume that you want to check for the
-dnl class name - which is really to check for default constructor being
-dnl exported from the given library name. 
-dnl
-dnl   EXAMPLE:
-dnl AX_CXX_CHECK_LIB(cgicc, [cgicc::HTTPCookie])
-dnl AX_CXX_CHECK_LIB(cgicc, [cgicc::Cgicc::getVersion () const],
-dnl AX_CXX_CHECK_LIB(boost_regex, [boost::RegEx::Position (int i = 0) const])
+dnl @synopsis AX_CXX_CHECK_LIB(libname, prologue, body, action-if, action-if-not)
 dnl
 dnl Result:
 dnl Just as the usual AX_CXX_CHECK_LIB - defines HAVE_LIBCGICC 
@@ -51,62 +22,19 @@ dnl @version 2019-03-01
 AC_DEFUN([AX_CXX_CHECK_LIB],
 [m4_ifval([$3], , [AH_CHECK_LIB([$1])])dnl
 AS_LITERAL_IF([$1],
-	      [AS_VAR_PUSHDEF([ac_Lib], [ac_cv_lib_$1_$2])],
-	      [AS_VAR_PUSHDEF([ac_Lib], [ac_cv_lib_$1''_$2])])dnl
-AC_CACHE_CHECK([for $2 in -l$1], ac_Lib,
+	      [AS_VAR_PUSHDEF([ac_Lib], [ac_cv_lib_$1_$3])],
+	      [AS_VAR_PUSHDEF([ac_Lib], [ac_cv_lib_$1''_$3])])dnl
+AC_CACHE_CHECK([for lib$1], ac_Lib,
 [ac_check_lib_save_LIBS=$LIBS
-LIBS="-l$1 $5 $LIBS"
-case "$2" 
-in *::*::*\(*)
-AC_LINK_IFELSE([AC_LANG_PROGRAM([
- namespace `echo "$2" | sed -e "s/::.*//"` 
- { class `echo "$2" | sed -e "s/.*::\\(.*\\)::.*/\\1/" -e "s/(.*//"` 
-   { public: int `echo "$2" | sed -e "s/.*:://" -e "/(/!s/..*/&()/"`;
-   };
- }
-],[`echo "$2" | sed  -e "s/(.*//" -e "s/\\(.*\\)::\\(.*\\)/(static_cast<\\1*>(0))->\\2/g"`()])],
-	       [AS_VAR_SET(ac_Lib, yes)],
-	       [AS_VAR_SET(ac_Lib, no)])
-;; *::*::*)
-AC_LINK_IFELSE([AC_LANG_PROGRAM([
- namespace `echo "$2" | sed -e "s/::.*//"` 
- { namespace `echo "$2" | sed -e "s/.*::\\(.*\\)::.*/\\1/"` 
-   { class `echo "$2" | sed -e "s/.*:://"` 
-      { public: `echo "$2" | sed -e "s/.*:://"` ();
-      };
-   }
- }
-],[new $2()])],
-	       [AS_VAR_SET(ac_Lib, yes)],
-	       [AS_VAR_SET(ac_Lib, no)])
-;; *::*\(*)
-AC_LINK_IFELSE([AC_LANG_PROGRAM([
- class `echo "$2" | sed -e "s/\\(.*\\)::.*/\\1/" -e "s/(.*//"` 
-   { public: int `echo "$2" | sed -e "s/.*:://" -e "/(/!s/..*/&()/"`;
-   };
-],[`echo "$2" | sed  -e "s/(.*//" -e "s/\\(.*\\)::\\(.*\\)/(static_cast<\\1*>(0))->\\2/g"`()])],
-	       [AS_VAR_SET(ac_Lib, yes)],
-	       [AS_VAR_SET(ac_Lib, no)])
-;; *::*)
-AC_LINK_IFELSE([AC_LANG_PROGRAM([
- namespace `echo "$2" | sed -e "s/::.*//"` 
- { class `echo "$2" | sed -e "s/.*:://"`
-   { public: `echo "$2" | sed -e "s/.*:://"` ();
-   };
- }
-],[new $2()])],
-	       [AS_VAR_SET(ac_Lib, yes)],
-	       [AS_VAR_SET(ac_Lib, no)])
-;; *)
-AC_LINK_IFELSE([AC_LANG_CALL([], [$2])],
+LIBS="-l$1 $6 $LIBS"
+AC_LINK_IFELSE([AC_LANG_PROGRAM([$2], [$3])],
 	       [AS_VAR_SET(ac_Lib, yes)],
 	       [AS_VAR_SET(ac_Lib, no)])
-;; esac
 LIBS=$ac_check_lib_save_LIBS])
 AS_IF([test AS_VAR_GET(ac_Lib) = yes],
-      [m4_default([$3], [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_LIB$1))
+      [m4_default([$4], [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_LIB$1))
   LIBS="-l$1 $LIBS"
 ])],
-      [$4])dnl
+      [$5])dnl
 AS_VAR_POPDEF([ac_Lib])dnl
 ])# AC_CHECK_LIB
-- 
2.33.1

