{% set version = "2019.5" %}
{% set buildnum = "281" %}

# use this if our build script changes and we need to increment beyond intel's version
# {% set dstbuildnum='4' %}
{% set openmp_version = version %}
  # 117 was intel's base build number.  We're up 1 after making the license file not read-only
{% set openmp_buildnum = buildnum %}

package:
  name: mkl
  version: {{ version }}

source:
  - url: https://anaconda.org/intel/mkl/{{ version }}/download/{{ target_platform }}/mkl-{{ version }}-intel_{{ buildnum }}.tar.bz2
    folder: mkl

build:
  # 117 was intel's base build number.  We're up 1 after making the license file not read-only
  number: {{ buildnum }}
  binary_relocation: false
  detect_binary_files_with_prefix: false
  skip: True                                  # [ppc64le]
  missing_dso_whitelist:
    # just ignore tbb on mac.  We could add it as a dep when we have it.
    - libtbb.dylib                   # [osx]
    - "$RPATH/libtbb.dylib"          # [osx]
    # this one should be here, probably needs fixup of RUNPATH/RPATH
    - libiomp5.dylib                   # [osx]
    - "$RPATH/libiomp5.dylib"          # [osx]
    # normal linux stuff that would go away if we had libgcc-ng in the run deps
    - /lib*/ld-linux.so.2
    - /lib64/ld-linux-x86-64.so.2
    - /lib*/libpthread.so.0
    - /lib*/libdl.so.2
    - /lib*/libgcc_s.so.1
    - /lib*/libc.so.6
    - /lib*/libm.so.6
    # these two really shouldn't be here.  See mkl_repack_and_patchelf.sh
    - libiomp5.so
    - libcoi_device.so.0
    - /usr/lib/libstdc++.so.6       # [linux]
    - /usr/lib64/libstdc++.so.6     # [linux]
    - /usr/lib/libc++.1.dylib       # [osx]
    # hooray, windows
    - "C:\\Windows\\System32\\WINTRUST.dll"

outputs:
  - name: mkl
    script: repack.sh   # [unix]
    script: repack.bat  # [win]
    requirements:
      host:
        - llvm-openmp
      run:
        - llvm-openmp
    about:
      home: https://software.intel.com/en-us/mkl
      license: proprietary - Intel
      license_family: Proprietary
      license_file: LICENSE.txt
      summary: Math library for Intel and compatible processors
      description: |
        Intel Math Kernel Library is a BLAS implementation tuned for high performance on Intel CPUs.
        This package is a repackaged set of binaries obtained directly from Intel\'s anaconda.org channel.
      doc_url: https://software.intel.com/en-us/mkl/documentation

  # mutex package to keep only one blas implementation in a given env
  - name: blas
    version: 1.0
    build:
      string: mkl

extra:
  recipe-maintainers:
    - isuruf
    - beckermr
