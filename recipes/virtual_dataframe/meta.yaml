{% set BASENAME = "virtual_dataframe" %}
#{% if VDF_MODE %}
#  {% set NAME = BASENAME + "-" + VDF_MODE %}
#{% else %}
#  {% set NAME = BASENAME %}
#{% endif %}
{% set NAME = BASENAME %}
{% set PRJ_VERSION = "v0.1rc2" %}
{% set HASH = "7389764a6b2f25fb18a58fb2618fa2f68fc2c06386fdb482edc0b8c90549e358" %}
{% set PRJ_PACKAGE = BASENAME %}
{% set PYTHON_VERSION = "3.8" %}
{% set PYTHON_VERSION_MAX = "3.9" %}

package:
  name: "{{ NAME }}"
  version: "{{ PRJ_VERSION }}"

source:
  # Activate the next line to test the local source code
#   path: ../../../..

  # Activate url and sha256 to test the published tag
  # See https://docs.github.com/en/rest/repos/contents#download-a-repository-archive-tar
    url: https://github.com/pprados/{{ BASENAME }}/tarball/{{ PRJ_VERSION }}/{{ BASENAME }}.tar.gz
    sha256: {{ HASH }}

build:
  noarch: python
  number: 0
  # no such file directory sur PYTHON ?
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ PRJ_VERSION }}
  script: python -m pip install --progress-bar off --quiet --no-cache-dir --upgrade --force-reinstall --no-input . -vv
#   FIXME script: python -m pip install --progress-bar off --quiet --no-input . -vv

requirements:
  build:
    - python
#    - python {{ PYTHON_VERSION }}
    - pip  # Indispensable pour une installation correct avec scm
    - setuptools # Indispensable pour une installation correct avec scm
    - setuptools_scm # Indispensable pour une installation correct avec scm

#  host:
#    - python =={{ PYTHON_VERSION }}
#    - pip
#    - setuptools # Indispensable pour une installation correct avec scm
#    - setuptools_scm # Indispensable pour une installation correct avec scm
#    {% if VDF_MODE in ('all', 'cudf', 'dask_cudf') %}
#    - python >={{ PYTHON_VERSION }},<={{ PYTHON_VERSION_MAX }}
#    {% else %}
#    - python >={{ PYTHON_VERSION }}
#    {% endif %}


  run:
    - python =={{ PYTHON_VERSION }}
#    - python
# conda_build.exceptions.CondaBuildException: Empty package; python present in build and host deps.  You probably picked up the build environment's python  executable.  You need to alter your recipe to  use the PYTHON env var in your recipe to run that executable.
#    {% if VDF_MODE in ('all', 'cudf', 'dask_cudf') %}
#    - python >={{ PYTHON_VERSION }},<={{ PYTHON_VERSION_MAX }}
#    {% else %}
#    - python >={{ PYTHON_VERSION }}
#    {% endif %}
    - python-dotenv
    - pandas >=1.4
    - GPUtil
    {% if VDF_MODE != '' %}
    {% if VDF_MODE in ('all', 'dask_modin', 'modin') %}
    - modin-dask >=0.13
    {% endif %}
    {% if VDF_MODE in ('all', 'cudf', 'dask_cudf') %}
    - cupy
    - cudf >=22.8
    {% endif %}
    {% if VDF_MODE in ('all', 'dask', 'dask_cudf') %}
    - dask >=2022.7
    - distributed >=2022.7
    - bokeh >=2.1.1
    - cytoolz >=0.8.2
    - jinja2
    {% endif %}
#    {% if VDF_MODE in ('all', 'dask_cudf') %}
#    - dask-cuda >=22.8
#    - dask-cudf >=22.8
#    {% endif %}
##    {% if VDF_MODE in ('all', 'ray_modin') %}
##    - modin-ray >=0.13
##    {% endif %}
    {% endif %} # VDF_MODE != ''

test:
#  requires:
#    - virtual_dataframe
  files:
    - _run_test.sh  # [unix]
    - _run_test.bat  # [win]
  commands:
    - bash _run_test.sh  # [unix]
#    - _run_test.bat  # [win]
#    - $PYTHON -c 'import virtual_dataframe ; print(virtual_dataframe.VDF_MODE)'

about:
  home:    https://github.com/pprados/virtual_dataframe
  doc_url: https://pprados.github.io/virtual_dataframe/
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  summary: Bridge between pandas, cudf, dask, modin, dask-modin and dask-cudf
  keywords: {{ VDF_MODE }} pandas dataframe gpu
  tags: {{ VDF_MODE }} pandas

extra:
  recipe-maintainers:
    - pprados
#  copy_test_source_files: false
