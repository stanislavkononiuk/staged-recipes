{% set name = "mongomock" %}
{% set version = "3.17.0" %}
{% set sha256 = "7c9c829abfcb7ae9074a3d2e3db15e279edea73f560da3b0b306d929619cca45" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  noarch: python
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    - python
    - setuptools
  run:
    - python

test:
  imports:
    - mongomock

about:
  home: https://github.com/mongomock/mongomock
  license: BSD-3-Clause-No-Nuclear-License-2014
  license_family: BSD
  license_file: LICENSE
  summary: Small library for mocking pymongo collection objects for testing purposes
  description: |
    Mongomock is a small library to help testing Python code that interacts with
    MongoDB via Pymongo.

    MongoDB is complex. This library aims at a reasonably complete mock of
    MongoDB for testing purposes, not a perfect replica. This means some
    features are not likely to make it in any time soon.

    Also, since many corner cases are encountered along the way, our goal is to
    try and TDD our way into completeness. This means that every time we
    encounter a missing or broken (incompatible) feature, we write a test for
    it and fix it. There are probably lots of such issues hiding around
    lurking, so feel free to open issues and/or pull requests and help the
    project out!

    NOTE: We don't include pymongo functionality as "stubs" or "placeholders".
    Since this library is used to validate production code, it is unacceptable
    to behave differently than the real pymongo implementation. In such cases
    it is better to throw NotImplementedError than implement a modified version
    of the original behavior.
  doc_url: https://github.com/mongomock/mongomock
  dev_url: https://github.com/mongomock/mongomock

extra:
  recipe-maintainers:
    - birnbaum
    - mathiaseitz
    - trendelkampschroer
