{% set version = "1.1.109" %}
{% set deno_version = load_file_regex(load_file='./configuration', regex_pattern='export\sDENO=v(\S+)') %}
{% set deno_dom_version = load_file_regex(load_file='configuration', regex_pattern='export DENO_DOM=v([^-]+)') %}
{% set pandoc_version = load_file_regex(load_file='configuration', regex_pattern='export PANDOC=(\S+)') %}
{% set call="call" if win else "" %}

package:
  name: quarto
  version: {{ version }}

source:
  url: https://github.com/quarto-dev/quarto-cli/releases/download/v{{ version }}/quarto-{{ version }}.tar.gz
  sha256: 545879feb62a44ab94bc2f5e5ccb233944099e415c8d60ec399c018d402191fc
  patches:
    # TODO: I gave up on path override stuff for windows. You have to do setlocal enabledelayedexpansion and then endlocal after,
    #    passing the variables out from the setlocal section. That was a headache, so I punted and just patch the hard-coded values
    #    in the quarto setup script. The right way to do this is to figure out how to allow the variables to be overridden in the
    #    generated win_configuration.bat file.
    - 0001-win-conda-path-overrides.patch
    - 0002-conda-install-path-for-tinytex.patch

build:
  number: 0

requirements:
  build:
    - unzip   # [linux]
  host:
    - deno      {{ deno_version.group(1) if deno_version else "" }}
    - deno-dom  {{ deno_dom_version.group(1) if deno_dom_version else "" }}
    - pandoc    {{ pandoc_version.group(1) if deno_dom_version else "" }}
    - esbuild
  run:
    # Deno, deno-dom and pandoc have proven to be fickle
    #    regarding Quarto's source code. The pinning here
    #    is not so much that there are binary compatibility
    #    issues, but just that these dependencies are only
    #    known to work in a pretty narrow range.
    - {{ pin_compatible("deno", max_pin="x.x.x") }}
    - {{ pin_compatible("pandoc", max_pin="x.x.x") }}
    # we vendor deno-dom JS dependencies, so it is important
    #  that the version at runtime matches the one at build time
    - {{ pin_compatible("deno-dom", max_pin="x.x.x") }}
    - esbuild
    - dart-sass

test:
  commands:
    # since quarto is a cmd script, we have to run these with "call" or else they exit the
    #    tests based on the status of the first command (successful or not)
    - {{ call }} quarto install tool tinytex
    - {{ call }} quarto check
    - {{ call }} quarto render hello.qmd --debug --log-level debug --verbose --to pdf
    - {{ call }} quarto render hello.qmd --debug --log-level debug --verbose --to html
    - {{ call }} quarto -h
  files:
    - hello.qmd
  requires:
    - matplotlib
    - python >=3
    - jupyter

about:
  home: https://quarto.org/
  license: GPL-2.0-or-later
  license_file:
    - COPYRIGHT
    - COPYING.md
  summary: An open-source scientific and technical publishing system built on Pandoc

extra:
  recipe-maintainers:
    - msarahan
