# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "xsar" %}
{% set version = "0.5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/umr-lops/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: 2a57f3968a158c6d22a4ae459e94527eb76e12498b7716a075bf61c5b9ae1d09
  # git_url: https://github.com/umr-lops/xsar.git
  # git_rev: v{{ version }}
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  # sha256: 2b3a0c466fb4a1014ea131c2b8ea7c519f9278eba73d6fcb361b7bdb4fd494e9
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # noarch: generic
  script: "{{ PYTHON }} -m pip install . -vv"
  noarch: python

requirements:
  host:
    - python >=3.6
    - setuptools_scm
    - pip
  run:
    - aiohttp
    - attrs
    - cartopy >=0.19.0
    - dask >=2021.6.2
    - gdal >=3.2.1
    - geopandas
    - importlib_resources
    - jmespath
    - lxml
    - more-itertools
    - pyproj
    - rasterio >=1.2.6
    - setuptools_scm
    - xarray
    - python >=3.6

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - xsar

about:
  description: xsar is a distributed level 1 SAR file reader designed to write efficient
    distributed processing algorhitm with xarray and dask.
  dev_url: https://github.com/umr-lops/xsar
  doc_url: https://cyclobs.ifremer.fr/static/sarwing_datarmor/xsar/index.html
  home: https://github.com/umr-lops/xsar
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: xsar is a distributed level 1 SAR file reader
extra:
  recipe-maintainers:
    - oarcher
    - alevieux
