{% set name = "pyston_lite" %}
{% set pyston_version = "2.3.4" %}

package:
  name: {{ name|lower }}-split
  version: {{ pyston_version }}

source:
  - url: https://github.com/pyston/pyston/archive/pyston_{{ pyston_version }}.tar.gz
    sha256: 9989ce0f3a83611b11f79121d29ceec84c3cb4b4a8c3de4f8d97eb42042f4cee
  # pyston-lite uses a preprocessing script from inside the LuaJIT repository (that is not
  # packaged as part of the luajit package), but only as a build tool (ie is not included
  # in the built artifacts).
  - url: https://github.com/LuaJIT/LuaJIT/archive/e2c312e0deb874aa5fa8ce502c08d87deb38e82f.tar.gz
    sha256: bff4764c19466def90667d2f7fcbd0781b8e62476b12105868f8e44babd03f8e
    folder: pyston/LuaJIT/

build:
  number: 0

  skip: True  # [not linux]
  skip: True  # [py!=38]

# In theory the requirements can/should be specified per-output, but in practice
# conda-build will produce a corrupt package if the compiler dependency is not
# additionally specified at this top scope. It is required to declare the dependency
# both here and in the outputs: section as well; removing either will cause the c
# compiler to not be installed.
requirements:
  build:
    - {{ compiler('c') }}

outputs:
  - name: pyston_lite
    # This 'script' line must go under 'outputs', not 'build'
    script: build_pyston_lite.sh

    # An empty "build" section is required, or else it seems to skip
    # the build in certain build scenarios:
    build:

    requirements:
      build:
        # (See comment for the top-level requirements block)
        - {{ compiler('c') }}
        # NB: listing a "python" dependence in this section will cause the package to misbuild
      host:
        - python 3.8.* *_cpython
        - make
      run:
        - python 3.8.* *_cpython

    test:
      imports:
        - pyston_lite

  - name: pyston_lite_autoload

    build:
      # This 'script' line must go under 'build', not 'outputs'
      script: cd pyston/pyston_lite/autoload; python setup.py install -v
      noarch: python

    requirements:
      host:
        - python
      run:
        - {{ pin_subpackage('pyston_lite', exact=True) }}

    test:
      commands:
        - python -c "import sys; assert 'pyston_lite' in sys.modules"

about:
  home: https://github.com/pyston/pyston
  summary: 'A JIT for Python'
  description: |
      pyston-lite is the JIT component of Pyston, a faster implementation of Python.
  license: PSF-2.0
  license_file: LICENSE

extra:
  feedstock-name: pyston_lite
  recipe-maintainers:
    - kmod
    - undingen
