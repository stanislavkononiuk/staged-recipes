let pyhull use provided Qhull rather than having it (re)build (parts of) Qhull itself
author: Kenneth Hoste (HPC-UGent)
diff --git a/setup.py b/setup.py
index 0cd6173..05577f2 100644
--- a/setup.py
+++ b/setup.py
@@ -5,14 +5,22 @@ import sys
 from setuptools import setup, Extension, find_packages
 
 src_dir = "src"
-include_dirs = glob.glob(os.path.join("src", "libqhull"))
-sources = glob.glob(os.path.join("src", "libqhull", "*.c"))
+include_dirs = [os.path.join(os.getenv('LIBRARY_PREFIX'), 'include', 'libqhull')]
+library_dirs = [os.path.join(os.getenv('LIBRARY_PREFIX'), 'lib')]
+sources = []
+define_macros = []
 if sys.platform.strip() == "darwin":
     include_dirs += glob.glob(os.path.join("src", "fmemopen"))
     sources += glob.glob(os.path.join("src", "fmemopen", "*.c"))
+elif sys.platform.strip() == "win32":
+    define_macros.append(("qh_dllimport", '1'))
 extension = Extension('pyhull._pyhull',
                       include_dirs=include_dirs,
-                      sources=[os.path.join(src_dir, '_pyhull.c')] + sources)
+                      library_dirs=library_dirs,
+                      libraries=['qhull'],
+                      define_macros=define_macros,
+                      sources=[os.path.join(src_dir, '_pyhull.c')] + sources,
+                      )
 
 long_description = """
 Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the
