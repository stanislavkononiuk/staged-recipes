{% set name = "dragonfly2" %}
{% set version = "0.23.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: f947a3a41d0b438562c3a7ce6eb1f22412869646f30b1826502ed9ca62b9b504


build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"
  skip: True # [not osx]

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    # - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python
    - setuptools >=40.0.0
    - packaging >=19.0
    - six
    - pyperclip >=1.7.0
    - enum34
    - regex
    - decorator
    - lark-parser
    - comtypes  # [win]
    - pywin32  # [win]
    - psutil >=5.5.1  # [linux]
    - pynput >=1.4.2  # [linux]
    - pynput >=1.4.2  # [osx]
    - pyobjc-core >=5.2  # [osx]
    - py-applescript  # [osx]
    - json-rpc
    - Werkzeug
    - requests

test:
  imports:
    - dragonfly

about:
  home: https://github.com/dictation-toolbox/dragonfly
  license: GPL-3.0-only
  license_family: GPL3
  license_file: LICENSE.txt
  summary: 'Dragonfly is a speech recognition framework for Python that makes it convenient to create custom commands to use with speech recognition software.'
  description: |
    Dragonfly is a speech recognition framework for Python that makes it convenient to
    create custom commands to use with speech recognition software. It was written
    to make it very easy for Python macros, scripts, and applications to interface
    with speech recognition engines. Its design allows speech commands and grammar
    objects to be treated as first-class Python objects.
  doc_url: https://dragonfly2.readthedocs.io/en/latest/
  dev_url: https://github.com/dictation-toolbox/dragonfly

extra:
  recipe-maintainers:
    - ndmaxar
    - oblute
    - rluria14
