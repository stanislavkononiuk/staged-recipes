{% set name = "fakeroot-ng" %}
{% set version = "0.18" %}
{% set sha256 = "189eacda630752980d40e34b2c01ce23d839daab3d691a4706bb9eac79f7e144" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  # arhived versions url: https://sourceforge.net/projects/fakerootng/files/{{ name }}/{{ version }}/{{ name }}-{{ version }}.tar.gz/download
  url: https://sourceforge.net/projects/fakerootng/files/{{ name }}/{{ name }}-{{ version }}.tar.gz/download
  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [not linux]

requirements:
  build:
    - toolchain

test:
  commands:
    - conda inspect linkages -p $PREFIX {{ name }}  # [not win]
    - whoami | grep -v -c 'root' >/dev/null
    - fakeroot-ng bash -c 'whoami' | grep -c 'root' >/dev/null

about:
  home: https://fakeroot-ng.lingnu.com
  license: LGPL-2.1
  license_family: LGPL
  license_file: COPYING
  summary: 'Fakeroot-ng is a clean re-implementation of fakeroot'

  description: |
    Fakeroot-ng is a clean re-implementation of fakeroot. The core idea is 
    to run a program, but wrap all system calls that program performs so 
    that it thinks it is running as root, while it is, in practice, running 
    as an unprivileged user. When the program is trying to perform a privileged 
    operation (such as modifying a file's owner or creating a block device), 
    this operation is emulated, so that an unprivileged operation is actually 
    carried out, but the result of the privileged operation is reported to 
    the program whenever it attempts to query the result.
  dev_url: https://sourceforge.net/projects/fakerootng/

extra:
  recipe-maintainers:
    - sodre
