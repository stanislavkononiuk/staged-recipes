{% set version = '0.3.0' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-crsmeta
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/crsmeta_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/crsmeta/crsmeta_{{ version }}.tar.gz
  sha256: 02b4bc2f28f090067014f2640896d94e967669bd824c40a524475506105e60a7

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
  run:
    - r-base

test:
  commands:
    - $R -e "library('crsmeta')"           # [not win]
    - "\"%R%\" -e \"library('crsmeta')\""  # [win]

about:
  home: https://github.com/hypertidy/crsmeta
  license: GPL-3.0-only
  summary: Obtain coordinate system metadata from various data formats. There are functions to
    extract a 'CRS' (coordinate reference system, <https://en.wikipedia.org/wiki/Spatial_reference_system>)
    in 'EPSG' (European Petroleum Survey Group, <http://www.epsg.org/>), 'PROJ4' <https://proj.org/>,
    or 'WKT2' (Well-Known Text 2, <http://docs.opengeospatial.org/is/12-063r5/12-063r5.html>)
    forms. This is purely for getting simple metadata from in-memory formats, please
    use other tools for out of memory data sources.
  license_family: GPL3
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3

extra:
  recipe-maintainers:
    - conda-forge/r
