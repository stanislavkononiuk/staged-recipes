{% set version = "1.2.2" %}
{% set patch_version = "5" %}

package:
  name: cutensor
  version: {{ version }}.{{ patch_version }}

{% set cuda_compiler_version = cuda_compiler_version or 'undefined' %}
{% if cuda_compiler_version != "undefined" %}
  {% if cuda_compiler_version != "None" %}
    {% set ver_str = cuda_compiler_version.replace(".", "") %}
  {% else %}
    {% set ver_str = "" %}
  {% endif %}
{% endif %}

{% set platform = "linux-x86_64" %}     # [linux64]
{% set platform = "linux-ppc64le" %}    # [ppc64le]
# TODO(leofang): Add aarm64
# TODO(leofang): Add win64

source:
  url: https://developer.download.nvidia.com/compute/cutensor/{{ version }}/local_installers/libcutensor-{{ platform }}-{{ version }}.{{ patch_version }}.tar.gz  # [cuda_compiler_version in ("10.1", "10.2", "11.0")]

  sha256: 954ee22b80d6b82fd4decd42b7faead86af7c3817653b458620a66174e5b89b6  # [linux64]
  sha256: d914a721b8a6bbfbf4f2bdea3bb51775e5df39abc383d415b3b06bbde2a47e6e  # [ppc64le]

build:
  number: 0
  skip: True  # [win or cuda_compiler_version in ("None", "9.2", "10.0")]
  script:
    - mkdir -p $PREFIX/include                                            # [unix]
    - cp -r include/* $PREFIX/include/                                    # [unix]
    - mkdir -p $PREFIX/lib                                                # [unix]
    - mv lib/{{ cuda_compiler_version }}/libcutensor.so* $PREFIX/lib/     # [unix]

    # FIXME: cutensor.lib is missing in Julia's packaging
    #- mkdir %LIBRARY_INC%                                                 # [win64]
    #- copy %SRC_DIR%\\include\\cutensor.h %LIBRARY_INC%\\                 # [win64]
    #- mkdir %LIBRARY_INC\\cutensor%                                       # [win64]
    #- copy %SRC_DIR%\\include\\cutensor\\types.h %LIBRARY_INC%\\cutensor  # [win64]
    #- mkdir %LIBRARY_BIN%                                                 # [win64]
    #- copy %SRC_DIR%\\bin\\cutensor.dll %LIBRARY_BIN%\\                   # [win64]
  ignore_run_exports_from:
    - {{ compiler('c') }}    # [linux]
  run_exports:
    - {{ pin_subpackage('cutensor') }}
  missing_dso_whitelist:
    - '*/libgomp.*'  # [linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - sysroot_linux-64 2.17  # [linux64]
    - libgomp  # [linux]
  run:
    # Only GCC_3.0 or older symbols present
    - libgcc-ng >=3.0     # [linux]
    # Only GLIBCXX_3.4 or older symbols present
    - libstdcxx-ng >=3.4  # [linux]
  run_constrained:
    # Only GLIBC_2.17 or older symbols present
    - __glibc >=2.17      # [linux]

test:
  commands:
    - test -f $PREFIX/include/cutensor.h                    # [linux]
    - test -f $PREFIX/include/cutensor/types.h              # [linux]
    - test -f $PREFIX/lib/libcutensor.so                    # [linux]

    #- if not exist %LIBRARY_INC%\\cutensor.h exit 1         # [win]
    #- if not exist %LIBRARY_INC%\\cutensor\\types.h exit 1  # [win]
    #- if not exist %LIBRARY_BIN%\\cutensor.dll exit 1       # [win]

about:
  home: https://developer.nvidia.com/cutensor
  license: NVIDIA Software License Agreement for the HPC Software Development Kit
  license_url: https://docs.nvidia.com/hpc-sdk/eula/index.html
  license_file: license.pdf  # [cuda_compiler_version in ("10.1", "10.2", "11.0")]
  summary: "Tensor Linear Algebra on NVIDIA GPUs"
  description: |
    The cuTENSOR Library is a first-of-its-kind GPU-accelerated tensor linear
    algebra library providing tensor contraction, reduction and elementwise
    operations. cuTENSOR is used to accelerate applications in the areas of
    deep learning training and inference, computer vision, quantum chemistry
    and computational physics.

    License Agreements:- The packages are governed by the NVIDIA Software
    License Agreement for the HPC Software Development Kit. By downloading
    and using the packages, you accept the terms and conditions of the EULA -
    https://docs.nvidia.com/hpc-sdk/eula/index.html
  doc_url: https://docs.nvidia.com/cuda/cutensor/index.html
  dev_url: https://developer.nvidia.com/cutensor/downloads

extra:
  recipe-maintainers:
    - leofang
