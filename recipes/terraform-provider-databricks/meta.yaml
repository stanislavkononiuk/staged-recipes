{% set provider = "databricks" %}
{% set goname = "github.com/databricks/terraform-provider-"+provider.lower() %}
{% set version = "1.5.0" %}

{% set name = goname.split('/')[-1] %}

{% set plugin_dir = os.sep.join(["plugins", "registry.terraform.io", "hashicorp", provider.lower(), version]) %}
{% set x4_plugin = name + '_v' + version %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://{{ goname }}/archive/v{{ version }}.tar.gz
  sha256: 6a26d41521a0b3fcdf1b628e424dd441dd356167dd9d2a81c82993eeab5b4643

build:
  number: 0
  script:
    - go build -v -o {{ target_gobin }}..{{ os.sep }}{{ plugin_dir }}{{ os.sep }}{{ target_goos }}_{{ target_goarch }}{{ os.sep }}{{ x4_plugin }}{{ target_goexe }}

requirements:
  build:
    - {{ compiler('go') }} 1.18

test:
  requires:
    - terraform >=1

  commands:
    # Create a sample init.tf loading the provider
    - echo 'provider "{{ provider|lower }}" { version="{{ version }}" }' > init.tf  # [unix]
    - echo provider "{{ provider|lower }}" { version="{{ version }}" } > init.tf    # [win]

    # Initialize
    - terraform init --plugin-dir={{ target_gobin }}..{{ os.sep }}plugins

    # Tests that init was successful
    - test -f .terraform.lock.hcl              # [unix]
    - if not exist .terraform.lock.hcl exit 1  # [win]

    # Test that the provider was not downloaded
    - test ! -f .terraform/plugins/{{ plugin_dir }}/{{ target_goos }}_{{ target_goarch }}/README.md  # [unix]
    - if exist .terraform\plugins\{{ plugin_dir }}\{{ target_goos }}_{{ target_goarch }}/README.md exit 1  # [win]

about:
  home: https://github.com/databricks/terraform-provider-databricks
  license: Apache-2.0
  license_file: LICENSE
  license_family: APACHE
  summary: Terraform provider for Databricks.
  doc_url: https://registry.terraform.io/providers/databricks/databricks/latest/docs
  dev_url: https://github.com/databricks/terraform-provider-databricks

extra:
  recipe-maintainers:
    - conda-forge/terraform
