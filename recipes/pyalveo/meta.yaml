# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "pyalveo" %}
{% set version = "1.0.3" %}
{% set sha256 = "35cbdeb6423bfb6f9a2fb72d7707fdfe17a69fe0eda9a514c73b23604809c5fc" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  noarch: python
  number: 0
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    - setuptools
    - requests
    - oauthlib
    - requests-oauthlib
  run:
    - python

test:
  imports:
    - pyalveo
  requires:
    - requests
    - oauthlib
    - requests-oauthlib

about:
  home: http://github.com/Alveo/pyalveo
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: BSD-3-Clause
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: BSD
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  #license_file: LICENSE.txt
  summary: 'Python module to interface to the Alveo repository of speech and language data'

  # The remaining entries in this section are optional, but recommended
  description: |
    `Alveo <http://alveo.edu.au>`_ is a Virtual Laboratory platform to support
    research on Human Communication. It
    stores large collections of audio, video and textual data representing language use
    and provides an API to search and retrieve data and metadata.  This Python library
    is one way that Alveo integrates tools for processing data to support repeatable
    research.
  doc_url: http://pyalveo.readthedocs.io/
  dev_url: https://github.com/Alveo/pyalveo

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - stevecassidy
