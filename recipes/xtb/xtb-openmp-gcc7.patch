diff --git a/src/aespot.f90 b/src/aespot.f90
index d71fb40..91570b7 100644
--- a/src/aespot.f90
+++ b/src/aespot.f90
@@ -1045,7 +1045,7 @@ subroutine ovlp2(thr,nat,nao,nbf,at,xyz,caoshell,saoshell,nprim,primcount,cont,a
    mm=nbf*(nbf+1)/2
    step=1.0d-4
    step2=0.50_wp/step
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp&         private(iat,ra,iatyp,jat,rb,jatyp,dx,dy,dz,rab2,ish,ishtyp, &
 !$omp&                 icao,naoi,iptyp,jshmax,jsh,jshtyp,jcao,naoj,ss,ip,iprim, &
 !$omp&                 alpi,jp,jprim,ab,est,s00,li,ci,stmp,lj,cc,ii,iao,jj,jao) &
diff --git a/src/bfgs.f90 b/src/bfgs.f90
index 225614a..a95d71d 100644
--- a/src/bfgs.f90
+++ b/src/bfgs.f90
@@ -64,7 +64,7 @@ subroutine bfgs(nat3,gnorm,grad,grado,dx,hess)
    oodds  = 1.0_wp / dds
 
    if(dds > thrs .and. ddtd > thrs) then
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp shared(nat3,oodds,ooddtd,svec,tvec) &
    !$omp private(i,j,ii,ij,sdds,tddtd,temp) &
    !$omp shared(hess)
diff --git a/src/disp/dftd4.f90 b/src/disp/dftd4.f90
index 8eece58..fa6b4eb 100644
--- a/src/disp/dftd4.f90
+++ b/src/disp/dftd4.f90
@@ -1005,7 +1005,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
    enddo
 
 !  print'(" * Entering first OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ii,iii,ia,iz,k,norm,dnorm,twf,tgw,dexpw,expw,gwk,dgwk)  &
 !$omp shared (nat,at,dispm,itbl,wf,cn,g_a,g_c,q) &
 !$omp shared (gw,dgw,zvec,dzvec,dzdq)
@@ -1062,7 +1062,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
 !$omp end parallel
 
 !  print'(" * Entering second OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ij,dic6ij,djc6ij,disp,dizij,djzij,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10,door6,door8,door10)  &
 !$omp shared(nat,at,xyz,dispm,itbl,zvec,dzvec,c6abns,par,dzdq) &
@@ -1154,7 +1154,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
 !  end select
 
 !  print'(" * Entering third OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,rij,r2,r,drdx,den,rcovij,  &
 !$omp         expterm,dcndr,dtmp) reduction(+:g) &
 !$omp shared(nat,at,xyz,dc6dr,dc6dcn)
@@ -1507,7 +1507,7 @@ subroutine dabcappr(nat,ndim,at,xyz,par,  &
 
    eabc = 0.0_wp
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ia,j,ja,ij,r2ij,c6ij,dic6ij,djc6ij,k,l)  &
 !$omp shared (nat,at,r2ab,dispm,itbl,c6abns,zvec,dzvec) &
 !$omp shared (c6ab,dc6ab)
@@ -1546,7 +1546,7 @@ subroutine dabcappr(nat,ndim,at,xyz,par,  &
 !$omp enddo
 !$omp end parallel
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ij,ia,ja,k,ka,ik,jk,oorjk,oorik,atm,fdmp,  &
 !$omp         r2ij,cij,oorij,r2ik,r2jk,cik,cjk,r2ijk,rijk,cijk, &
 !$omp         dijatm,djkatm,dikatm,dtmp,dijfdmp,djkfdmp,dikfdmp,  &
@@ -2389,7 +2389,7 @@ subroutine edisp_3d(mol,ndim,q,rep,atm_rep,r_thr,atm_thr,par,g_a,g_c,gw,refc6,mb
    enddo
 
 !  print'(" * Entering first OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ii,iii,ia,iz,k)  &
 !$omp shared (mol,dispm,itbl,g_a,g_c,q) &
 !$omp shared (gw,zetavec,zerovec,r_thr)
@@ -2408,7 +2408,7 @@ subroutine edisp_3d(mol,ndim,q,rep,atm_rep,r_thr,atm_thr,par,g_a,g_c,gw,refc6,mb
 !$omp end do
 !$omp end parallel
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ii,c6ij,disp,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10, &
 !$omp         t,tx,ty,tz)  &
@@ -2521,7 +2521,7 @@ subroutine abcappr_3d(mol,ndim,par,zvec,refc6,itbl,rep,r_thr,eabc)
 
    eabc = 0.0_wp
 
-   !$OMP parallel default(none) &
+   !$OMP parallel default(shared) &
    !$omp private(i,ia,j,ja,ij,r2ij,c6ij,k,l,r)  &
    !$omp shared (mol,dispm,itbl,refc6,zvec) &
    !$omp shared (c6ab)
@@ -3005,7 +3005,7 @@ subroutine dispgrad_3d(mol,ndim,q,cn,dcndr,dcndL,rep,atm_rep,r_thr,atm_thr,par,
    call weight_references(mol%n, mol%at, g_a, g_c, wf, q, cn, &
       &                   zvec, gw, dzvec, dgw, dzdq)
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ii,c6ij,dic6ii,dic6ij,djc6ij,disp,ddisp,dizii,dizij,djzij,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10,door6,door8,door10, &
 !$omp         t,tx,ty,tz,dtmp,drdx)  &
@@ -3201,7 +3201,7 @@ subroutine dabcappr_3d(mol,ndim,par,zvec,dzvec,refc6,itbl,rep,r_thr, &
 
    eabc = 0.0_wp
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ia,j,ja,ij,r2ij,c6ij,dic6ij,djc6ij,k,l,r)  &
 !$omp shared (mol,dispm,itbl,refc6,zvec,dzvec) &
 !$omp shared (c6ab,dc6ab)
@@ -3313,7 +3313,7 @@ subroutine dabcappr_3d_dftd3_like_style(nat,at,xyz,par,thr,rep,dlat,c6ab,dc6ab,
    eabc=0.0_wp
    !        write(*,*)'thr:',sqrt(thr)
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(nat,xyz,c6ab,rep,par,at,dlat,dc6ab,thr) &
 !$omp private(iat,jat,ij,ijvec,c6ij,kat,ik,jk,ikvec,jkvec,c6ik,c6jk,c9, &
 !$omp&        cij,cik,cjk,cijk,tx,ty,tz,repmin,repmax,t,rij2,sx,sy,sz, &
diff --git a/src/eeq_model.f90 b/src/eeq_model.f90
index b83ce28..d17531e 100644
--- a/src/eeq_model.f90
+++ b/src/eeq_model.f90
@@ -57,7 +57,7 @@ subroutine get_coulomb_matrix_0d(mol, chrgeq, amat)
    integer :: iat, jat
    real(wp) :: r1, gamij
    Amat = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) shared(mol,chrgeq, amat) &
+   !$omp parallel do default(shared) schedule(runtime) shared(mol,chrgeq, amat) &
    !$omp private(jat, r1, gamij)
    do iat = 1, len(mol)
       ! EN of atom i
@@ -85,7 +85,7 @@ subroutine get_coulomb_matrix_3d(mol, chrgeq, cf, amat)
    integer :: iat, jat, wscAt
    real(wp) :: gamii, gamij, riw(3)
    amat = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) reduction(+:amat) &
+   !$omp parallel do default(shared) schedule(runtime) reduction(+:amat) &
    !$omp shared(mol, chrgeq, cf) private(jat, wscAt, gamii, gamij, riw)
    do iat = 1, len(mol)
       gamii = 1.0_wp/(sqrt(2.0_wp)*chrgeq%alpha(iat))
@@ -124,7 +124,7 @@ subroutine get_coulomb_derivs_0d(mol, chrgeq, qvec, amatdr, atrace)
    real(wp) :: dE, dG(3)
    amatdr = 0.0_wp
    atrace = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) reduction(+:atrace, amatdr) &
+   !$omp parallel do default(shared) schedule(runtime) reduction(+:atrace, amatdr) &
    !$omp shared(mol,chrgeq, qvec) private(jat, rij, r2, gamij2, arg2, dE, dG)
    do iat = 1, len(mol)
       ! EN of atom i
@@ -162,7 +162,7 @@ subroutine get_coulomb_derivs_3d(mol, chrgeq, qvec, cf, amatdr, amatdL, atrace)
    amatdr = 0.0_wp
    amatdL = 0.0_wp
    atrace = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp reduction(+:atrace,amatdr,amatdL) shared(mol, chrgeq, qvec, cf) &
    !$omp private(iat, jat, ii, wscAt, riw, gamij, dG, dS)
    do iat = 1, len(mol)
@@ -340,7 +340,7 @@ subroutine goedecker_chrgeq(n,at,xyz,chrg,cn,dcndr,q,dqdr,energy,gradient,&
    if (lverbose) write(istdout,'(72("="),/,1x,a)') &
       "Setup of the A matrix and the RHS X vector"
 !  prepare some arrays
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,cn,xi,cnfak,alp,gamm) &
 !$omp private(i,tmp) &
 !$omp shared(Xvec,Xfac,alpha)
@@ -354,7 +354,7 @@ subroutine goedecker_chrgeq(n,at,xyz,chrg,cn,dcndr,q,dqdr,energy,gradient,&
 !$omp enddo
 !$omp endparallel
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,xyz,gamm,alpha) &
 !$omp private(i,j,r,gamij) &
 !$omp shared(Xvec,Xfac,Amat)
@@ -438,7 +438,7 @@ do_molecular_gradient: if (lgrad .or. lcpq) then
       "molecular gradient calculation"
    allocate( dAmat(3,n,m), dXvec(3,n,m), Afac(3,n), source = 0.0_wp )
    !allocate( dAmat(3,n,m), Afac(3,n), source = 0.0_wp )
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,dcndr,xyz,alpha,Amat,Xfac,Xtmp) &
 !$omp private(i,j,rij,r2,gamij,arg,dtmp) &
 !$omp shared(dXvec,dAmat) &
@@ -691,7 +691,7 @@ subroutine eeq_chrgeq_core(mol,env,chrgeq,cn,dcndr,dcndL,q,dqdr,dqdL, &
       "Setup of the A matrix and the RHS X vector"
 
    ! prepare some arrays
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp shared(mol,cn,chrgeq) private(i,tmp) shared(Xvec,Xfac)
    do i = 1, mol%n
       tmp = chrgeq%kappa(i)/(sqrt(cn(i))+1e-14_wp)
@@ -1145,7 +1145,7 @@ subroutine eeq_chrgeq_gbsa(mol,env,chrgeq,gbsa,cn,dcndr,q,dqdr, &
       "Setup of the A matrix and the RHS X vector"
 
    ! prepare some arrays
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp shared(mol,cn,chrgeq) private(i,tmp) shared(Xvec,Xfac)
    do i = 1, mol%n
       tmp = chrgeq%kappa(i)/(sqrt(cn(i))+1e-14_wp)
diff --git a/src/generate_wsc.f90 b/src/generate_wsc.f90
index 2e1ca37..c40a408 100644
--- a/src/generate_wsc.f90
+++ b/src/generate_wsc.f90
@@ -64,7 +64,7 @@ subroutine generate_wsc(mol,wsc)
 ! ------------------------------------------------------------------------
    wsc%at  = 0
    wsc%itbl= 0
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp private(ii,jj,wc,c,dist,trans,t,lattr,rw) &
 !$omp shared(mol,wsc,rep) &
 !$omp shared(mindist,minpos,nmindist,nminpos)
diff --git a/src/grad_core.f90 b/src/grad_core.f90
index a342310..1732706 100644
--- a/src/grad_core.f90
+++ b/src/grad_core.f90
@@ -158,7 +158,7 @@ subroutine hcn_grad_gfn1(g,n,at,ndim,nmat2,matlist2,xyz, &
 
 !  CN dependent part of H0
    hcn=0.0_wp
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(nmat2,matlist2,aoat2,lao2,valao2,P,S,n,at,xyz,hdiag2) &
 !$omp shared(kspd,kmagic,kenscal,kcnao) &
 !$omp private(i,m,j,atj,ati,dum1,dum2,km,dum,ishell,jshell,hji) &
@@ -184,7 +184,7 @@ subroutine hcn_grad_gfn1(g,n,at,ndim,nmat2,matlist2,xyz, &
    enddo
 !$omp end do
 !$omp end parallel
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(ndim,aoat2,P,hdiag2,kcnao) &
 !$omp private(i,ati,dum1) &
 !$omp reduction (+:hcn)
@@ -198,7 +198,7 @@ subroutine hcn_grad_gfn1(g,n,at,ndim,nmat2,matlist2,xyz, &
 !$omp end parallel
 
 !  CN-level shift gradient
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,dcn,hcn) &
 !$omp private(i,gtmp) shared ( g )
 !$omp do
@@ -255,7 +255,7 @@ subroutine hcn_grad_gfn2(g,n,at,ndim,nmat2,matlist2,xyz, &
 
 !  CN dependent part of H0
    hcn=0.0_wp
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(nmat2,matlist2,aoat2,lao2,valao2,P,S,n,at,xyz) &
 !$omp shared(kspd,kmagic,kenscal,aoexp,kcnao) &
 !$omp private(i,m,j,atj,ati,dum1,dum2,km,dum,ishell,jshell,hji,fact) &
@@ -282,7 +282,7 @@ subroutine hcn_grad_gfn2(g,n,at,ndim,nmat2,matlist2,xyz, &
    enddo
 !$omp end do
 !$omp end parallel
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(ndim,aoat2,P,kcnao) &
 !$omp private(i,ati,dum1) &
 !$omp reduction (+:hcn)
@@ -297,7 +297,7 @@ subroutine hcn_grad_gfn2(g,n,at,ndim,nmat2,matlist2,xyz, &
 
 
 !  CN-level shift gradient
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,dcn,hcn) &
 !$omp private(i,gtmp) shared ( g )
 !$omp do
diff --git a/src/metadynamic.f90 b/src/metadynamic.f90
index 63cdd0a..5aebab6 100644
--- a/src/metadynamic.f90
+++ b/src/metadynamic.f90
@@ -34,7 +34,7 @@ subroutine metadynamic(metavar,nat,at,xyz,ebias,g)
 
    if (metavar%nat == 0) then
       allocate( xyzref(3,nat), grad(3,nat),source = 0.0_wp )
-      !$omp parallel default(none) &
+      !$omp parallel default(shared) &
       !$omp shared(metavar,nat,xyz) &
       !$omp private(grad,xyzref,U,x_center,y_center,rmsdval,e,etmp) &
       !$omp reduction(+:ebias,g)
@@ -53,7 +53,7 @@ subroutine metadynamic(metavar,nat,at,xyz,ebias,g)
       !$omp end parallel
    else
       allocate( xyzref(3,metavar%nat), xyzdup(3,metavar%nat), grad(3,metavar%nat) )
-      !$omp parallel default(none) &
+      !$omp parallel default(shared) &
       !$omp shared(metavar,nat,xyz) &
       !$omp private(grad,xyzref,xyzdup,U,x_center,y_center,rmsdval,e,etmp,i,iat) &
       !$omp reduction(+:ebias,g)
diff --git a/src/model_hessian.f90 b/src/model_hessian.f90
index 5c01977..37962ad 100644
--- a/src/model_hessian.f90
+++ b/src/model_hessian.f90
@@ -1853,7 +1853,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !  Aij = erf(γij·Rij)/Rij = 2/√π·F0(γ²ij·R²ij)
 !! ------------------------------------------------------------------------
 !  prepare some arrays
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,chrgeq) &
 !$omp private(i) &
 !$omp shared(Xvec,alpha)
@@ -1865,7 +1865,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !$omp enddo
 !$omp endparallel
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,xyz,chrgeq,alpha) &
 !$omp private(i,j,r,gamij) &
 !$omp shared(Amat)
@@ -1927,7 +1927,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !  ∂Aij/∂Rj = ∂Aij/∂Ri
 !! ------------------------------------------------------------------------
    allocate( dAmat(3,n,m), source = 0.0_wp )
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,xyz,alpha,Amat,Xtmp) &
 !$omp private(i,j,rij,r2,gamij,arg,dtmp) &
 !$omp reduction(+:dAmat)
diff --git a/src/peeq_module.f90 b/src/peeq_module.f90
index e02678f..8e60491 100644
--- a/src/peeq_module.f90
+++ b/src/peeq_module.f90
@@ -1134,7 +1134,7 @@ subroutine mol_build_SH0(nat,at,basis,nbf,nao,xyz,q,cn,intcut, &
    sint = 0.0_wp
    h0   = 0.0_wp
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ij,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp, &
    !$omp&        ss,saw,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly, &
@@ -1330,7 +1330,7 @@ subroutine ccm_build_SH0(nat,at,basis,nbf,nao,xyz,lattice,q,cn,intcut, &
    sint = 0.0_wp
    h0   = 0.0_wp
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ij,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp, &
    !$omp&        ss,saw,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly, &
@@ -1532,7 +1532,7 @@ subroutine pbc_build_SH0(nat,at,basis,nbf,nao,xyz,lat,latrep,q,cn,intcut, &
    sint = 0.0_wp
    h0   = 0.0_wp
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ij,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp, &
    !$omp&        ss,saw,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly, &
@@ -1863,7 +1863,7 @@ subroutine mol_build_dSH0(nat,basis,thr,nao,nbf,at,xyz,q,cn,P,Pew,g,sigma, &
    logical  :: valaoi,valaoj
    real(wp) :: g_xyz(3)
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ixyz,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj,g_xyz, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp,rij2, &
    !$omp&        sdq,sdqg,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly,dshpoly, &
@@ -2099,7 +2099,7 @@ subroutine ccm_build_dSH0(nat,basis,thr,nao,nbf,at,xyz,lattice,q,cn,P,Pew,g,sigm
    logical  :: valaoi,valaoj
    real(wp) :: g_xyz(3)
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ixyz,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj,g_xyz, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp,rij2, &
    !$omp&        sdq,sdqg,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly,dshpoly, &
@@ -2343,7 +2343,7 @@ subroutine pbc_build_dSH0(nat,basis,thr,nao,nbf,at,xyz,lat,latrep,q,cn,P,Pew,g,s
 
    w = 1.0_wp !/ real(product(2*latrep+1),wp)
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ixyz,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj,g_xyz, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp,rij2, &
    !$omp&        sdq,sdqg,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly,dshpoly, &
diff --git a/src/solv/gbobc.f90 b/src/solv/gbobc.f90
index 682fbd5..a9e41a2 100644
--- a/src/solv/gbobc.f90
+++ b/src/solv/gbobc.f90
@@ -1618,7 +1618,7 @@ subroutine update_nnlist_gbsa_parallel(this,xyz)
 
    this%nnsas=0
    this%nnlists=0
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp&         shared ( this,xyz,lrcut2,srcut2 ) &
 !$omp&         private( i1,i2,x,y,z,dr2,ip,ip2,thrid,nntmp,nnls ) &
 !$omp&         shared ( plisttr, npid )
