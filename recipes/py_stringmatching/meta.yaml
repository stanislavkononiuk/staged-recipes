package:
  name: py_stringmatching
  version: "0.2.1"

source:
    git_url: ../

#source:
#  fn: py_stringmatching-0.2.1.tar.gz
#  url: https://files.pythonhosted.org/packages/3b/ba/748319a25b3f059edbc8aefbabfac5c38c5c3db0032c49e5bb0bcb89f7ac/py_stringmatching-0.2.1.tar.gz
#  md5: 0280b67d294459ca4a218af6bd170de3
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - py_stringmatching = py_stringmatching:main
    #
    # Would create an entry point called py_stringmatching that calls py_stringmatching.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - cython
    - setuptools
    - numpy >=1.7.0
    - six

  run:
    - python
    - numpy >=1.7.0
    - six

test:
  # Python imports
  imports:
    - py_stringmatching
    - py_stringmatching.similarity_measure
    - py_stringmatching.tests
    - py_stringmatching.tokenizer

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://sites.google.com/site/anhaidgroup/projects/py_stringmatching
  license: BSD License
  summary: 'Python library for string matching.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
