{% set version = '0.12.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-r.cache
  version: {{ version|replace("-", "_") }}

source:
  fn: R.cache_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/R.cache_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/R.cache/R.cache_{{ version }}.tar.gz
  sha256: dd47c4690fcae910bf5d71455f2eb25b908ffe02d757fc60e1f0a29cb828dd00

build:
  number: 0
  skip: true  # [win32]

  rpaths:
    - lib/R/lib/
    - lib/
requirements:
  build:
    - r-base
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.19.0
    - r-r.utils >=2.1.0
    - r-digest >=0.6.8

  run:
    - r-base
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.19.0
    - r-r.utils >=2.1.0
    - r-digest >=0.6.8

test:
  commands:
    - $R -e "library('R.cache')"  # [not win]
    - "\"%R%\" -e \"library('R.cache')\""  # [win]

about:
  home: https://github.com/HenrikBengtsson/R.cache
  license: LGPL (>= 2.1)
  summary: Memoization can be used to speed up repetitive and computational expensive function
    calls.  The first time a function that implements memoization is called the results
    are stored in a cache memory.  The next time the function is called with the same
    set of parameters, the results are momentarily retrieved from the cache avoiding
    repeating the calculations.  With this package, any R object can be cached in a
    key-value storage where the key can be an arbitrary set of R objects.  The cache
    memory is persistent (on the file system).
  license_family: LGPL

extra:
  recipe-maintainers:
    - johanneskoester
    - bgruening
    - daler
