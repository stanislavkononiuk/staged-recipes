{% set version = '0.2.3' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-srs
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/SRS_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/SRS/SRS_{{ version }}.tar.gz
  sha256: 142382c101f390b40dea0ac75483a844a9667f102c61ea2aa397cf1e92d4a15b

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-dt >=0.16
    - r-shiny >=1.5.0
    - r-shinybusy >=0.2.2
    - r-shinycssloaders >=1.0.0
    - r-vegan >=2.5_6
  run:
    - r-base
    - r-dt >=0.16
    - r-shiny >=1.5.0
    - r-shinybusy >=0.2.2
    - r-shinycssloaders >=1.0.0
    - r-vegan >=2.5_6

test:
  commands:
    - $R -e "library('SRS')"           # [not win]
    - "\"%R%\" -e \"library('SRS')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=SRS
  license: CC-BY-SA-4.0
  summary: Analysis of species count data in ecology often requires normalization to an identical
    sample size. Rarefying (random subsampling without replacement), which is a popular
    method for normalization, has been widely criticized for its poor reproducibility
    and potential distortion of the community structure. In the context of microbiome
    count data, researchers explicitly advised against the use of rarefying. An alternative
    to rarefying is scaling with ranked subsampling (SRS). SRS consists of two steps.
    In the first step, the total counts for all OTUs (operational taxonomic units) or
    species in each sample are divided by a scaling factor chosen in such a way that
    the sum of the scaled counts Cscaled equals Cmin. In the second step, the non-integer
    Cscaled values are converted into integers by an algorithm that we dub ranked subsampling.
    The Cscaled value for each OTU or species is split into the integer part Cint  (Cint
    = floor(Cscaled)) and the fractional part Cfrac (Cfrac = Cscaled - Cints). Since
    the sum of Cint is smaller or equal to Cmin, additional  delta C = Cmin - the sum
    of Cint counts have to be added to the library to reach the total count of Cmin.
    This is achieved as follows. OTUs are ranked in the descending order of their Cfrac
    values. Beginning with the OTU of the highest rank, single count per OTU is added
    to the normalized library until the total number of added counts reaches delta C
    and the sum of all counts in the normalized library equals Cmin. When the lowest
    Cfrag involved in picking delta C counts is shared by several OTUs, the OTUs used
    for adding a single count to the library are selected in the order of their Cint
    values. This selection minimizes the effect of normalization on the relative frequencies
    of OTUs. OTUs with identical Cfrag as well as Cint are sampled randomly without
    replacement. See Beule & Karlovsky (2020) <doi:10.7717/peerj.9593> for details.
  license_family: CC

extra:
  recipe-maintainers:
    - conda-forge/r
    - pschloss

# Package: SRS
# Type: Package
# Title: Scaling with Ranked Subsampling
# Version: 0.2.3
# Authors@R: c(person("Lukas", "Beule", role = c("aut", "cre"), email = "lukas.beule@julius-kuehn.de"), person("Vitor", "Heidrich", role = "aut"), person("Petr", "Karlovsky", role = "aut") )
# Description: Analysis of species count data in ecology often requires normalization to an identical sample size. Rarefying (random subsampling without replacement), which is a popular method for normalization, has been widely criticized for its poor reproducibility and potential distortion of the community structure. In the context of microbiome count data, researchers explicitly advised against the use of rarefying. An alternative to rarefying is scaling with ranked subsampling (SRS). SRS consists of two steps. In the first step, the total counts for all OTUs (operational taxonomic units) or species in each sample are divided by a scaling factor chosen in such a way that the sum of the scaled counts Cscaled equals Cmin. In the second step, the non-integer Cscaled values are converted into integers by an algorithm that we dub ranked subsampling. The Cscaled value for each OTU or species is split into the integer part Cint  (Cint = floor(Cscaled)) and the fractional part Cfrac (Cfrac = Cscaled - Cints). Since the sum of Cint is smaller or equal to Cmin, additional  delta C = Cmin - the sum of Cint counts have to be added to the library to reach the total count of Cmin. This is achieved as follows. OTUs are ranked in the descending order of their Cfrac values. Beginning with the OTU of the highest rank, single count per OTU is added to the normalized library until the total number of added counts reaches delta C and the sum of all counts in the normalized library equals Cmin. When the lowest Cfrag involved in picking delta C counts is shared by several OTUs, the OTUs used for adding a single count to the library are selected in the order of their Cint values. This selection minimizes the effect of normalization on the relative frequencies of OTUs. OTUs with identical Cfrag as well as Cint are sampled randomly without replacement. See Beule & Karlovsky (2020) <doi:10.7717/peerj.9593> for details.
# Depends: R (>= 3.4.0), vegan (>= 2.5-6), shiny (>= 1.5.0), DT (>= 0.16), shinycssloaders (>= 1.0.0), shinybusy (>= 0.2.2)
# License: CC BY-SA-4.0
# Encoding: UTF-8
# Author: Lukas Beule [aut, cre], Vitor Heidrich [aut], Petr Karlovsky [aut]
# Maintainer: Lukas Beule <lukas.beule@julius-kuehn.de>
# Repository: CRAN
# NeedsCompilation: no
# Packaged: 2022-03-20 07:30:36 UTC; lukasbeule
# Date/Publication: 2022-03-27 14:30:09 UTC
