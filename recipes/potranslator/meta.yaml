{% set name = "potranslator" %}
{% set version = "1.1.2" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "7e678222d7f1e22dd6c5c9a0acfa55fdaa8f8abf2f993dc10ef0953a65f33789" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  noarch_python: True
  number: 0
  entry_points:
    - potranslator=potranslator.commands:main
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  host:
    - python
    - pip
    - setuptools
    - cython
    - click >=6.0
    - docutils
    - lxml
    - mypy
    - pytest
    - pytest-runner
    - pytest-cov
    - sphinx
    - bumpversion
    - watchdog
    - flake8
    - tox
    - coverage
    - cryptography
    - pytest
    - pytest-runner
    - mypy
    - Sphinx
    - PyYAML

  run:
    - python
    - cython
    - click >=6.0
    - polib
    - path.py
    - importlib_resources

test:
  imports:
    - potranslator
  commands:
    - potranslator --help
  requires:
    - click >=6.0


about:
  home: https://github.com/SekouD/mlconjug
  license: MIT
  license_family: MIT
  license_file: https://github.com/SekouD/mlconjug/blob/master/LICENSE
  summary: "A Python library to conjugate French, English, Spanish, Italian, Portuguese and Romanian verbs using Machine Learning techniques."
  description: ".. image:: https://raw.githubusercontent.com/SekouD/mlconjug/master/logo/logotype2%20mlconjug.png\n        :target: https://pypi.python.org/pypi/mlconjug\n        :alt: mlconjug PyPi Home\
    \ Page\n\n========\nmlconjug\n========\n\n\n.. image:: https://img.shields.io/pypi/v/mlconjug.svg\n        :target: https://pypi.python.org/pypi/mlconjug\n        :alt: Pypi Python Package Index Status\n\
    \n.. image:: https://img.shields.io/travis/SekouD/mlconjug.svg\n        :target: https://travis-ci.org/SekouD/mlconjug\n        :alt: Linux Continuous Integration Status\n\n.. image:: https://ci.appveyor.com/api/projects/status/6iatj101xxfehbo8/branch/master?svg=true\n\
    \        :target: https://ci.appveyor.com/project/SekouD/mlconjug\n        :alt: Windows Continuous Integration Status\n\n.. image:: https://readthedocs.org/projects/mlconjug/badge/?version=latest\n\
    \        :target: https://mlconjug.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/SekouD/mlconjug/shield.svg\n        :target:\
    \ https://pyup.io/repos/github/SekouD/mlconjug/\n        :alt: Depedencies Update Status\n\n.. image:: https://codecov.io/gh/SekouD/mlconjug/branch/master/graph/badge.svg\n        :target: https://codecov.io/gh/SekouD/mlconjug\n\
    \        :alt: Code Coverage Status\n\n.. image:: https://snyk.io/test/github/SekouD/mlconjug/badge.svg?targetFile=requirements.txt\n        :target: https://snyk.io/test/github/SekouD/mlconjug?targetFile=requirements.txt\n\
    \        :alt: Code Vulnerability Status\n\n\n| A Python library to conjugate verbs in French, English, Spanish, Italian, Portuguese and Romanian (more soon)\n    using Machine Learning techniques.\n\
    | Any verb in one of the supported language can be conjugated, as the module contains a Machine Learning model of how the verbs behave.\n| Even completely new or made-up verbs can be successfully conjugated\
    \ in this manner.\n| The supplied pre-trained models are composed of:\n\n- a binary feature extractor,\n- a feature selector using Linear Support Vector Classification,\n- a classifier using Stochastic\
    \ Gradient Descent.\n\n| MLConjug uses scikit-learn to implement the Machine Learning algorithms.\n| Users of the library can use any compatible classifiers from scikit-learn to modify and retrain the\
    \ models.\n\n| The training data for the french model is based on Verbiste https://perso.b2b2c.ca/~sarrazip/dev/verbiste.html .\n| The training data for English, Spanish, Italian, Portuguese and Romanian\
    \ was generated using unsupervised learning techniques\n  using the French model as a model to query during the training.\n\n\n* Free software: MIT license\n* Documentation: https://mlconjug.readthedocs.io.\n\
    \nSupported Languages\n-------------------\n\n- French\n- English\n- Spanish\n- Italian\n- Portuguese\n- Romanian\n\n\nFeatures\n--------\n\n- Easy to use API.\n- Includes pre-trained models with 99%\
    \ + accuracy in predicting conjugation class of unknown verbs.\n- Easily train new models or add new languages.\n- Easily integrate MLConjug in your own projects.\n- Can be used as a command line tool.\n\
    \nCredits\n---------\n\nThis package was created with the help of Verbiste_ and scikit-learn_.\n\nThe logo was designed by Zuur_.\n\n.. _Verbiste: https://perso.b2b2c.ca/~sarrazip/dev/verbiste.html\n\
    .. _scikit-learn: http://scikit-learn.org/stable/index.html\n.. _Zuur: https://github.com/zuuritaly\n\n\n\n============\nInstallation\n============\n\n\nStable release\n--------------\n\nTo install\
    \ MLConjug, run this command in your terminal:\n\n.. code-block:: console\n\n    $ pip install mlconjug\n\nThis is the preferred method to install MLConjug, as it will always install the most recent\
    \ stable release.\n\nIf you don't have `pip`_ installed, this `Python installation guide`_ can guide\nyou through the process.\n\n.. _pip: https://pip.pypa.io\n.. _Python installation guide: http://docs.python-guide.org/en/latest/starting/installation/\n\
    \n\nFrom sources\n------------\n\nThe sources for MLConjug can be downloaded from the `Github repo`_.\n\nYou can either clone the public repository:\n\n.. code-block:: console\n\n    $ git clone git://github.com/SekouD/mlconjug\n\
    \nOr download the `tarball`_:\n\n.. code-block:: console\n\n    $ curl  -OL https://github.com/SekouD/mlconjug/tarball/master\n\nOnce you have a copy of the source, you can install it with:\n\n.. code-block::\
    \ console\n\n    $ python setup.py install\n\n\n.. _Github repo: https://github.com/SekouD/mlconjug\n.. _tarball: https://github.com/SekouD/mlconjug/tarball/master\n\n\n=======\nHistory\n=======\n\n\n3.1.1 (2018-06-26)\n------------------\n\
    \n* Minor Api enhancement (see `API documentation`_)\n\n\n3.1.0 (2018-06-24)\n------------------\n\n* Updated the conjugation models for Spanish and Portuguese.\n* Internal changes to the format of\
    \ the verbiste data from xml to json for better handling of unicode characters.\n* New class ConjugManager to more easily add new languages to mlconjug.\n* Minor Api enhancement (see `API documentation`_)\n\
    \n\n3.0.1 (2018-06-22)\n------------------\n\n* Updated all provided pre-trained prediction models:\n    - Implemented a new vectrorizer extracting more meaningful features.\n    - As a result the performance\
    \ of the models has gone through the roof in all languages.\n    - Recall and Precision are intesimally close to 100 %. English being the anly to achieve a perfect score at both Recall and Precision.\n\
    \n* Major API changes:\n    - I removed the class EndingCustomVectorizer and refactored it's functionnality in a top level function called extract_verb_features()\n    - The provided new improved model\
    \ are now being zip compressed before release because the feature space has so much grown that their size made them impractical to distribute with the package.\n    - Renamed \"Model.model\" to \"Model.pipeline\"\
    \n    - Renamed \"DataSet.liste_verbes\" and \"DataSet.liste_templates\" to \"DataSet.verbs_list\" and \"DataSet.templates_list\" respectively. (Pardon my french ;-) )\n    - Added the attributes \"\
    predicted\" and \"confidence_score\" to the class Verb.\n    - The whole package have been typed check. I will soon add mlconjug's type stubs to typeshed.\n\n\n2.1.11 (2018-06-21)\n-------------------\n\
    \n* Updated all provided pre-trained prediction models\n    - The French Conjugator has accuracy of about 99.94% in predicting the correct conjugation class of a French verb. This is the baseline as\
    \ i have been working on it for some time now.\n    - The English Conjugator has accuracy of about 99.78% in predicting the correct conjugation class of an English verb. This is one of the biggest improvement\
    \ since version 2.0.0\n    - The Spanish Conjugator has accuracy of about 99.65% in predicting the correct conjugation class of a Spanish verb. It has also seen a sizable improvement since version 2.0.0\n\
    \    - The Romanian Conjugator has accuracy of about 99.06% in predicting the correct conjugation class of a Romanian verb.This is by far the bigger gain. I modified the vectorizer to better take into\
    \ account the morphological features or romanian verbs. (the previous score was about 86%, so it wil be nice for our romanian friends to have a trusted conjugator)\n    - The Portuguese Conjugator has\
    \ accuracy of about 96.73% in predicting the correct conjugation class of a Portuguese verb.\n    - The Italian Conjugator has accuracy of about 94.05% in predicting the correct conjugation class of\
    \ a Italian verb.\n\n\n2.1.9 (2018-06-21)\n------------------\n\n* Now the Conjugator adds additional information to the Verb object returned.\n    - If the verb under consideration is already in Verbiste,\
    \ the conjugation for the verb is retrieved directly from memory.\n    - If the verb under consideration is unknown in Verbiste, the Conjugator class now sets the boolean attribute 'predicted' and the\
    \ float attribute confidence score to the instance of the Verb object the Conjugator.conjugate(verb) returns.\n* Added `Type annotations`_ to the whole library for robustness and ease of scaling-out\n\
    * The performance of the Engish and Romanian Models have improved significantly lately. I guess in a few more iteration they will be on par with the French Model which is the best performing at the\
    \ moment as i have been tuning its parameters for a caouple of year now. Not so much with the other languages, but if you update regularly you will see nice improvents in the 2.2 release.\n* Enhanced\
    \ the localization of the program.\n* Now the user interface of mlconjug is avalaible in French, Spanish, Italian, Portuguese and Romanian, in addition to English.\n* `All the documentation of the project`_\
    \ have been translated in the supported languages.\n\n\n.. _Type annotations: https://github.com/python/typeshed\n.. _All the documentation of the project: https://mlconjug.readthedocs.io/en/latest/\n\
    .. _API documentation: https://mlconjug.readthedocs.io/en/latest/modules.html\n\n\n2.1.5 (2018-06-15)\n------------------\n\n* Added localization.\n* Now the user interface of mlconjug is avalaible\
    \ in French, Spanish, Italian, Portuguese and Romanian, in addition to English.\n\n\n2.1.2 (2018-06-15)\n------------------\n\n* Added invalid verb detection.\n\n\n2.1.0 (2018-06-15)\n------------------\n\
    \n* Updated all language models for compatibility with scikit-learn 0.19.1.\n\n\n2.0.0 (2018-06-14)\n------------------\n\n* Includes English conjugation model.\n* Includes Spanish conjugation model.\n\
    * Includes Italian conjugation model.\n* Includes Portuguese conjugation model.\n* Includes Romanian conjugation model.\n\n\n1.2.0 (2018-06-12)\n------------------\n\n* Refactored the API. Now a Single\
    \ class Conjugator is needed to interface with the module.\n* Includes improved french conjugation model.\n* Added support for multiple languages.\n\n\n1.1.0 (2018-06-11)\n------------------\n\n* Refactored\
    \ the API. Now a Single class Conjugator is needed to interface with the module.\n* Includes improved french conjugation model.\n\n\n1.0.0 (2018-06-10)\n------------------\n\n* First release on PyPI.\n\
    \n\n\n\n\n\n"
  doc_url: https://mlconjug.readthedocs.io/en/latest/
  dev_url: https://github.com/SekouD/mlconjug

extra:
  recipe-maintainers:
    - SekouD
