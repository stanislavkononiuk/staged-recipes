From 99d6999545c6407ef2abc00a2553be73b2636c98 Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio.traversaro@iit.it>
Date: Wed, 14 Sep 2022 16:14:49 +0200
Subject: [PATCH] Support standalone compilation of Python bindings

---
 bindings/CMakeLists.txt | 59 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/bindings/CMakeLists.txt b/bindings/CMakeLists.txt
index 63e3642b4..c72be536f 100644
--- a/bindings/CMakeLists.txt
+++ b/bindings/CMakeLists.txt
@@ -2,6 +2,65 @@
 # This software may be modified and distributed under the terms of the
 # BSD-3-Clause license.
 
+# Detect if we are doing a standalone build of the bindings, using an external iDynTree
+if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
+  set(FRAMEWORK_PYTHON_BINDINGS_BUILD_STANDALONE ON)
+  set(FRAMEWORK_COMPILE_PYTHON_BINDINGS ON)
+else()
+  set(FRAMEWORK_PYTHON_BINDINGS_BUILD_STANDALONE FALSE)
+endif()
+
+if(FRAMEWORK_PYTHON_BINDINGS_BUILD_STANDALONE)
+    cmake_minimum_required(VERSION 3.16)
+    project(BipedalLocomotionFrameworkBindings)
+    find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
+    find_package(pybind11 REQUIRED)
+    find_package(BipedalLocomotionFramework REQUIRED)
+    get_filename_component(CMAKE_CURRENT_PARENT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)
+    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_PARENT_SOURCE_DIR}/cmake)
+    include(AddBipedalLocomotionPythonModule)
+    if(TARGET BipedalLocomotionFramework::SystemYarpImplementation AND TARGET BipedalLocomotionFramework::ParametersHandlerYarpImplementation)
+        set(FRAMEWORK_COMPILE_YarpImplementation ON)
+    endif()
+    if(TARGET BipedalLocomotionFramework::ParametersHandlerTomlImplementation)
+        set(FRAMEWORK_COMPILE_TomlImplementation ON)
+    endif()
+    if(TARGET BipedalLocomotion::System)
+        set(FRAMEWORK_COMPILE_System ON)
+    endif()
+    if(TARGET BipedalLocomotion::Contacts)
+        set(FRAMEWORK_COMPILE_Contact ON)
+    endif()
+    if(TARGET BipedalLocomotion::Planners)
+        set(FRAMEWORK_COMPILE_Planners ON)
+    endif()
+    if(TARGET BipedalLocomotion::Unicycle)
+        set(FRAMEWORK_COMPILE_Unicycle ON)
+    endif()
+    if(TARGET BipedalLocomotion::FloatingBaseEstimators)
+        set(FRAMEWORK_COMPILE_FloatingBaseEstimators ON)
+    endif()
+    if(TARGET BipedalLocomotion::IK)
+        set(FRAMEWORK_COMPILE_IK ON)
+    endif()
+    if(TARGET BipedalLocomotion::TSID)
+        set(FRAMEWORK_COMPILE_TSID ON)
+    endif()
+    if(TARGET BipedalLocomotion::ManifConversions)
+        set(FRAMEWORK_COMPILE_ManifConversions ON)
+        set(FRAMEWORK_USE_manif ON)
+    endif()
+    if(TARGET BipedalLocomotion::YarpUtilities)
+        set(FRAMEWORK_COMPILE_YarpUtilities ON)
+    endif()
+    if(TARGET BipedalLocomotion::ContinuousDynamicalSystem)
+        set(FRAMEWORK_COMPILE_ContinuousDynamicalSystem ON)
+    endif()
+    if(TARGET BipedalLocomotion::RobotInterface)
+        set(FRAMEWORK_COMPILE_RobotInterface ON)
+    endif()
+endif()
+
 if(FRAMEWORK_COMPILE_PYTHON_BINDINGS)
 
     set(NEW_LINE "\n")
