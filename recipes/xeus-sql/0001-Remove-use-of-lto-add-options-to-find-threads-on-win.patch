From bf3cd256a34ad572994841b84b7d9df449df88fc Mon Sep 17 00:00:00 2001
From: Mariana Meireles <mariana@psychonautgirl.space>
Date: Mon, 4 Jan 2021 11:07:36 +0000
Subject: [PATCH] Remove use of lto + add options to find threads on win

---
 CMakeLists.txt | 31 ++++---------------------------
 1 file changed, 4 insertions(+), 27 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9de002f..81917ec 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -64,6 +64,10 @@ OPTION(XSQL_USE_SHARED_XEUS_SQL "Link xsql with the xeus-sql shared library (ins
 OPTION(XSQL_DOWNLOAD_GTEST "build gtest from downloaded sources" OFF)
 OPTION(XSQL_BUILD_TESTS "xeus-sql test suite" OFF)
 
+OPTION(CMAKE_USE_WIN32_THREADS_INIT "using WIN32 threads" ON)
+OPTION(gtest_disable_pthreads "Disable uses of pthreads in gtest." ON)
+
+
 # Dependencies
 # ============
 
@@ -146,33 +150,6 @@ macro(xsql_set_common_options target_name)
         else ()
             target_compile_features(${target_name} PRIVATE cxx_std_14)
         endif ()
-
-        # Enable link time optimization and set the default symbol
-        # visibility to hidden (very important to obtain small binaries)
-        if (NOT ${U_CMAKE_BUILD_TYPE} MATCHES DEBUG)
-            # Check for Link Time Optimization support
-            # (GCC/Clang)
-            CHECK_CXX_COMPILER_FLAG("-flto" HAS_LTO_FLAG)
-            if (HAS_LTO_FLAG)
-                target_compile_options(${target_name} PUBLIC -flto)
-            endif ()
-
-            # Avoids removing symbols from the static library
-            CHECK_CXX_COMPILER_FLAG("-ffat-lto-objects" HAS_FATLTO_FLAG)
-            if (${linkage_upper} MATCHES "STATIC" AND  HAS_FATLTO_FLAG)
-                message(STATUS "ENABLE FAT LTO OBJECTS")
-                target_compile_options(${target_name} PUBLIC -ffat-lto-objects)
-            endif ()
-
-            # Intel equivalent to LTO is called IPO
-            if (CMAKE_CXX_COMPILER_ID MATCHES "Intel")
-                CHECK_CXX_COMPILER_FLAG("-ipo" HAS_IPO_FLAG)
-                if (HAS_IPO_FLAG)
-                    target_compile_options(${target_name} PUBLIC -ipo)
-                endif ()
-            endif ()
-        endif ()
-
     endif ()
 
     if (APPLE)
-- 
2.25.1

