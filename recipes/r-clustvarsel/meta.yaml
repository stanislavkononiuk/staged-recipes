{% set version = '2.3.3' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-clustvarsel
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/clustvarsel_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/clustvarsel/clustvarsel_{{ version }}.tar.gz
  sha256: 3f731089a0807908979da55683f29a035ced8c9292dc28c3f7846fe1a38d89b7

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]
  host:
    - r-base
    - r-bma >=3.18
    - r-matrix
    - r-foreach
    - r-iterators
    - r-mclust >=5.3
  run:
    - r-base
    - r-bma >=3.18
    - r-matrix
    - r-foreach
    - r-iterators
    - r-mclust >=5.3

test:
  commands:
    - $R -e "library('clustvarsel')"           # [not win]
    - "\"%R%\" -e \"library('clustvarsel')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=clustvarsel
  license: GPL (>= 2)
  summary: Variable selection for Gaussian model-based clustering as implemented in the 'mclust'
    package. The methodology allows to find the (locally) optimal subset of variables
    in a data set that have group/cluster information. A greedy or headlong search can
    be used, either in a forward-backward or backward-forward direction, with or without
    sub-sampling at the hierarchical clustering stage for starting 'mclust' models.
    By default the algorithm uses a sequential search, but parallelisation is also available.
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: clustvarsel
# Version: 2.3.3
# Date: 2018-11-18
# Title: Variable Selection for Gaussian Model-Based Clustering
# Description: Variable selection for Gaussian model-based clustering as implemented in the 'mclust' package. The methodology allows to find the (locally) optimal subset of variables in a data set that have group/cluster information. A greedy or headlong search can be used, either in a forward-backward or backward-forward direction, with or without sub-sampling at the hierarchical clustering stage for starting 'mclust' models. By default the algorithm uses a sequential search, but parallelisation is also available.
# Authors@R: c(person("Nema", "Dean", role = "aut", comment = c(ORCID = "0000-0002-5080-2517")), person("Adrian E.", "Raftery", role = "aut"), person("Luca", "Scrucca", role = c("aut", "cre"), comment = c(ORCID = "0000-0003-3826-0484"), email = "luca.scrucca@unipg.it"))
# Depends: R (>= 3.2), mclust (>= 5.3)
# Imports: stats, Matrix, BMA (>= 3.18), foreach, iterators
# Suggests: MASS, parallel, doParallel, knitr (>= 1.12), rmarkdown (>= 0.9)
# License: GPL (>= 2)
# VignetteBuilder: knitr
# Repository: CRAN
# ByteCompile: true
# LazyLoad: yes
# Encoding: UTF-8
# NeedsCompilation: no
# Packaged: 2018-11-19 08:58:37 UTC; luca
# Author: Nema Dean [aut] (<https://orcid.org/0000-0002-5080-2517>), Adrian E. Raftery [aut], Luca Scrucca [aut, cre] (<https://orcid.org/0000-0003-3826-0484>)
# Maintainer: Luca Scrucca <luca.scrucca@unipg.it>
# Date/Publication: 2018-11-19 09:20:02 UTC
