{% set version = '0.5.0' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mlr3fselect
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/mlr3fselect_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/mlr3fselect/mlr3fselect_{{ version }}.tar.gz
  sha256: b8f2e3e957cfa7a1efaa32eb7ac3b013f12b917675f5ae11df874e1f15c886e3

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-r6
    - r-bbotk >=0.3.0
    - r-checkmate >=2.0.0
    - r-data.table
    - r-lgr
    - r-mlr3 >=0.7.0
    - r-mlr3misc >=0.7.0
    - r-mlr3pipelines >=0.3.0
    - r-paradox >=0.7.0
  run:
    - r-base
    - r-r6
    - r-bbotk >=0.3.0
    - r-checkmate >=2.0.0
    - r-data.table
    - r-lgr
    - r-mlr3 >=0.7.0
    - r-mlr3misc >=0.7.0
    - r-mlr3pipelines >=0.3.0
    - r-paradox >=0.7.0

test:
  commands:
    - $R -e "library('mlr3fselect')"           # [not win]
    - "\"%R%\" -e \"library('mlr3fselect')\""  # [win]

about:
  home: https://mlr3fselect.mlr-org.com, https://github.com/mlr-org/mlr3fselect
  license: LGPL-3.0-only
  summary: Implements methods for feature selection with 'mlr3', e.g.  random search and sequential
    selection. Various termination criteria can be set and combined. The class 'AutoFSelector'
    provides a convenient way to perform nested resampling in combination with 'mlr3'.
  license_family: LGPL
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r
    - pascal-git

# Package: mlr3fselect
# Title: Feature Selection for 'mlr3'
# Version: 0.5.0
# Authors@R: c(person(given = "Marc", family = "Becker", role = c("aut", "cre"), email = "marcbecker@posteo.de", comment = c(ORCID = "0000-0002-8115-0400")), person(given = "Patrick", family = "Schratz", role = "aut", email = "patrick.schratz@gmail.com", comment = c(ORCID = "0000-0003-0748-6624")), person(given = "Michel", family = "Lang", role = "aut", email = "michellang@gmail.com", comment = c(ORCID = "0000-0001-9754-0393")), person(given = "Bernd", family = "Bischl", role = "aut", email = "bernd_bischl@gmx.net", comment = c(ORCID = "0000-0001-6002-6980")))
# Description: Implements methods for feature selection with 'mlr3', e.g.  random search and sequential selection. Various termination criteria can be set and combined. The class 'AutoFSelector' provides a convenient way to perform nested resampling in combination with 'mlr3'.
# License: LGPL-3
# URL: https://mlr3fselect.mlr-org.com, https://github.com/mlr-org/mlr3fselect
# BugReports: https://github.com/mlr-org/mlr3fselect/issues
# Depends: R (>= 3.1.0)
# Imports: bbotk (>= 0.3.0), checkmate (>= 2.0.0), data.table, lgr, mlr3 (>= 0.7.0), mlr3misc (>= 0.7.0), mlr3pipelines (>= 0.3.0), paradox (>= 0.7.0), R6
# Suggests: genalg, rpart, testthat (>= 3.0.0)
# Encoding: UTF-8
# NeedsCompilation: no
# Config/testthat/edition: 3
# Config/testthat/parallel: true
# RoxygenNote: 7.1.1
# Collate: 'AutoFSelector.R' 'ArchiveFSelect.R' 'ObjectiveFSelect.R' 'mlr_fselectors.R' 'FSelector.R' 'FSelectorFromOptimizer.R' 'FSelectorExhaustiveSearch.R' 'FSelectorRFE.R' 'FSelectorRandomSearch.R' 'FSelectorSequential.R' 'FSelectorDesignPoints.R' 'FSelectorGeneticSearch.R' 'FSelectInstanceMultiCrit.R' 'FSelectInstanceSingleCrit.R' 'reexports.R' 'sugar.R' 'bibentries.R' 'zzz.R'
# Packaged: 2021-01-23 14:59:54 UTC; marc
# Author: Marc Becker [aut, cre] (<https://orcid.org/0000-0002-8115-0400>), Patrick Schratz [aut] (<https://orcid.org/0000-0003-0748-6624>), Michel Lang [aut] (<https://orcid.org/0000-0001-9754-0393>), Bernd Bischl [aut] (<https://orcid.org/0000-0001-6002-6980>)
# Maintainer: Marc Becker <marcbecker@posteo.de>
# Repository: CRAN
# Date/Publication: 2021-01-24 14:50:03 UTC
