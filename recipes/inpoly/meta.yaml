{% set name = "inpoly" %}
{% set version = "0.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/dengwirda/inpoly-python/archive/refs/tags/v{{ version }}.tar.gz
  sha256: a17ff303a24bc9d4a61be421a1cdbf62959edd7487c95a5785d917a0017e334f
  patches:
    - 0001-remove-msh.patch
    - 0002-save-plots.patch

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('c') }}

  host:
    - python
    - cython
    - pip
    - numpy
  run:
    - python
    - {{ pin_compatible('numpy') }}

test:
  requires:
    - pip
    - matplotlib-base
  imports:
    - inpoly
  source_files:
    - msh/*
    - dat/*
    - example.py
  commands:
    - pip check
    - python example.py --IDnumber 1
    - python example.py --IDnumber 2
    - python example.py --IDnumber 3
  
about:
  home: https://github.com/dengwirda/inpoly-python
  license: custom
  license_file: LICENSE.md
  summary: A fast point(s)-in-polygon routine for Python.
  description: |
    INPOLY returns the "inside/outside" status for a set of vertices VERT and a general
    polygon (PSLG) embedded in the two-dimensional plane. General non-convex and
    multiply-connected polygonal regions can be handled.
  doc_url: https://github.com/dengwirda/inpoly-python/blob/master/README.md
  dev_url: https://github.com/dengwirda/inpoly-python

extra:
  recipe-maintainers:
    - xylar
    - dengwirda
