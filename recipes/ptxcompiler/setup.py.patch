diff --git a/setup.py b/setup.py
index 0a2a23b..174df81 100644
--- a/setup.py
+++ b/setup.py
@@ -13,16 +13,38 @@
 # limitations under the License.

 import os
+import os.path
+import shutil
 import versioneer
 from distutils.sysconfig import get_config_var, get_python_inc
 from setuptools import setup, Extension

+include_dirs=[os.path.dirname(get_python_inc())]
+library_dirs=[get_config_var("LIBDIR")]
+
+# Find and add CUDA include paths
+CUDA_HOME = os.environ.get("CUDA_HOME", False)
+if not CUDA_HOME:
+    path_to_cuda_gdb = shutil.which("cuda-gdb")
+    if path_to_cuda_gdb is None:
+        raise OSError(
+            "Could not locate CUDA. "
+            "Please set the environment variable "
+            "CUDA_HOME to the path to the CUDA installation "
+            "and try again."
+        )
+    CUDA_HOME = os.path.dirname(os.path.dirname(path_to_cuda_gdb))
+if not os.path.isdir(CUDA_HOME):
+    raise OSError(f"Invalid CUDA_HOME: directory does not exist: {CUDA_HOME}")
+include_dirs.append(os.path.join(CUDA_HOME, "include"))
+library_dirs.append(os.path.join(CUDA_HOME, "lib64"))
+
 module = Extension(
     'ptxcompiler._ptxcompilerlib',
     sources=['ptxcompiler/_ptxcompilerlib.cpp'],
-    include_dirs=[os.path.dirname(get_python_inc())],
+    include_dirs=include_dirs,
     libraries=['nvptxcompiler_static'],
-    library_dirs=[get_config_var("LIBDIR")],
+    library_dirs=library_dirs,
     extra_compile_args=['-Wall', '-Werror'],
 )

