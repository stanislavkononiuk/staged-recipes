diff --git a/CMakeLists.txt b/CMakeLists.txt
index fd3f290..71e19b4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,10 +12,10 @@ if(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
 endif()
 
 option(BUILD_SHARED "Build shared library" ON)
-option(BUILD_STATIC "Build static library" ON)
+option(BUILD_STATIC "Build static library" OFF)
 option(BUILD_COVERAGE "Build with code coverage" OFF)
 
-if(${BUILD_CONTAINED_PYTHON}) 
+if(${BUILD_CONTAINED_PYTHON})
   #if make a mostly statically linked python module, use static boost
    set(BUILD_STATIC ON)
    set(Boost_USE_STATIC_LIBS ON)
@@ -58,7 +58,7 @@ if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
 	set(CMAKE_CXX_FLAGS_RELEASE "-O3 -g -fprofile-arcs -ftest-coverage")
     else()
         set(CMAKE_CXX_FLAGS_RELEASE "-O3 -g")
-    endif()	
+    endif()
 endif()
 
 if(CUDA_VERSION_MAJOR LESS 11)
diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index c2c99b1..e4f0aeb 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -4,16 +4,16 @@ find_package(PythonInterp)
 if (NOT PYTHONLIBS_FOUND)
   message(STATUS "Python libraries NOT found")
 endif()
- 
+
 if(BUILD_CONTAINED_PYTHON)
   # create a python library with as few runtime dependencies as possible
   set(Boost_USE_STATIC_LIBS ON)
 endif()
 
-if(${CMAKE_VERSION} VERSION_LESS "3.12.0") 
+if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
 	find_package( Boost COMPONENTS system filesystem python${PYTHON_VERSION_MAJOR} REQUIRED )
 else()
-#minor version numbers requires newer (3.12?) version of cmake   
+#minor version numbers requires newer (3.12?) version of cmake
   find_package( Boost COMPONENTS system filesystem python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR} REQUIRED )
 endif()
 
@@ -62,11 +62,11 @@ else()
 endif()
 
 # Suppress prefix "lib" because Python does not allow this prefix
-set_target_properties(molgrid PROPERTIES 
+set_target_properties(molgrid PROPERTIES
 									PREFIX ""
 									LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/molgrid/")
-									
-                  
+
+
 # copy module code
 foreach(file ${PYMOLGRID_PY})
  configure_file(${file}  ${CMAKE_CURRENT_BINARY_DIR}/molgrid/)
