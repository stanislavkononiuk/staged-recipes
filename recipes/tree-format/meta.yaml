{% set name = "tree-format" %}
{% set version = "0.1.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: a538523aa78ae7a4b10003b04f3e1b37708e0e089d99c9d3b9e1c71384c9a7f9

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . --no-deps -vv"

requirements:
  host:
    - python
    - pip
    - setuptools
  run:
    - python

test:
  imports:
    - tree_format

about:
  home: https://github.com/jml/tree-format
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: 'Python library to generate nicely formatted trees, like the UNIX `tree` command.'

  description: |
    Python library to generate nicely formatted trees, like the UNIX `tree`
    command.

    ## Example

    Produce output like this:

    ```
    foo
    ├── bar
    │   ├── a
    │   └── b
    ├── baz
    └── qux
        └── c⏎
            d
    ```

    using code like this:

    ```python
    from operator import itemgetter

    from tree_format import format_tree

    tree = (
        'foo', [
            ('bar', [
                ('a', []),
                ('b', []),
            ]),
            ('baz', []),
            ('qux', [
                ('c\nd', []),
            ]),
        ],
    )

    print format_tree(
        tree, format_node=itemgetter(0), get_children=itemgetter(1))
    ```
  doc_url: https://github.com/jml/tree-format
  dev_url: https://github.com/jml/tree-format

extra:
  recipe-maintainers:
    - knightdave
