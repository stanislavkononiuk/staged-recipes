{% set name = "cmor" %}
{% set version = "3.3.2" %}

package:
    name: {{ name }}
    version: {{ version }}

source:
    git_rev: 3.3.2
    url: https://github.com/PCMDI/cmor/archive/{{ version }}.tar.gz
    sha256: 495c5bb7d20bca03a56839d0d2ce9484e4719d195e35b86b9cc1bd60e5fa45d2

build:
  number: 0
  skip: True  # [win or py3k] 

 
requirements:
  build:
    - ossuuid 1.6.*
    - udunits2
    - toolchain  # [osx]
    - python <3
    - setuptools
    - numpy 1.11.*
    - hdf5 1.10.*
    - libnetcdf 4.4.*
    - gcc
    - libgcc
  run:
    - python {{ python }}
    - ossuuid >=1.6
    - udunits2
    - numpy >=1.11
    - cdms2
    - gcc
    - libgcc

test:
  commands:
      - export UVCDAT_ANONYMOUS_LOG=false && python -c "import cmor"  

about:
    home:  https://cmor.llnl.gov/
    license: '2-Clause BSD'
    license_file: 'LICENSE'
    summary: “Climate Model Output Rewriter” is a C library, with  Fortran 90 and Python bindings. CMOR is used to produce CF-compliant[3] netCDF[4] files. The structure of the files created by CMOR and the metadata they contain fulfill the requirements of many of the climate community’s standard model experiments (which are referred to here as “MIPs”[5] and include, for example, AMIP, PMIP, APE, and IPCC [DN1] scenario runs).
    description: |
        CMOR was not designed to serve as an all-purpose writer of CF-compliant netCDF files,
        but simply to reduce the effort required to prepare and manage MIP model output.
        Although MIPs encourage systematic analysis of results across models, this is only easy
        to do if the model output is written in a common format with files structured similarly
        and with sufficient metadata uniformly stored according to a common standard.
        Individual modeling groups store their data in different ways, but if a group can read
        its own data, then it should easily be able to transform the data, using CMOR, into the
        common format required by the MIPs. The adoption of CMOR as a standard code for exchanging
        climate data will facilitate participation in MIPs because after learning how to satisfy
        the output requirements of one MIP, it will be easy to prepare output for other MIPs.

extra:
  recipe-maintainers:
    - doutriaux1
