diff --git a/.ci/travis.sh b/.ci/travis.sh
index aff9458..46bb046 100644
--- a/.ci/travis.sh
+++ b/.ci/travis.sh
@@ -25,4 +25,4 @@ fi
 conda info -a
 
 # Build the code
-CC=gcc-5 && CXX=g++-5 python setup.py develop
+CC=gcc-4.8 && CXX=g++-4.8 python setup.py develop
diff --git a/.travis.yml b/.travis.yml
index 38f06e3..74360f8 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -10,8 +10,8 @@ addons:
         sources:
             - ubuntu-toolchain-r-test
         packages:
-            - gcc-5
-            - g++-5
+            - gcc-4.8
+            - g++-4.8
 
 matrix:
     include:
diff --git a/HISTORY.rst b/HISTORY.rst
index 64e9a88..a5db811 100644
--- a/HISTORY.rst
+++ b/HISTORY.rst
@@ -1,6 +1,6 @@
 .. :changelog:
 
-0.1.0 (2018-07-13)
+0.1.2 (2018-07-15)
 ++++++++++++++++++
 
 - Initial stable beta release of the code for submission to ApJ.
diff --git a/setup.py b/setup.py
index e610f05..31649c2 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@ import sys
 import os
 import glob
 import setuptools
-__version__ = '0.1.1'
+__version__ = '0.1.2'
 
 
 # Custom compiler flags
@@ -26,8 +26,9 @@ if int(macros['STARRY_NGRAD']) % 2 == 0:
     macros['STARRY_NGRAD'] = int(macros['STARRY_NGRAD']) + 1
 
 # Enable optimization?
-optimize = True
-if (os.getenv('STARRY_NO_OPT', 0)):
+if int(os.getenv('STARRY_OPT', 1)):
+    optimize = True
+else:
     optimize = False
 
 
@@ -107,10 +108,16 @@ class BuildExt(build_ext):
         """Build the extensions."""
         ct = self.compiler.compiler_type
         opts = self.c_opts.get(ct, [])
+        if not any(f.startswith("-std=") for f in opts):
+            if has_flag(self.compiler, "-std=c++14"):
+                opts.append('-std=c++14')
+            elif has_flag(self.compiler, "-std=c++11"):
+                opts.append('-std=c++11')
+            else:
+                raise RuntimeError("C++11 or 14 is required to compile starry")
         if ct == 'unix':
             opts.append('-DVERSION_INFO="%s"' %
                         self.distribution.get_version())
-            opts.append('-std=c++14')
             if has_flag(self.compiler, '-fvisibility=hidden'):
                 opts.append('-fvisibility=hidden')
         elif ct == 'msvc':
diff --git a/starry/tables.h b/starry/tables.h
index b8f44d7..72b9b58 100644
--- a/starry/tables.h
+++ b/starry/tables.h
@@ -10,6 +10,8 @@ using good old template metaprogramming (>= C++14)
 #include <cmath>
 #include <boost/math/special_functions/factorials.hpp>
 #include <boost/math/special_functions/gamma.hpp>
+#include <cstddef>
+#include <array>
 #include "errors.h"
 
 // Square root of pi at double precision
@@ -24,88 +26,626 @@ using good old template metaprogramming (>= C++14)
 // Largest square root we're willing to tabulate
 #define MAXSQRT 300
 
-namespace tables {
-
-    double constexpr sqrt_rec(double x, double curr, double prev) {
-        return curr == prev ? curr : sqrt_rec(x, 0.5 * (curr + x / curr), curr);
-    }
-
-    template <typename T>
-    double constexpr sqrt_(T x) {
-        return x > 0 ? sqrt_rec((double)x, (double)x, 0) : NAN;
-    }
-
-    double constexpr factorial_(int x) {
-        return x > 0 ?
-               (x <= MAXFACT ? x * factorial_(x - 1) : INFINITY):
-               1.0;
-    }
-
-    double constexpr double_factorial_(int x) {
-        return x > 0 ?
-               (x <= MAXDOUBLEFACT ? x * double_factorial_(x - 2) : INFINITY):
-               1.0;
-    }
-
-    double constexpr half_factorial_pos_(int x) {
-        return x > 1 ?
-               (x % 2 == 0 ? factorial_(x / 2) : half_factorial_pos_(x - 2) * (x / 2.0)) :
-               (x == 0 ? 1 : 0.5 * SQRTPI);
-    }
-
-    double constexpr half_factorial_neg_(int x) {
-        return x > 1 ?
-               (x % 2 == 0 ? INFINITY : half_factorial_neg_(x - 2) / (1.0 - x / 2.0)) :
-               (x == 0 ? 1 : SQRTPI);
-    }
+// Pre-tabulated square roots and factorials at double precision
+namespace const_tables {
+
+    static const double sqrt_int[] =
+    { 0.00000000000000000e+00,   1.00000000000000000e+00,   1.41421356237309515e+00,
+    1.73205080756887719e+00,   2.00000000000000000e+00,   2.23606797749978981e+00,
+    2.44948974278317788e+00,   2.64575131106459072e+00,   2.82842712474619029e+00,
+    3.00000000000000000e+00,   3.16227766016837952e+00,   3.31662479035539981e+00,
+    3.46410161513775439e+00,   3.60555127546398912e+00,   3.74165738677394133e+00,
+    3.87298334620741702e+00,   4.00000000000000000e+00,   4.12310562561766059e+00,
+    4.24264068711928477e+00,   4.35889894354067398e+00,   4.47213595499957961e+00,
+    4.58257569495583983e+00,   4.69041575982342973e+00,   4.79583152331271911e+00,
+    4.89897948556635576e+00,   5.00000000000000000e+00,   5.09901951359278449e+00,
+    5.19615242270663202e+00,   5.29150262212918143e+00,   5.38516480713450374e+00,
+    5.47722557505166119e+00,   5.56776436283002152e+00,   5.65685424949238058e+00,
+    5.74456264653802862e+00,   5.83095189484530074e+00,   5.91607978309961613e+00,
+    6.00000000000000000e+00,   6.08276253029821934e+00,   6.16441400296897601e+00,
+    6.24499799839839831e+00,   6.32455532033675905e+00,   6.40312423743284853e+00,
+    6.48074069840786038e+00,   6.55743852430200036e+00,   6.63324958071079962e+00,
+    6.70820393249936942e+00,   6.78232998312526814e+00,   6.85565460040104391e+00,
+    6.92820323027550877e+00,   7.00000000000000000e+00,   7.07106781186547551e+00,
+    7.14142842854285043e+00,   7.21110255092797825e+00,   7.28010988928051805e+00,
+    7.34846922834953453e+00,   7.41619848709566298e+00,   7.48331477354788266e+00,
+    7.54983443527074982e+00,   7.61577310586390865e+00,   7.68114574786860782e+00,
+    7.74596669241483404e+00,   7.81024967590665398e+00,   7.87400787401181113e+00,
+    7.93725393319377215e+00,   8.00000000000000000e+00,   8.06225774829854913e+00,
+    8.12403840463596083e+00,   8.18535277187245036e+00,   8.24621125123532117e+00,
+    8.30662386291807486e+00,   8.36660026534075563e+00,   8.42614977317635905e+00,
+    8.48528137423856954e+00,   8.54400374531753037e+00,   8.60232526704262668e+00,
+    8.66025403784438730e+00,   8.71779788708134795e+00,   8.77496438739212259e+00,
+    8.83176086632784774e+00,   8.88819441731558868e+00,   8.94427190999915922e+00,
+    9.00000000000000000e+00,   9.05538513813741730e+00,   9.11043357914429919e+00,
+    9.16515138991167966e+00,   9.21954445729288707e+00,   9.27361849549570394e+00,
+    9.32737905308881565e+00,   9.38083151964685946e+00,   9.43398113205660316e+00,
+    9.48683298050513812e+00,   9.53939201416945615e+00,   9.59166304662543823e+00,
+    9.64365076099295493e+00,   9.69535971483265868e+00,   9.74679434480896312e+00,
+    9.79795897113271153e+00,   9.84885780179610393e+00,   9.89949493661166535e+00,
+    9.94987437106619943e+00,   1.00000000000000000e+01,   1.00498756211208899e+01,
+    1.00995049383620774e+01,   1.01488915650922191e+01,   1.01980390271855690e+01,
+    1.02469507659595980e+01,   1.02956301409870008e+01,   1.03440804327886013e+01,
+    1.03923048454132640e+01,   1.04403065089105507e+01,   1.04880884817015154e+01,
+    1.05356537528527383e+01,   1.05830052442583629e+01,   1.06301458127346500e+01,
+    1.06770782520313112e+01,   1.07238052947636078e+01,   1.07703296142690075e+01,
+    1.08166538263919687e+01,   1.08627804912002155e+01,   1.09087121146357138e+01,
+    1.09544511501033224e+01,   1.10000000000000000e+01,   1.10453610171872612e+01,
+    1.10905365064094177e+01,   1.11355287256600430e+01,   1.11803398874989490e+01,
+    1.12249721603218244e+01,   1.12694276695846440e+01,   1.13137084989847612e+01,
+    1.13578166916005472e+01,   1.14017542509913792e+01,   1.14455231422595975e+01,
+    1.14891252930760572e+01,   1.15325625946707966e+01,   1.15758369027902255e+01,
+    1.16189500386222502e+01,   1.16619037896906015e+01,   1.17046999107196257e+01,
+    1.17473401244707301e+01,   1.17898261225515952e+01,   1.18321595661992323e+01,
+    1.18743420870379168e+01,   1.19163752878129845e+01,   1.19582607431013983e+01,
+    1.20000000000000000e+01,   1.20415945787922958e+01,   1.20830459735945723e+01,
+    1.21243556529821408e+01,   1.21655250605964387e+01,   1.22065556157337021e+01,
+    1.22474487139158903e+01,   1.22882057274445078e+01,   1.23288280059379520e+01,
+    1.23693168768529809e+01,   1.24096736459908570e+01,   1.24498995979887326e+01,
+    1.24899959967967966e+01,   1.25299640861416677e+01,   1.25698050899765352e+01,
+    1.26095202129184916e+01,   1.26491106406735181e+01,   1.26885775404495202e+01,
+    1.27279220613578552e+01,   1.27671453348037041e+01,   1.28062484748656971e+01,
+    1.28452325786651294e+01,   1.28840987267251261e+01,   1.29228479833200858e+01,
+    1.29614813968157208e+01,   1.30000000000000000e+01,   1.30384048104052983e+01,
+    1.30766968306220210e+01,   1.31148770486040007e+01,   1.31529464379659053e+01,
+    1.31909059582729196e+01,   1.32287565553229527e+01,   1.32664991614215992e+01,
+    1.33041346956500703e+01,   1.33416640641263342e+01,   1.33790881602596521e+01,
+    1.34164078649987388e+01,   1.34536240470737098e+01,   1.34907375632320417e+01,
+    1.35277492584686829e+01,   1.35646599662505363e+01,   1.36014705087354439e+01,
+    1.36381816969858551e+01,   1.36747943311773437e+01,   1.37113092008020878e+01,
+    1.37477270848675204e+01,   1.37840487520902215e+01,   1.38202749610852536e+01,
+    1.38564064605510175e+01,   1.38924439894498040e+01,   1.39283882771841192e+01,
+    1.39642400437689407e+01,   1.40000000000000000e+01,   1.40356688476181990e+01,
+    1.40712472794702883e+01,   1.41067359796658849e+01,   1.41421356237309510e+01,
+    1.41774468787578254e+01,   1.42126704035518951e+01,   1.42478068487750065e+01,
+    1.42828568570857009e+01,   1.43178210632763534e+01,   1.43527000944073233e+01,
+    1.43874945699381591e+01,   1.44222051018559565e+01,   1.44568322948009609e+01,
+    1.44913767461894381e+01,   1.45258390463339495e+01,   1.45602197785610361e+01,
+    1.45945195193264237e+01,   1.46287388383277932e+01,   1.46628782986151798e+01,
+    1.46969384566990691e+01,   1.47309198626562345e+01,   1.47648230602334003e+01,
+    1.47986485869487421e+01,   1.48323969741913260e+01,   1.48660687473185060e+01,
+    1.48996644257513395e+01,   1.49331845230680784e+01,   1.49666295470957653e+01,
+    1.50000000000000000e+01,   1.50332963783729081e+01,   1.50665191733193637e+01,
+    1.50996688705414996e+01,   1.51327459504215565e+01,   1.51657508881031013e+01,
+    1.51986841535706638e+01,   1.52315462117278173e+01,   1.52643375224737472e+01,
+    1.52970585407783553e+01,   1.53297097167558913e+01,   1.53622914957372156e+01,
+    1.53948043183406522e+01,   1.54272486205415120e+01,   1.54596248337403068e+01,
+    1.54919333848296681e+01,   1.55241746962600242e+01,   1.55563491861040450e+01,
+    1.55884572681198961e+01,   1.56204993518133080e+01,   1.56524758424985286e+01,
+    1.56843871413581226e+01,   1.57162336455017115e+01,   1.57480157480236223e+01,
+    1.57797338380594994e+01,   1.58113883008418963e+01,   1.58429795177548591e+01,
+    1.58745078663875443e+01,   1.59059737205868661e+01,   1.59373774505092278e+01,
+    1.59687194226713114e+01,   1.60000000000000000e+01,   1.60312195418813985e+01,
+    1.60623784042090101e+01,   1.60934769394310813e+01,   1.61245154965970983e+01,
+    1.61554944214035103e+01,   1.61864140562386467e+01,   1.62172747402268556e+01,
+    1.62480768092719217e+01,   1.62788205960997061e+01,   1.63095064303000896e+01,
+    1.63401346383681911e+01,   1.63707055437449007e+01,   1.64012194668567268e+01,
+    1.64316767251549827e+01,   1.64620776331543297e+01,   1.64924225024706423e+01,
+    1.65227116418583044e+01,   1.65529453572468483e+01,   1.65831239517770008e+01,
+    1.66132477258361497e+01,   1.66433169770932388e+01,   1.66733320005330654e+01,
+    1.67032930884900672e+01,   1.67332005306815113e+01,   1.67630546142402110e+01,
+    1.67928556237466644e+01,   1.68226038412607224e+01,   1.68522995463527181e+01,
+    1.68819430161341337e+01,   1.69115345252877631e+01,   1.69410743460974160e+01,
+    1.69705627484771391e+01,   1.70000000000000000e+01,   1.70293863659264026e+01,
+    1.70587221092319794e+01,   1.70880074906350607e+01,   1.71172427686236901e+01,
+    1.71464281994822478e+01,   1.71755640373176668e+01,   1.72046505340852534e+01,
+    1.72336879396140858e+01,   1.72626765016320682e+01,   1.72916164657905824e+01,
+    1.73205080756887746e+01};
+
+    static const double invsqrt_int[] =
+    {                INFINITY,   1.00000000000000000e+00,   7.07106781186547462e-01,
+    5.77350269189625842e-01,   5.00000000000000000e-01,   4.47213595499957928e-01,
+    4.08248290463863073e-01,   3.77964473009227198e-01,   3.53553390593273731e-01,
+    3.33333333333333315e-01,   3.16227766016837941e-01,   3.01511344577763629e-01,
+    2.88675134594812921e-01,   2.77350098112614574e-01,   2.67261241912424397e-01,
+    2.58198889747161098e-01,   2.50000000000000000e-01,   2.42535625036332969e-01,
+    2.35702260395515867e-01,   2.29415733870561744e-01,   2.23606797749978964e-01,
+    2.18217890235992390e-01,   2.13200716355610415e-01,   2.08514414057074771e-01,
+    2.04124145231931536e-01,   2.00000000000000011e-01,   1.96116135138184045e-01,
+    1.92450089729875262e-01,   1.88982236504613599e-01,   1.85695338177051861e-01,
+    1.82574185835055358e-01,   1.79605302026774910e-01,   1.76776695296636865e-01,
+    1.74077655955697852e-01,   1.71498585142508819e-01,   1.69030850945703304e-01,
+    1.66666666666666657e-01,   1.64398987305357291e-01,   1.62221421130762544e-01,
+    1.60128153805087131e-01,   1.58113883008418971e-01,   1.56173761888606072e-01,
+    1.54303349962091912e-01,   1.52498570332604666e-01,   1.50755672288881815e-01,
+    1.49071198499985985e-01,   1.47441956154897136e-01,   1.45864991497894558e-01,
+    1.44337567297406461e-01,   1.42857142857142849e-01,   1.41421356237309503e-01,
+    1.40028008402800969e-01,   1.38675049056307287e-01,   1.37360563948689035e-01,
+    1.36082763487954339e-01,   1.34839972492648424e-01,   1.33630620956212198e-01,
+    1.32453235706504385e-01,   1.31306432859722544e-01,   1.30188910980823885e-01,
+    1.29099444873580549e-01,   1.28036879932895975e-01,   1.27000127000190505e-01,
+    1.25988157669742390e-01,   1.25000000000000000e-01,   1.24034734589208467e-01,
+    1.23091490979332724e-01,   1.22169444356305223e-01,   1.21267812518166485e-01,
+    1.20385853085769198e-01,   1.19522860933439362e-01,   1.18678165819385326e-01,
+    1.17851130197757933e-01,   1.17041147196130568e-01,   1.16247638743819284e-01,
+    1.15470053837925135e-01,   1.14707866935280872e-01,   1.13960576459637947e-01,
+    1.13227703414459563e-01,   1.12508790092602395e-01,   1.11803398874989482e-01,
+    1.11111111111111105e-01,   1.10431526074846534e-01,   1.09764259989690346e-01,
+    1.09108945117996195e-01,   1.08465228909328082e-01,   1.07832773203438412e-01,
+    1.07211253483779481e-01,   1.06600358177805207e-01,   1.05999788000636003e-01,
+    1.05409255338945976e-01,   1.04828483672191830e-01,   1.04257207028537385e-01,
+    1.03695169473042526e-01,   1.03142124625879336e-01,   1.02597835208515412e-01,
+    1.02062072615965768e-01,   1.01534616513361917e-01,   1.01015254455221068e-01,
+    1.00503781525921210e-01,   1.00000000000000006e-01,   9.95037190209989153e-02,
+    9.90147542976674427e-02,   9.85329278164293193e-02,   9.80580675690920223e-02,
+    9.75900072948533287e-02,   9.71285862357264135e-02,   9.66736489045663533e-02,
+    9.62250448649376311e-02,   9.57826285221151374e-02,   9.53462589245592379e-02,
+    9.49157995752498984e-02,   9.44911182523067994e-02,   9.40720868383597281e-02,
+    9.36585811581693989e-02,   9.32504808240313815e-02,   9.28476690885259304e-02,
+    9.24500327042048486e-02,   9.20574617898323455e-02,   9.16698497028211323e-02,
+    9.12870929175276791e-02,   9.09090909090909116e-02,   9.05357460425185306e-02,
+    9.01669634667432301e-02,   8.98026510133874550e-02,   8.94427190999915883e-02,
+    8.90870806374747942e-02,   8.87356509416113853e-02,   8.83883476483184327e-02,
+    8.80450906325623839e-02,   8.77058019307029313e-02,   8.73704056661037953e-02,
+    8.70388279778489260e-02,   8.67109969524119950e-02,   8.63868425581360150e-02,
+    8.60662965823870418e-02,   8.57492925712544096e-02,   8.54357657716760949e-02,
+    8.51256530758748575e-02,   8.48188929679970921e-02,   8.45154254728516519e-02,
+    8.42151921066519038e-02,   8.39181358296689078e-02,   8.36242010007090808e-02,
+    8.33333333333333287e-02,   8.30454798537399730e-02,   8.27605888602367945e-02,
+    8.24786098842322513e-02,   8.21994936526786457e-02,   8.19231920519040563e-02,
+    8.16496580927726090e-02,   8.13788458771159406e-02,   8.11107105653812721e-02,
+    8.08452083454443277e-02,   8.05822964025380284e-02,   8.03219328902498864e-02,
+    8.00640769025435656e-02,   7.98086884467622132e-02,   7.95557284175729962e-02,
+    7.93051585718144159e-02,   7.90569415042094853e-02,   7.88110406239100614e-02,
+    7.85674201318386084e-02,   7.83260449987957380e-02,   7.80868809443030359e-02,
+    7.78498944161522960e-02,   7.76150525706332806e-02,   7.73823232534136818e-02,
+    7.71516749810459562e-02,   7.69230769230769273e-02,   7.66964988847370355e-02,
+    7.64719112901872528e-02,   7.62492851663023330e-02,   7.60285921269705511e-02,
+    7.58098043578903369e-02,   7.55928946018454423e-02,   7.53778361444409073e-02,
+    7.51646028002828925e-02,   7.49531688995861423e-02,   7.47435092751935898e-02,
+    7.45355992499929926e-02,   7.43294146247166360e-02,   7.41249316661101165e-02,
+    7.39221270954572851e-02,   7.37209780774485679e-02,   7.35214622093807724e-02,
+    7.33235575106766513e-02,   7.31272424127130671e-02,   7.29324957489472792e-02,
+    7.27392967453307920e-02,   7.25476250110011628e-02,   7.23574605292421624e-02,
+    7.21687836487032303e-02,   7.19815750748694499e-02,   7.17958158617738179e-02,
+    7.16114874039432969e-02,   7.14285714285714246e-02,   7.12470499879096497e-02,
+    7.10669054518701521e-02,   7.08881205008335818e-02,   7.07106781186547517e-02,
+    7.05345615858598285e-02,   7.03597544730291818e-02,   7.01862406343596451e-02,
+    7.00140042014004843e-02,   6.98430295769578158e-02,   6.96733014291617686e-02,
+    6.95048046856915902e-02,   6.93375245281536434e-02,   6.91714463866074658e-02,
+    6.90065559342354223e-02,   6.88428390821514274e-02,   6.86802819743445175e-02,
+    6.85188709827531661e-02,   6.83585927024663309e-02,   6.81994339470473471e-02,
+    6.80413817439771695e-02,   6.78844233302130645e-02,   6.77285461478596418e-02,
+    6.75737378399485916e-02,   6.74199862463242122e-02,   6.72672793996312440e-02,
+    6.71156055214024300e-02,   6.69649530182425123e-02,   6.68153104781060991e-02,
+    6.66666666666666657e-02,   6.65190105237739304e-02,   6.63723311599972027e-02,
+    6.62266178532521926e-02,   6.60818600455089777e-02,   6.59380473395786981e-02,
+    6.57951694959768990e-02,   6.56532164298612719e-02,   6.55121782080418380e-02,
+    6.53720450460613389e-02,   6.52328073053442259e-02,   6.50944554904119427e-02,
+    6.49569802461630874e-02,   6.48203723552164407e-02,   6.46846227353150838e-02,
+    6.45497224367902744e-02,   6.44156626400830823e-02,   6.42824346533225066e-02,
+    6.41500299099584115e-02,   6.40184399664479875e-02,   6.38876564999939917e-02,
+    6.37576713063338213e-02,   6.36284762975777712e-02,   6.35000635000952524e-02,
+    6.33724250524477922e-02,   6.32455532033675827e-02,   6.31194403097803114e-02,
+    6.29940788348711950e-02,   6.28694613461931451e-02,   6.27455805138158601e-02,
+    6.26224291085149543e-02,   6.25000000000000000e-02,   6.23782861551805332e-02,
+    6.22572806364690354e-02,   6.21369766001200058e-02,   6.20173672946042337e-02,
+    6.18984460590172939e-02,   6.17802063215215427e-02,   6.16626415978207346e-02,
+    6.15457454896663619e-02,   6.14295116833951174e-02,   6.13139339484965809e-02,
+    6.11990061362104598e-02,   6.10847221781526117e-02,   6.09710760849692321e-02,
+    6.08580619450184573e-02,   6.07456739230786968e-02,   6.06339062590832423e-02,
+    6.05227532668802456e-02,   6.04122093330176982e-02,   6.03022689155527161e-02,
+    6.01929265428845992e-02,   6.00841768126109677e-02,   5.99760143904067219e-02,
+    5.98684340089249631e-02,   5.97614304667196811e-02,   5.96549986271893568e-02,
+    5.95491334175413667e-02,   5.94438298277763996e-02,   5.93390829096926628e-02,
+    5.92348877759092327e-02,   5.91312395989082584e-02,   5.90281336100955262e-02,
+    5.89255650988789667e-02,   5.88235294117647051e-02,   5.87220219514703462e-02,
+    5.86210381760549210e-02,   5.85205735980652841e-02,   5.84206237836985970e-02,
+    5.83211843519804291e-02,   5.82222509739582020e-02,   5.81238193719096422e-02,
+    5.80258853185659437e-02,   5.79284446363492259e-02,   5.78314931966240203e-02,
+    5.77350269189625676e-02};
+
+    static const double factorial[] =
+    { 1.00000000000000000e+00,   1.00000000000000000e+00,   2.00000000000000000e+00,
+    6.00000000000000000e+00,   2.40000000000000000e+01,   1.20000000000000000e+02,
+    7.20000000000000000e+02,   5.04000000000000000e+03,   4.03200000000000000e+04,
+    3.62880000000000000e+05,   3.62880000000000000e+06,   3.99168000000000000e+07,
+    4.79001600000000000e+08,   6.22702080000000000e+09,   8.71782912000000000e+10,
+    1.30767436800000000e+12,   2.09227898880000000e+13,   3.55687428096000000e+14,
+    6.40237370572800000e+15,   1.21645100408832000e+17,   2.43290200817664000e+18,
+    5.10909421717094400e+19,   1.12400072777760768e+21,   2.58520167388849782e+22,
+    6.20448401733239410e+23,   1.55112100433309861e+25,   4.03291461126605650e+26,
+    1.08888694504183519e+28,   3.04888344611713872e+29,   8.84176199373970190e+30,
+    2.65252859812191068e+32,   8.22283865417792243e+33,   2.63130836933693518e+35,
+    8.68331761881188594e+36,   2.95232799039604157e+38,   1.03331479663861454e+40,
+    3.71993326789901255e+41,   1.37637530912263456e+43,   5.23022617466601117e+44,
+    2.03978820811974441e+46,   8.15915283247897684e+47,   3.34525266131638080e+49,
+    1.40500611775287995e+51,   6.04152630633738341e+52,   2.65827157478844887e+54,
+    1.19622220865480189e+56,   5.50262215981208915e+57,   2.58623241511168178e+59,
+    1.24139155925360725e+61,   6.08281864034267522e+62,   3.04140932017133756e+64,
+    1.55111875328738219e+66,   8.06581751709438768e+67,   4.27488328406002548e+69,
+    2.30843697339241379e+71,   1.26964033536582764e+73,   7.10998587804863481e+74,
+    4.05269195048772141e+76,   2.35056133128287849e+78,   1.38683118545689839e+80,
+    8.32098711274138990e+81,   5.07580213877224836e+83,   3.14699732603879394e+85,
+    1.98260831540444008e+87,   1.26886932185884165e+89,   8.24765059208247152e+90,
+    5.44344939077443069e+92,   3.64711109181886832e+94,   2.48003554243683055e+96,
+    1.71122452428141297e+98,  1.19785716699698922e+100,  8.50478588567862300e+101,
+    6.12344583768860846e+103,  4.47011546151268439e+105,  3.30788544151938624e+107,
+    2.48091408113953997e+109,  1.88549470166605038e+111,  1.45183092028285872e+113,
+    1.13242811782062968e+115,  8.94618213078297571e+116,  7.15694570462638057e+118,
+    5.79712602074736784e+120,  4.75364333701284202e+122,  3.94552396972065879e+124,
+    3.31424013456535319e+126,  2.81710411438055013e+128,  2.42270953836727341e+130,
+    2.10775729837952785e+132,  1.85482642257398436e+134,  1.65079551609084602e+136,
+    1.48571596448176151e+138,  1.35200152767840292e+140,  1.24384140546413082e+142,
+    1.15677250708164157e+144,  1.08736615665674308e+146,  1.03299784882390593e+148,
+    9.91677934870949648e+149,  9.61927596824821204e+151,  9.42689044888324798e+153,
+    9.33262154439441533e+155,  9.33262154439441510e+157,  9.42594775983835988e+159,
+    9.61446671503512708e+161,  9.90290071648618047e+163,  1.02990167451456281e+166,
+    1.08139675824029098e+168,  1.14628056373470837e+170,  1.22652020319613800e+172,
+    1.32464181945182902e+174,  1.44385958320249366e+176,  1.58824554152274303e+178,
+    1.76295255109024459e+180,  1.97450685722107401e+182,  2.23119274865981377e+184,
+    2.54355973347218766e+186,  2.92509369349301600e+188,  3.39310868445189809e+190,
+    3.96993716080872106e+192,  4.68452584975429092e+194,  5.57458576120760582e+196,
+    6.68950291344912712e+198,  8.09429852527344409e+200,  9.87504420083360106e+202,
+    1.21463043670253293e+205,  1.50614174151114093e+207,  1.88267717688892611e+209,
+    2.37217324288004685e+211,  3.01266001845765943e+213,  3.85620482362580407e+215,
+    4.97450422247728746e+217,  6.46685548922047415e+219,  8.47158069087882063e+221,
+    1.11824865119600433e+224,  1.48727070609068571e+226,  1.99294274616151879e+228,
+    2.69047270731805041e+230,  3.65904288195254886e+232,  5.01288874827499196e+234,
+    6.91778647261948858e+236,  9.61572319694108935e+238,  1.34620124757175257e+241,
+    1.89814375907617089e+243,  2.69536413788816285e+245,  3.85437071718007308e+247,
+    5.55029383273930444e+249,  8.04792605747199171e+251,  1.17499720439091071e+254,
+    1.72724589045463892e+256,  2.55632391787286539e+258,  3.80892263763056979e+260,
+    5.71338395644585468e+262,  8.62720977423323999e+264,  1.31133588568345245e+267,
+    2.00634390509568230e+269,  3.08976961384735078e+271,  4.78914290146339408e+273,
+    7.47106292628289422e+275,  1.17295687942641447e+278,  1.85327186949373499e+280,
+    2.94670227249503840e+282,  4.71472363599206161e+284,  7.59070505394721899e+286,
+    1.22969421873944942e+289,  2.00440157654530263e+291,  3.28721858553429591e+293,
+    5.42391066613158868e+295,  9.00369170577843755e+297,  1.50361651486499915e+300,
+    2.52607574497319842e+302,  4.26906800900470511e+304,  7.25741561530799904e+306,};
+
+    static const double double_factorial[] =
+    { 1.00000000000000000e+00,   1.00000000000000000e+00,   2.00000000000000000e+00,
+    3.00000000000000000e+00,   8.00000000000000000e+00,   1.50000000000000000e+01,
+    4.80000000000000000e+01,   1.05000000000000000e+02,   3.84000000000000000e+02,
+    9.45000000000000000e+02,   3.84000000000000000e+03,   1.03950000000000000e+04,
+    4.60800000000000000e+04,   1.35135000000000000e+05,   6.45120000000000000e+05,
+    2.02702500000000000e+06,   1.03219200000000000e+07,   3.44594250000000000e+07,
+    1.85794560000000000e+08,   6.54729075000000000e+08,   3.71589120000000000e+09,
+    1.37493105750000000e+10,   8.17496064000000000e+10,   3.16234143225000000e+11,
+    1.96199055360000000e+12,   7.90585358062500000e+12,   5.10117543936000000e+13,
+    2.13458046676875000e+14,   1.42832912302080000e+15,   6.19028335362937500e+15,
+    4.28498736906240000e+16,   1.91898783962510624e+17,   1.37119595809996800e+18,
+    6.33265987076285030e+18,   4.66206625753989120e+19,   2.21643095476699759e+20,
+    1.67834385271436083e+21,   8.20079453263789189e+21,   6.37770664031457116e+22,
+    3.19830986772877752e+23,   2.55108265612582846e+24,   1.31130704576879878e+25,
+    1.07145471557284796e+26,   5.63862029680583513e+26,   4.71440074852053100e+27,
+    2.53737913356262558e+28,   2.16862434431944439e+29,   1.19256819277443417e+30,
+    1.04093968527333320e+31,   5.84358414459472708e+31,   5.20469842636666625e+32,
+    2.98022791374331072e+33,   2.70644318171066654e+34,   1.57952079428395468e+35,
+    1.46147931812375985e+36,   8.68736436856175123e+36,   8.18428418149305562e+37,
+    4.95179769008019794e+38,   4.74688482526597205e+39,   2.92156063714731713e+40,
+    2.84813089515958335e+41,   1.78215198865986344e+42,   1.76584115499894153e+43,
+    1.12275575285571384e+44,   1.13013833919932258e+45,   7.29791239356214034e+45,
+    7.45891303871552890e+46,   4.88960130368663387e+47,   5.07206086632656026e+48,
+    3.37382489954377751e+49,   3.55044260642859215e+50,   2.39541567867608204e+51,
+    2.55631867662858648e+52,   1.74865344543353983e+53,   1.89167582070515388e+54,
+    1.31149008407515480e+55,   1.43767362373591691e+56,   1.00984736473786928e+57,
+    1.12138542651401522e+58,   7.97779418142916725e+58,   8.97108341211212086e+59,
+    6.46201328695762545e+60,   7.35628839793193975e+61,   5.36347102817482921e+62,
+    6.17928225426282948e+63,   4.55895037394860494e+64,   5.31418273866603300e+65,
+    3.96628682533528648e+66,   4.67648081002610934e+67,   3.52999527454840484e+68,
+    4.20883272902349804e+69,   3.21229569983904813e+70,   3.87212611070161853e+71,
+    2.98743500085031499e+72,   3.63979854405952124e+73,   2.83806325080779904e+74,
+    3.49420660229714039e+75,   2.75292135328356524e+76,   3.42432247025119741e+77,
+    2.72539213975072947e+78,   3.42432247025119735e+79,   2.75264606114823658e+80,
+    3.49280891965622137e+81,   2.83522544298268388e+82,   3.63252127644247036e+83,
+    2.97698671513181797e+84,   3.85047255302901860e+85,   3.18537578519104522e+86,
+    4.15851035727134014e+87,   3.47205960585823938e+88,   4.57436139299847436e+89,
+    3.85398616250264568e+90,   5.12328476015829129e+91,   4.35500436362798945e+92,
+    5.84054462658045145e+93,   5.00825501817218819e+94,   6.77503176683332390e+95,
+    5.85965837126145988e+96,   7.99453748486332263e+97,   6.97299346180113711e+98,
+    9.59344498183598667e+99,  8.43732208877937612e+100,  1.17040028778399049e+102,
+    1.03779061691986340e+103,  1.45129635685214819e+104,  1.29723827114982908e+105,
+    1.82863340963370663e+106,  1.64749260436028307e+107,  2.34065076433114449e+108,
+    2.12526545962476529e+109,  3.04284599363048812e+110,  2.78409775210844214e+111,
+    4.01655671159224394e+112,  3.70285001030422835e+113,  5.38218599353360653e+114,
+    4.99884751391070806e+115,  7.31977295120570514e+116,  6.84842109405767047e+117,
+    1.01012866726638725e+119,  9.51930532074016206e+119,  1.41418013417294231e+121,
+    1.34222205022436279e+122,  2.00813579052557797e+123,  1.91937753182083880e+124,
+    2.89171553835683223e+125,  2.78309742114021613e+126,  4.22190468600097526e+127,
+    4.09115320907611789e+128,  6.24841893528144299e+129,  6.09581828152341526e+130,
+    9.37262840292216560e+131,  9.20468560510035713e+132,  1.42463951724416917e+134,
+    1.40831689758035465e+135,  2.19394485655602041e+136,  2.18289119124954973e+137,
+    3.42255397622739147e+138,  3.42713917026179333e+139,  5.40763528243927928e+140,
+    5.44915128071625135e+141,  8.65221645190284685e+142,  8.77313356195316347e+143,
+    1.40165906520826109e+145,  1.43002077059836580e+146,  2.29872086694154837e+147,
+    2.35953427148730346e+148,  3.81587663912297021e+149,  3.94042223338379693e+150,
+    6.41067275372658960e+151,  6.65931357441861657e+152,  1.08981436813352020e+154,
+    1.13874262122558335e+155,  1.87448071318965497e+156,  1.97002473472025929e+157,
+    3.26159644094999963e+158,  3.44754328576045375e+159,  5.74040973607199889e+160,
+    6.10215161579600391e+161,  1.02179293302081577e+163,  1.09228513922748456e+164,
+    1.83922727943746849e+165,  1.97703610200174717e+166,  3.34739364857619251e+167,
+    3.61797606666319711e+168,  6.15920431338019488e+169,  6.69325572332691501e+170,
+    1.14561200228871615e+172,  1.25163882026213323e+173,  2.15375056430278638e+174,
+    2.36559737029543143e+175,  4.09212607217529415e+176,  4.51829097726427385e+177,
+    7.85688205857656441e+178,  8.72030158612004976e+179,  1.52423511936385357e+181,
+    1.70045880929340963e+182,  2.98750083395315305e+183,  3.34990385430801705e+184,
+    5.91525165122724293e+185,  6.66630867007295334e+186,  1.18305033024544856e+188,
+    1.33992804268466365e+189,  2.38976166709580624e+190,  2.72005392664986727e+191,
+    4.87511380087544474e+192,  5.57611054963222835e+193,  1.00427344298034157e+195,
+    1.15425488377387125e+196,  2.08888876139911056e+197,  2.41239270708739105e+198,
+    4.38666639893813227e+199,  5.09014861195439477e+200,  9.29973276574883988e+201,
+    1.08420165434628612e+203,  1.99014281187025182e+204,  2.33103355684451521e+205,
+    4.29870847363974383e+206,  5.05834281835259753e+207,  9.37118447253464177e+208,
+    1.10777707721921894e+210,  2.06166058395762119e+211,  2.44818734065447386e+212,
+    4.57688649638591859e+213,  5.45945776965947601e+214,  1.02522257519044580e+216,
+    1.22837799817338212e+217,  2.31700301993040765e+218,  2.78841805585357741e+219,
+    5.28276688544132937e+220,  6.38547734790469242e+221,  1.21503638365150583e+223,
+    1.47504526736598401e+224,  2.81888441007149315e+225,  3.43685547296274279e+226,
+    6.59618951956729446e+227,  8.07661036146244532e+228,  1.55670072661788152e+230,
+    1.91415665566659957e+231,  3.70494772935055776e+232,  4.57483440704317326e+233,
+    8.89187455044133880e+234,  1.10253509209740460e+236,  2.15183364120680406e+237,
+    2.67916027379669342e+238,  5.25047408454460152e+239,  6.56394267080189868e+240,
+    1.29161662479797197e+242,  1.62129383968806889e+243,  3.20320922949897070e+244,
+    4.03702166082329184e+245,  8.00802307374742654e+246,  1.01329243686664622e+248,
+    2.01802181458435145e+249,  2.56362986527261508e+250,  5.12577540904425255e+251,
+    6.53725615644516843e+252,  1.31219850471532865e+254,  1.68007483220640822e+255,
+    3.38547214216554807e+256,  4.35139381541459727e+257,  8.80222756963042558e+258,
+    1.13571378582320989e+260,  2.30618362324317137e+261,  2.98692725671504215e+262,
+    6.08832476536197244e+263,  7.91535723029486152e+264,  1.61949438758628462e+266,
+    2.11340038048872811e+267,  4.34024495873124265e+268,  5.68504702351467795e+269,
+    1.17186613885743553e+271,  1.54064774337247770e+272,  3.18747589769222491e+273,
+    4.20596833940686419e+274,  8.73368395967669629e+275,  1.15664129333688777e+277,
+    2.41049677287076806e+278,  3.20389638254317917e+279,  6.70118102858073537e+280,
+    8.93887090729546913e+281,  1.87633068800260599e+283,  2.51182272495002680e+284,
+    5.29125254016734824e+285,  7.10845831160857592e+286,  1.50271572140752700e+288,
+    2.02591061880844406e+289,  4.29776696322552746e+290,  5.81436347598023426e+291,
+    1.23775688540895173e+293,  1.68035104455828781e+294,  3.58949496768596014e+295,
+    4.88982153966461766e+296,  1.04813253056430029e+298,  1.43271771112173296e+299,
+    3.08150963985904317e+300,  4.22651724780911222e+301,  9.12126853398276703e+302,
+    1.25527562259930644e+304,  2.71813802312686483e+305,  3.75327411157192600e+306,
+    8.15441406938059448e+307};
+
+    static const double half_factorial_pos[] =
+    { 1.00000000000000000e+00,   8.86226925452757941e-01,   1.00000000000000000e+00,
+    1.32934038817913702e+00,   2.00000000000000000e+00,   3.32335097044784256e+00,
+    6.00000000000000000e+00,   1.16317283965674498e+01,   2.40000000000000000e+01,
+    5.23427777845535260e+01,   1.20000000000000000e+02,   2.87885277815044390e+02,
+    7.20000000000000000e+02,   1.87125430579778845e+03,   5.04000000000000000e+03,
+    1.40344072934834130e+04,   4.03200000000000000e+04,   1.19292461994609010e+05,
+    3.62880000000000000e+05,   1.13327838894878561e+06,   3.62880000000000000e+06,
+    1.18994230839622486e+07,   3.99168000000000000e+07,   1.36843365465565860e+08,
+    4.79001600000000000e+08,   1.71054206831957316e+09,   6.22702080000000000e+09,
+    2.30923179223142395e+10,   8.71782912000000000e+10,   3.34838609873556458e+11,
+    1.30767436800000000e+12,   5.18999845304012500e+12,   2.09227898880000000e+13,
+    8.56349744751620625e+13,   3.55687428096000000e+14,   1.49861205331533600e+15,
+    6.40237370572800000e+15,   2.77243229863337160e+16,   1.21645100408832000e+17,
+    5.40624298233507456e+17,   2.43290200817664000e+18,   1.10827981137869025e+19,
+    5.10909421717094400e+19,   2.38280159446418391e+20,   1.12400072777760768e+21,
+    5.36130358754441429e+21,   2.58520167388849782e+22,   1.25990634307293729e+23,
+    6.20448401733239410e+23,   3.08677054052869661e+24,   1.55112100433309861e+25,
+    7.87126487834817582e+25,   4.03291461126605650e+26,   2.08588519276226650e+27,
+    1.08888694504183519e+28,   5.73618428009623290e+28,   3.04888344611713872e+29,
+    1.63481251982742642e+30,   8.84176199373970190e+30,   4.82269693349090774e+31,
+    2.65252859812191068e+32,   1.47092256471472688e+33,   8.22283865417792243e+33,
+    4.63340607885138954e+34,   2.63130836933693518e+35,   1.50585697562670170e+36,
+    8.68331761881188594e+36,   5.04462086834945088e+37,   2.95232799039604157e+38,
+    1.74039419958056070e+39,   1.03331479663861454e+40,   6.17839940851099027e+40,
+    3.71993326789901255e+41,   2.25511578410651132e+42,   1.37637530912263456e+43,
+    8.45668419039941758e+43,   5.23022617466601117e+44,   3.25582341330377576e+45,
+    2.03978820811974441e+46,   1.28605024825499146e+47,   8.15915283247897684e+47,
+    5.20850350543271537e+48,   3.34525266131638080e+49,   2.16152895475457694e+50,
+    1.40500611775287995e+51,   9.18649805770695237e+51,   6.04152630633738341e+52,
+    3.99612665510252429e+53,   2.65827157478844887e+54,   1.77827636152062339e+55,
+    1.19622220865480189e+56,   8.09115744491883609e+56,   5.50262215981208915e+57,
+    3.76238821188725876e+58,   2.58623241511168178e+59,   1.78713440064644804e+60,
+    1.24139155925360725e+61,   8.66760184313527354e+61,   6.08281864034267522e+62,
+    4.29046291235196048e+63,   3.04140932017133756e+64,   2.16668377073774011e+65,
+    1.55111875328738219e+66,   1.11584214192993614e+67,   8.06581751709438768e+67,
+    5.85817124513216466e+68,   4.27488328406002548e+69,   3.13412161614570784e+70,
+    2.30843697339241379e+71,   1.70809628079941079e+72,   1.26964033536582764e+73,
+    9.47993435843672996e+73,   7.10998587804863481e+74,   5.35616291251675240e+75,
+    4.05269195048772141e+76,   3.07979367469713284e+77,   2.35056133128287849e+78,
+    1.80167929969782267e+79,   1.38683118545689839e+80,   1.07199918332020455e+81,
+    8.32098711274138990e+81,   6.48559505908723711e+82,   5.07580213877224836e+83,
+    3.98864096133865099e+84,   3.14699732603879394e+85,   2.49290060083665691e+86,
+    1.98260831540444008e+87,   1.58299188153127714e+88,   1.26886932185884165e+89,
+    1.02102976358767375e+90,   8.24765059208247152e+90,   6.68774495149926366e+91,
+    5.44344939077443069e+92,   4.44735039274700998e+93,   3.64711109181886832e+94,
+    3.00196151510423189e+95,   2.48003554243683055e+96,   2.05634363784639867e+97,
+    1.71122452428141297e+98,   1.42915882830324705e+99,  1.19785716699698922e+100,
+    1.00755697395378921e+101,  8.50478588567862300e+101,  7.20403236376959301e+102,
+    6.12344583768860846e+103,  5.22292346373295474e+104,  4.47011546151268439e+105,
+    3.83884874584372184e+106,  3.30788544151938624e+107,  2.85994231565357255e+108,
+    2.48091408113953997e+109,  2.15925644831844725e+110,  1.88549470166605038e+111,
+    1.65183118296361206e+112,  1.45183092028285872e+113,  1.28016916679679930e+114,
+    1.13242811782062968e+115,  1.00493279593548746e+116,  8.94618213078297571e+116,
+    7.98921572768712577e+117,  7.15694570462638057e+118,  6.43131866078813626e+119,
+    5.79712602074736784e+120,  5.24152470854233084e+121,  4.75364333701284202e+122,
+    4.32425788454742311e+123,  3.94552396972065879e+124,  3.61075533359709812e+125,
+    3.31424013456535319e+126,  3.05108825688954798e+127,  2.81710411438055013e+128,
+    2.60868045964056344e+129,  2.42270953836727341e+130,  2.25650859758908723e+131,
+    2.10775729837952785e+132,  1.97444502289045136e+133,  1.85482642257398436e+134,
+    1.74738384525804956e+135,  1.65079551609084602e+136,  1.56390854150595427e+137,
+    1.48571596448176151e+138,  1.41533723006288856e+139,  1.35200152767840292e+140,
+    1.29503356550754297e+141,  1.24384140546413082e+142,  1.19790604809447728e+143,
+    1.15677250708164157e+144,  1.12004215496833620e+145,  1.08736615665674308e+146,
+    1.05843983644507772e+147,  1.03299784882390593e+148,  1.01081004380504920e+149,
+    9.91677934870949648e+149,  9.75431692271872523e+150,  9.61927596824821204e+151,
+    9.51045899965075646e+152,  9.42689044888324798e+153,  9.36780211465599522e+154,
+    9.33262154439441533e+155,  9.32096310408271469e+156,  9.33262154439441510e+157,
+    9.36756791960312855e+158,  9.42594775983835988e+159,  9.50808143839717552e+160,
+    9.61446671503512708e+161,  9.74578347435710466e+162,  9.90290071648618047e+163,
+    1.00868858959596029e+165,  1.02990167451456281e+166,  1.05407957612777851e+167,
+    1.08139675824029098e+168,  1.11205395281480628e+169,  1.14628056373470837e+170,
+    1.18433745974776862e+171,  1.22652020319613800e+172,  1.27316276922885115e+173,
+    1.32464181945182902e+174,  1.38138160461330351e+175,  1.44385958320249366e+176,
+    1.51261285705156730e+177,  1.58824554152274303e+178,  1.67143720704198190e+179,
+    1.76295255109024459e+180,  1.86365248585180966e+181,  1.97450685722107401e+182,
+    2.09660904658328580e+183,  2.23119274865981377e+184,  2.37965126787202950e+185,
+    2.54355973347218766e+186,  2.72470070171347362e+187,  2.92509369349301600e+188,
+    3.14702931047906225e+189,  3.39310868445189809e+190,  3.66628914670810726e+191,
+    3.96993716080872106e+192,  4.30788974738202625e+193,  4.68452584975429092e+194,
+    5.10484935064770072e+195,  5.57458576120760582e+196,  6.10029497402400197e+197,
+    6.68950291344912712e+198,  7.35085544369892212e+199,  8.09429852527344409e+200,
+    8.93128936409419082e+201,  9.87504420083360106e+202,  1.09408294710153842e+204,
+    1.21463043670253293e+205,  1.35119243967039989e+206,  1.50614174151114093e+207,
+    1.68223458738964783e+208,  1.88267717688892611e+209,  2.11120440717400792e+210,
+    2.37217324288004685e+211,  2.67067357507512002e+212,  3.01266001845765943e+213,
+    3.40510880822077814e+214,  3.85620482362580407e+215,  4.37556481856370021e+216,
+    4.97450422247728746e+217,  5.66635644003999141e+218,  6.46685548922047415e+219,
+    7.39459515425218832e+220,  8.47158069087882063e+221,  9.72389262784162735e+222,
+    1.11824865119600433e+224,  1.28841577318901557e+225,  1.48727070609068571e+226,
+    1.72003505720733578e+227,  1.99294274616151879e+228,  2.31344715194386668e+229,
+    2.69047270731805041e+230,  3.13472089088393918e+231,  3.65904288195254886e+232,
+    4.27889401605657741e+233,  5.01288874827499196e+234,  5.88347927207779386e+235,
+    6.91778647261948858e+236,  8.14861879182774494e+237,  9.61572319694108935e+238,
+    1.13673232145997049e+240,  1.34620124757175257e+241,  1.59710891165125848e+242,
+    1.89814375907617089e+243,  2.25990910998653084e+244,  2.69536413788816285e+245,
+    3.22037048173080662e+246,  3.85437071718007308e+247,  4.62123164128370764e+248,
+    5.55029383273930444e+249,  6.67767972165495815e+250,  8.04792605747199171e+251,
+    9.71602399500796399e+252,  1.17499720439091071e+254,  1.42339751526866672e+255,
+    1.72724589045463892e+256,  2.09951133502128330e+257,  2.55632391787286539e+258,
+    3.11777433250660575e+259,  3.80892263763056979e+260,  4.66107262709737561e+261,
+    5.71338395644585468e+262,  7.01491430378155076e+263,  8.62720977423323999e+264,
+    1.06275951702290497e+266,  1.31133588568345245e+267,  1.62070826345993000e+268,
+    2.00634390509568230e+269,  2.48778718441099268e+270,  3.08976961384735078e+271,
+    3.84363119991498343e+272,  4.78914290146339408e+273,  5.97684651586779911e+274,
+    7.47106292628289422e+275,  9.35376479733310587e+276,  1.17295687942641447e+278,
+    1.47321795557996429e+279,  1.85327186949373499e+280,  2.33505045959424355e+281,
+    2.94670227249503840e+282,  3.72440548305281821e+283,  4.71472363599206161e+284,
+    5.97767080029977281e+285,  7.59070505394721899e+286,  9.65393834248413250e+287,
+    1.22969421873944942e+289,  1.56876498065367166e+290,  2.00440157654530263e+291,
+    2.56493074336875309e+292,  3.28721858553429591e+293,  4.21931107284159896e+294,
+    5.42391066613158868e+295,  6.98295982555284604e+296,  9.00369170577843755e+297,
+    1.16266281095454882e+299,  1.50361651486499915e+300,  1.94746020834886938e+301,
+    2.52607574497319842e+302,  3.28147045106784503e+303,  4.26906800900470511e+304,
+    5.56209241455999754e+305,  7.25741561530799904e+306};
+
+    static const double half_factorial_neg[] =
+    { 1.00000000000000000e+00,   1.77245385090551588e+00,                  INFINITY,
+    -3.54490770181103176e+00,                  INFINITY,   2.36327180120735436e+00,
+                   INFINITY,  -9.45308720482941789e-01,                  INFINITY,
+    2.70088205852269059e-01,                  INFINITY,  -6.00196013005042384e-02,
+                   INFINITY,   1.09126547819098623e-02,                  INFINITY,
+    -1.67886996644767117e-03,                  INFINITY,   2.23849328859689485e-04,
+                   INFINITY,  -2.63352151599634690e-05,                  INFINITY,
+    2.77212791157510215e-06,                  INFINITY,  -2.64012182054771659e-07,
+                   INFINITY,   2.29575810482410128e-08,                  INFINITY,
+    -1.83660648385928101e-09,                  INFINITY,   1.36044924730317118e-10,
+                   INFINITY,  -9.38240860209083653e-12,                  INFINITY,
+    6.05316684005860447e-13,                  INFINITY,  -3.66858596367188121e-14,
+                   INFINITY,   2.09633483638393202e-15,                  INFINITY,
+    -1.13315396561293611e-16,                  INFINITY,   5.81104597750223627e-18,
+                   INFINITY,  -2.83465657439133459e-19,                  INFINITY,
+    1.31844491832155104e-20,                  INFINITY,  -5.85975519254022719e-22,
+                   INFINITY,   2.49351284788945840e-23,                  INFINITY,
+    -1.01776034607732998e-24,                  INFINITY,   3.99121704344050983e-26,
+                   INFINITY,  -1.50611963903415467e-27,                  INFINITY,
+    5.47679868739692637e-29,                  INFINITY,  -1.92168374996383380e-30,
+                   INFINITY,   6.51418220326723295e-32,                  INFINITY,
+    -2.13579744369417487e-33,                  INFINITY,   6.78030934506087272e-35,
+                   INFINITY,  -2.08624902924949923e-36,                  INFINITY,
+    6.22760904253581809e-38,                  INFINITY,  -1.80510407030023722e-39,
+                   INFINITY,   5.08480019802883695e-41,                  INFINITY,
+    -1.39309594466543477e-42,                  INFINITY,   3.71492251910782591e-44,
+                   INFINITY,  -9.64914940028006714e-46,                  INFINITY,
+    2.44282263298229554e-47,                  INFINITY,  -6.03166082217850725e-49,
+                   INFINITY,   1.45341224630807407e-50,                  INFINITY,
+    -3.41979352072487996e-52,                  INFINITY,   7.86159430051696487e-54,
+                   INFINITY,  -1.76665040461055401e-55,                  INFINITY,
+    3.88274814200121776e-57,                  INFINITY,  -8.34999600430369377e-59,
+                   INFINITY,   1.75789389564288300e-60,                  INFINITY,
+    -3.62452349617089276e-62,                  INFINITY,   7.32226968923412729e-64,
+                   INFINITY,  -1.44995439390774790e-65,                  INFINITY,
+    2.81544542506358818e-67,                  INFINITY,  -5.36275319059731086e-69,
+                   INFINITY,   1.00238377394342258e-70,                  INFINITY,
+    -1.83923628246499559e-72,                  INFINITY,   3.31393924768467684e-74,
+                   INFINITY,  -5.86537919944190631e-76,                  INFINITY,
+    1.02006594772902717e-77,                  INFINITY,  -1.74370247475047383e-79,
+                   INFINITY,   2.93059239453861147e-81,                  INFINITY,
+    -4.84395437113820097e-83,                  INFINITY,   7.87634857095642463e-85,
+                   INFINITY,  -1.26021577135302802e-86,                  INFINITY,
+    1.98459176591028023e-88,                  INFINITY,  -3.07688645877562842e-90,
+                   INFINITY,   4.69753657828340202e-92,                  INFINITY,
+    -7.06396477937353696e-94,                  INFINITY,   1.04651330064793134e-95,
+                   INFINITY,  -1.52775664328165167e-97,                  INFINITY,
+    2.19821099752755634e-99,                  INFINITY, -3.11802978372703003e-101,
+                   INFINITY,  4.36088081640144073e-103,                  INFINITY,
+    -6.01500802262267670e-105,                  INFINITY,  8.18368438452064815e-107,
+                   INFINITY, -1.09848112543901325e-108,                  INFINITY,
+    1.45494188799869312e-110,                  INFINITY, -1.90188482091332443e-112,
+                   INFINITY,  2.45404493021074111e-114,                  INFINITY,
+    -3.12617188561877842e-116,                  INFINITY,  3.93229168002362049e-118,
+                   INFINITY, -4.88483438512251006e-120,                  INFINITY,
+    5.99366182223620862e-122,                  INFINITY, -7.26504463301358614e-124,
+                   INFINITY,  8.70065225510609106e-126,                  INFINITY,
+    -1.02966298876995169e-127,                  INFINITY,  1.20428419739175631e-129,
+                   INFINITY, -1.39223606634885114e-131,                  INFINITY,
+    1.59112693297011553e-133,                  INFINITY, -1.79788354007922657e-135,
+                   INFINITY,  2.00880842466952680e-137,                  INFINITY,
+    -2.21967781731439421e-139,                  INFINITY,  2.42587739597201541e-141,
+                   INFINITY, -2.62257015780758433e-143,                  INFINITY,
+    2.80488786931292453e-145,                  INFINITY, -2.96813531144224835e-147,
+                   INFINITY,  3.10799509051544349e-149,                  INFINITY,
+    -3.22072030105227311e-151,                  INFINITY,  3.30330287287412645e-153,
+                   INFINITY, -3.35360697753718416e-155,                  INFINITY,
+    3.37045927390671798e-157,                  INFINITY, -3.35369081980767972e-159,
+                   INFINITY,  3.30412888651002941e-161,                  INFINITY,
+    -3.22354037708295559e-163,                  INFINITY,  3.11453176529754170e-165,
+                   INFINITY, -2.98041317253353283e-167,                  INFINITY,
+    2.82503618249623987e-169,                  INFINITY, -2.65261613379928637e-171,
+                   INFINITY,  2.46754989190631299e-173,                  INFINITY,
+    -2.27423953171088750e-175,                  INFINITY,  2.07693107918802517e-177,
+                   INFINITY, -1.87957563727423095e-179,                  INFINITY,
+    1.68571806033563308e-181,                  INFINITY, -1.49841605363167375e-183,
+                   INFINITY,  1.32019035562262006e-185,                  INFINITY,
+    -1.15300467739966817e-187,                  INFINITY,  9.98272447965080587e-190,
+                   INFINITY, -8.56886221429253679e-192,                  INFINITY,
+    7.29264869301492472e-194,                  INFINITY, -6.15413391815605507e-196,
+                   INFINITY,  5.14990286038163621e-198,                  INFINITY,
+    -4.27377830737065247e-200,                  INFINITY,  3.51751301018160712e-202,
+                   INFINITY, -2.87143919198498541e-204,                  INFINITY,
+    2.32505197731577755e-206,                  INFINITY, -1.86751162836608634e-208,
+                   INFINITY,  1.48805707439528789e-210,                  INFINITY,
+    -1.17632970307927896e-212,                  INFINITY,  9.22611531826885473e-215,
+                   INFINITY, -7.17985627880844725e-217,                  INFINITY,
+    5.54429056278644603e-219,                  INFINITY, -4.24849851554516960e-221,
+                   INFINITY,  3.23079735022446356e-223,                  INFINITY,
+    -2.43833762281091599e-225,                  INFINITY,  1.82647012944637896e-227,
+                   INFINITY, -1.35797035646570929e-229,                  INFINITY,
+    1.00219214499314334e-231,                  INFINITY, -7.34206699628676491e-234,
+                   INFINITY,  5.33968508820855658e-236,                  INFINITY,
+    -3.85536829473541982e-238,                  INFINITY,  2.76370487077807853e-240,
+                   INFINITY, -1.96704973009115890e-242,                  INFINITY,
+    1.39014115200788612e-244,                  INFINITY, -9.75537650531849891e-247,
+                   INFINITY,  6.79817178070975537e-249,                  INFINITY,
+    -4.70461714928010757e-251,                  INFINITY,  3.23341384830247950e-253,
+                   INFINITY, -2.20710842887541285e-255,                  INFINITY,
+    1.49634469754265277e-257,                  INFINITY, -1.00763952696474932e-259,
+                   INFINITY,  6.74006372551671838e-262,                  INFINITY,
+    -4.47844765815064328e-264,                  INFINITY,  2.95607106148557300e-266,
+                   INFINITY, -1.93840725343316261e-268,                  INFINITY,
+    1.26280602829522003e-270,                  INFINITY, -8.17350180126355939e-273,
+                   INFINITY,  5.25627125483187099e-275,                  INFINITY,
+    -3.35863977944528515e-277,                  INFINITY,  2.13246970123510155e-279,
+                   INFINITY, -1.34540675156788739e-281,                  INFINITY,
+    8.43515204744757014e-284,                  INFINITY, -5.25554644700783205e-286,
+                   INFINITY,  3.25420832632063903e-288,                  INFINITY,
+    -2.00258973927423947e-290,                  INFINITY,  1.22482552860809751e-292,
+                   INFINITY, -7.44574789427414922e-295,                  INFINITY,
+    4.49894132584540740e-297,                  INFINITY, -2.70206686236961415e-299,
+                   INFINITY,  1.61317424619081441e-301,                  INFINITY,
+    -9.57373439875854268e-304,                  INFINITY};
 
-    // The table of values, coded using the (prettier) C++14 syntax for `constexpr`.
-    // If needed, we could re-code this for C++11...
-    struct Table {
-
-        double sqrt_int[MAXSQRT + 1];
-        double invsqrt_int[MAXSQRT + 1];
-        double factorial[MAXFACT + 1];
-        double double_factorial[MAXDOUBLEFACT + 1];
-        double half_factorial_pos[2 * MAXFACT + 1];
-        double half_factorial_neg[2 * MAXFACT + 1];
-
-        constexpr Table() : sqrt_int(), invsqrt_int(), factorial(), double_factorial(),
-                half_factorial_pos(), half_factorial_neg() {
-            for (auto i = 0; i <= MAXSQRT; ++i) {
-                sqrt_int[i] = sqrt_(i);
-                invsqrt_int[i] = i > 0 ? 1. / sqrt_int[i] : INFINITY;
-            }
-            for (auto i = 0; i <= MAXFACT; ++i) {
-                factorial[i] = factorial_(i);
-            }
-            for (auto i = 0; i <= MAXDOUBLEFACT; ++i) {
-                double_factorial[i] = double_factorial_(i);
-            }
-            for (auto i = 0; i <= 2 * MAXFACT; ++i) {
-                half_factorial_pos[i] = half_factorial_pos_(i);
-                half_factorial_neg[i] = half_factorial_neg_(i);
-            }
-        }
-
-    };
+}
 
-    // Instantiate the table
-    constexpr auto table = Table();
+namespace tables {
 
     // Square root of n
     template <typename T>
-    T sqrt_int(int n) {
+    inline T sqrt_int(int n) {
         if (n < 0)
             throw errors::SqrtNegativeNumber();
         else if (n > MAXSQRT)
             return sqrt(T(n));
         else
-            return T(table.sqrt_int[n]);
+            return T(const_tables::sqrt_int[n]);
     }
 
     template <>
-    Multi sqrt_int(int n) {
+    inline Multi sqrt_int(int n) {
         if (n < 0)
             throw errors::SqrtNegativeNumber();
         else
@@ -114,17 +654,17 @@ namespace tables {
 
     // Inverse of the square root of n
     template <typename T>
-    T invsqrt_int(int n) {
+    inline T invsqrt_int(int n) {
         if (n < 0)
             throw errors::SqrtNegativeNumber();
         else if (n > MAXSQRT)
             return 1.0 / sqrt(T(n));
         else
-            return T(table.invsqrt_int[n]);
+            return T(const_tables::invsqrt_int[n]);
     }
 
     template <>
-    Multi invsqrt_int(int n) {
+    inline Multi invsqrt_int(int n) {
         if (n < 0)
             throw errors::SqrtNegativeNumber();
         else
@@ -139,7 +679,7 @@ namespace tables {
         else if (n > MAXFACT)
             return T(INFINITY);
         else
-            return T(table.factorial[n]);
+            return T(const_tables::factorial[n]);
     }
 
     template <>
@@ -163,7 +703,7 @@ namespace tables {
         } else if (n > MAXDOUBLEFACT)
             return T(INFINITY);
         else
-            return T(table.double_factorial[n]);
+            return T(const_tables::double_factorial[n]);
     }
 
     template <>
@@ -186,9 +726,9 @@ namespace tables {
             return T(INFINITY);
         else {
             if (n < 0)
-                return T(table.half_factorial_neg[-n]);
+                return T(const_tables::half_factorial_neg[-n]);
             else
-                return T(table.half_factorial_pos[n]);
+                return T(const_tables::half_factorial_pos[n]);
         }
     }
 
diff --git a/starry/tables.py b/starry/tables.py
new file mode 100644
index 0000000..0ad0dac
--- /dev/null
+++ b/starry/tables.py
@@ -0,0 +1,59 @@
+"""Generate the tables of square roots and factorials in `tables.h`."""
+import numpy as np
+from scipy.misc import factorial, factorial2
+
+
+def hfp(x):
+    if x > 1:
+        if (x % 2) == 0:
+            return factorial(x // 2, exact=True)
+        else:
+            return hfp(x - 2) * 0.5 * x
+    elif x == 1:
+        return 0.5 * np.sqrt(np.pi)
+    elif x == 0:
+        return 1
+    else:
+        raise ValueError()
+
+
+def hfn(x):
+    if x > 1:
+        if (x % 2) == 0:
+            return np.inf
+        else:
+            return hfn(x - 2) / (1 - 0.5 * x)
+    elif x == 1:
+        return np.sqrt(np.pi)
+    elif x == 0:
+        return 1
+    else:
+        raise ValueError()
+
+
+def generate(func, name, maxval, vals_per_row=3):
+    n = 0
+    table = ""
+    for i in range(maxval + 1):
+        val = func(i)
+        table += "%25.17e" % val
+        table += ", "
+        n += 1
+        if n == vals_per_row:
+            n = 0
+            table += "\n"
+    table = "double %s[] = \n{%s};" % (name, table[1:-2])
+    table = table.replace("               inf", "          INFINITY")
+    return table
+
+
+table = [None for i in range(6)]
+table[0] = generate(np.sqrt, 'sqrt_int', 300)
+table[1] = generate(lambda x: 1 / np.sqrt(x), 'invsqrt_int', 300)
+table[2] = generate(lambda x: factorial(x, exact=True), 'factorial', 170)
+table[3] = generate(lambda x: factorial2(x, exact=True),
+                    'double_factorial', 300)
+table[4] = generate(hfp, 'half_factorial_pos', 340)
+table[5] = generate(hfn, 'half_factorial_neg', 340)
+
+print("\n\n".join(table))
