From 4ece81957b48449ed5ca59f3e66154fec83d349a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Julian=20R=C3=BCth?= <julian.rueth@fsfe.org>
Date: Sun, 14 Nov 2021 11:04:05 -0600
Subject: [PATCH] drop random_shuffle

removed in C++17
---
 libflatsurf/src/permutation.cc | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/libflatsurf/src/permutation.cc b/libflatsurf/src/permutation.cc
index 6d0b1ffb..34de5a3f 100644
--- a/libflatsurf/src/permutation.cc
+++ b/libflatsurf/src/permutation.cc
@@ -20,6 +20,8 @@
 #include "../flatsurf/permutation.hpp"
 
 #include <boost/range/numeric.hpp>
+#include <algorithm>
+#include <random>
 #include <cassert>
 #include <ostream>
 #include <unordered_set>
@@ -104,12 +106,18 @@ Permutation<T>::Permutation(const std::unordered_map<T, T> &permutation) :
 template <typename T>
 Permutation<T> Permutation<T>::random(const std::vector<T> &domain) {
   LIBFLATSURF_ASSERT_ARGUMENT(std::unordered_set<T>(domain.begin(), domain.end()).size() == domain.size(), "domain must not contain duplicates");
+
   std::vector<T> image = domain;
-  std::random_shuffle(image.begin(), image.end());
+
+  std::random_device rand;
+  std::mt19937 generator(rand());
+  std::shuffle(image.begin(), image.end(), generator);
+
   std::vector<std::pair<T, T>> permutation;
   for (size_t i = 0; i < domain.size(); i++) {
     permutation.push_back(std::pair(domain[i], image[i]));
   }
+
   return Permutation<T>(permutation);
 }
 
-- 
2.33.1

