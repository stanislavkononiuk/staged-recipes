{% set name = "fastcluster" %}
{% set version = "1.1.21" %}
{% set sha256 = "c0f7c234a93d5414e9b1300b17ec5c82bd9a9e4c210fc5d9bc3e2bc82fced989" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    - setuptools
    - numpy x.x
  run:
    - python
    - numpy x.x

test:
  imports:
    - fastcluster

about:
  home: http://danifold.net/
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: BSD-2-Clause
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: COPYING.txt
  summary: 'Fast hierarchical clustering routines for R and Python.'

  # The remaining entries in this section are optional, but recommended
  description: |
    This library provides Python functions for hierarchical clustering. It generates hierarchical
    clusters from distance matrices or from vector data.

    Part of this module is intended to replace the functions
    linkage, single, complete, average, weighted, centroid, median, ward
    in the module scipy.cluster.hierarchy with the same functionality but much faster algorithms.
    Moreover, the function linkage_vector provides memory-efficient clustering for vector data.

    The interface is very similar to MATLABâ€™s Statistics Toolbox API to make code easier to
    port from MATLAB to Python/NumPy. The core implementation of this library is in C++ for efficiency.

extra:
  recipe-maintainers:
    - mpharrigan
