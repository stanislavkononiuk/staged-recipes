{% set version = '0.6.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-aroma.apd
  version: {{ version|replace("-", "_") }}

source:
  fn: aroma.apd_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/aroma.apd_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/aroma.apd/aroma.apd_{{ version }}.tar.gz
  sha256: 87513774baeed8e1d43f819e615c85278aef748ebc842f1ee50686c3392e37d1

build:
  number: 0
  skip: true  # [win32]

  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - r-base
    - r-r.huge >=0.9.0
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.18.0
    - r-r.utils >=1.34.0

  run:
    - r-base
    - r-r.huge >=0.9.0
    - r-r.methodss3 >=1.7.0
    - r-r.oo >=1.18.0
    - r-r.utils >=1.34.0

test:
  commands:
    - $R -e "library('aroma.apd')"  # [not win]
    - "\"%R%\" -e \"library('aroma.apd')\""  # [win]

about:
  home: 'URL: http://www.aroma-project.org/, https://github.com/HenrikBengtsson/aroma.apd'

  license: LGPL (>= 2.1)
  summary: DEPRECATED. Do not start building new projects based on this package. (The (in-house)
    APD file format was initially developed to store Affymetrix probe-level data, e.g.
    normalized CEL intensities.  Chip types can be added to APD file and similar to
    methods in the affxparser package, this package provides methods to read APDs organized
    by units (probesets).  In addition, the probe elements can be arranged optimally
    such that the elements are guaranteed to be read in order when, for instance, data
    is read unit by unit.  This speeds up the read substantially.  This package is supporting
    the Aroma framework and should not be used elsewhere.)
  license_family: LGPL

extra:
  recipe-maintainers:
    - johanneskoester
    - bgruening
