# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "ase" %}
{% set version = "3.12.0" %}
{% set sha256 = "e05cb18c4ce751750c9596ae302ef0828f1f259cc66f6b7e7e70d6d7c9f27bbd" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for Python 2.7, 3.4, and above, for all major OSs.
  # Add the line "skip: True  # [py<34]" (for example) to limit to Python 3.4 and newer, or "skip: True  # [not win]" to limit to Windows.
  # script: python setup.py install --single-version-externally-managed --record record.txt
  script: python setup.py install

requirements:
  build:
    - python
    # When setuptools is available add the `--single-version-externally-managed --record record.txt` above.
    - setuptools
    - numpy
    - scipy
  run:
    - python
    - numpy
    - matplotlib
    - scipy

test:
  # Some package might need a `test/commands` key to check CLI.
  imports:
    - ase
  commands:
    - python -m ase.test
  requires:
    - qt


about:
  home: http://github.com/simplejson/simplejson
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: LGPL2+
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE.txt
  summary: 'ASE is a python package providing an open source Atomic Simulation Environment in the Python language.'

  # The remaining entries in this section are optional, but recommended
  description: |
    ASE is a set of tools and Python modules for setting up, 
    manipulating, running, visualizing and analyzing atomistic simulations.
    Python 2.6-3.5 
  doc_url: http://wiki.fysik.dtu.dk/ase
  dev_url: https://gitlab.com/ase/ase

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - jochym

