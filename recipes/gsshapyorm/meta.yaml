# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "gsshapyorm" %}
{% set version = "0.1.0" %}
{% set sha256 = "f19460b3913081038d51433dd0b30c7a8bf1ca347ab45290b0e8d645a00ff936" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: {{ PYTHON }} -m pip install --no-deps --ignore-installed .
  skip: True # [py2k]

requirements:
  build:
    - pip
    - python
    - setuptools
  host:
    - python
    - pip
    - setuptools
  run:
    - python
    - appdirs
    - geopandas
    - mapkit >=1.2.6
    - numpy
    - pandas
    - psycopg2
    - pyyaml
    - sqlalchemy
    - timezonefinder

test:
  imports:
    - gsshapyorm
    - gsshapyorm.orm
    - gsshapyorm.orm.file_io
    - gsshapyorm.orm.prj
    - gsshapyorm.lib
    - gsshapyorm.lib.db_tools
    - gsshapyorm.util

about:
  home: https://github.com/Aquaveo/gsshapyorm
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: 'SQLAlchemy Object Relational Model for GSSHA model files.'
  description: |
    GsshaPy is an object relational model (ORM) for the
    Gridded Surface Subsurface Hydrologic Analysis (GSSHA) model.
    The purpose of gsshapyorm is to expose GSSHA files to a web
    development environment by reading them into an SQL database.
    The files can also be written back to file for model execution.
  doc_url: http://gsshapyorm.readthedocs.io
  dev_url: https://github.com/Aquaveo/gsshapyorm

extra:
  recipe-maintainers:
    - swainn
