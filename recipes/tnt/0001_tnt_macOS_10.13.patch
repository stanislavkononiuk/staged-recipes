Only in old: tnt_126.zip
diff -r -u old/tnt_array1d.h new/tnt_array1d.h
--- old/tnt_array1d.h	2005-02-11 12:21:49.000000000 -0700
+++ new/tnt_array1d.h	2018-09-04 14:24:23.000000000 -0700
@@ -235,7 +235,7 @@
 template <class T>
 inline Array1D<T> Array1D<T>::subarray(int i0, int i1)
 {
-	if ((i0 > 0) && (i1 < n_) || (i0 <= i1))
+	if (((i0 > 0) && (i1 < n_)) || (i0 <= i1))
 	{
 		Array1D<T> X(*this);  /* create a new instance of this array. */
 		X.n_ = i1-i0+1;
diff -r -u old/tnt_math_utils.h new/tnt_math_utils.h
--- old/tnt_math_utils.h	2004-10-15 14:06:49.000000000 -0700
+++ new/tnt_math_utils.h	2018-09-04 14:24:23.000000000 -0700
@@ -19,7 +19,12 @@
 {
 	
 	if (a== 0)
-		return abs(b);
+        {
+                // issues warnings because b is not the right type for abs()
+		//return abs(b);
+
+		return fabs(b);
+        }
 	else
 	{
 		Real c = b/a;
diff -r -u old/tnt_sparse_matrix_csr.h new/tnt_sparse_matrix_csr.h
--- old/tnt_sparse_matrix_csr.h	2004-10-15 14:06:49.000000000 -0700
+++ new/tnt_sparse_matrix_csr.h	2018-09-04 14:24:23.000000000 -0700
@@ -94,7 +94,7 @@
 template <class T>
 Sparse_Matrix_CompRow<T>::Sparse_Matrix_CompRow(int M, int N, int nz,
 	const T *val, const int *r, const int *c) : val_(nz,val), 
-		rowptr_(M, r), colind_(nz, c), dim1_(M), dim2_(N) {}
+		rowptr_(M, *r), colind_(nz, *c), dim1_(M), dim2_(N) {}
 
 
 }
