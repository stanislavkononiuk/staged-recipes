From 8168254eebf14f3fb1af765b106907bd176cb58a Mon Sep 17 00:00:00 2001
From: Silvio Traversaro <silvio@traversaro.it>
Date: Wed, 14 Sep 2022 19:37:22 +0200
Subject: [PATCH] Devendor

---
 python/CMakeLists.txt | 24 ++++++------------------
 1 file changed, 6 insertions(+), 18 deletions(-)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 3f1db39..53a1243 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -15,21 +15,8 @@
 # limitations under the License.
 
 
-SET(PYTHON_VERSION_TINY_RENDERER "" CACHE STRING "Python version pytinydiffsim will use.")
-SET(Python_ADDITIONAL_VERSIONS 3 3.6 3.5 3.4 3.3 3.2 3.1 3.0 2.7 2.7.12 2.7.10 2.7.3 )
-SET_PROPERTY(CACHE PYTHON_VERSION_TINY_RENDERER PROPERTY STRINGS ${Python_ADDITIONAL_VERSIONS})
-SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/build3/cmake ${CMAKE_MODULE_PATH})
-OPTION(EXACT_PYTHON_VERSION "Require Python and match PYTHON_VERSION_TINY_RENDERER exactly, e.g. 2.7.12" OFF)
-IF(EXACT_PYTHON_VERSION)
-    set(EXACT_PYTHON_VERSION_FLAG EXACT REQUIRED)
-ENDIF(EXACT_PYTHON_VERSION)
-# first find the python interpreter
-FIND_PACKAGE(PythonInterp ${PYTHON_VERSION_TINY_RENDERER} ${EXACT_PYTHON_VERSION_FLAG})
-# python library should exactly match that of the interpreter
-# the following can result in fatal error if you don't have the right python configuration
-FIND_PACKAGE(PythonLibs ${PYTHON_VERSION_STRING} EXACT)
-FIND_PACKAGE(PythonLibs)
-
+find_package(Python3 COMPONENTS NumPy Development.Module REQUIRED)
+find_package(pybind11 REQUIRED)
 
 IF(WIN32)
 	SET(BUILD_SHARED_LIBS OFF CACHE BOOL "Shared Libs" FORCE)
@@ -70,11 +57,12 @@ ADD_LIBRARY(pytinyrenderer SHARED ${pytinyrenderer_SRCS} ${TDS_HDRS})
 #TARGET_LINK_LIBRARIES(pytinyrenderer opengl_window)
 target_include_directories(pytinyrenderer PRIVATE 
   .. 
-  ../third_party/pybind11/include
-  ${PYTHON_INCLUDE_DIRS}
-  ${PYTHON_NUMPY_INCLUDE_DIR}
 )
 
+target_link_libraries(pytinyrenderer PRIVATE
+  Python3::Python
+  Python3::NumPy
+  pybind11::module)
 
 IF (WIN32)
   TARGET_COMPILE_OPTIONS(pytinyrenderer PUBLIC -bigobj)

