{% set name = "miniwdl" %}
{% set version = "0.1.7" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz"
  sha256: "fbb646a09af08f0d13f2f197eba01db576a70745190fa8546d50d165f21682d4"

build:
  skip: true  # [py<36]
  number: 0
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv "

requirements:
  host:
    - pip
    - pbr
    - python>3.6.0
    - setuptools
    - docker-py
    - lark-parser==0.7.1

  run:
    - python>3.6.0
    - setuptools
    - docker-py
    - lark-parser==0.7.1
test:
  imports:
    - WDL
    - WDL.Env
    - WDL.Error
    - WDL.Expr
    - WDL.StdLib
    - WDL.Tree
    - WDL.Type
    - WDL.Value
    - WDL.Walker

about:
  home: https://github.com/chanzuckerberg/miniwdl"
  license: "MIT"
  license_family: "MIT"
  license_file: "LICENSE"
  summary: "A static analysis toolkit for the Workflow Description Language"
  description: >
    Miniwdl is a library for parsing WDL documents into a type-checked abstract
    syntax tree (AST), providing a foundation for new runtime systems, developer
    tooling, and language experimentation. It also includes command-line tools
    supporting the WDL development cycle, including a "linter" to statically
    analyze WDL documents for errors and oversights, and a Cromwell wrapper to
    make it more convenient to test a workflow locally.

extra:
  recipe-maintainers:
    - mlin
    - rhpvorderman
