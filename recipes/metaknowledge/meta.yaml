# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 13 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "metaknowledge" %}
{% set version = "3.3.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: f137dce7ed7e1fb3a73730716d37e2b5757d9fc94f3bb50f8e82338c38b17dae

build:
  noarch: python
  number: 0
  skip: True  # [py<3]
  script: "{{ PYTHON }} -m pip install . --no-deps -vv"

requirements:
  build:
  host:
    - python
    - pip
  run:
    - python
    - networkx

test:
  imports:
    - metaknowledge

about:
  home: http://github.com/metaknowledge/metaknowledge
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: GPL2
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: GPL
  license_file: LICENSE
  summary: 'A Python library for doing bibliometric and network analysis in science and health policy research'

  # The remaining entries in this section are optional, but recommended
  description: |
    metaknowledge is a Python3 library that simplifies bibliometric research using data 
    from various sources. It reads a directory of plain text files containing meta-data 
    on publications and citations, and writes to a variety of data structures that are 
    suitable for quantitative, network, and text analyses. It handles large datasets 
    (e.g. several million records) efficiently.
  doc_url: https://metaknowledge.readthedocs.io/
  dev_url: https://github.com/networks-lab/metaknowledge

extra:
  recipe-maintainers:
    - vtraag