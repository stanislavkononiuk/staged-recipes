From 693a8d6314e7cfc30f0ca4a042122ca581967f79 Mon Sep 17 00:00:00 2001
From: Vincent Pelletier <plr.vincent@gmail.com>
Date: Fri, 31 May 2019 20:42:37 +0900
Subject: [PATCH] tests: Fragment some more.

And fix a dumb mistake in test error path (reported by Mark Harfouche).
---
 libaio/test.py | 34 ++++++++++++++++++++++++++--------
 1 file changed, 26 insertions(+), 8 deletions(-)

diff --git a/libaio/test.py b/libaio/test.py
index c7caeeb..6c1d245 100755
--- a/libaio/test.py
+++ b/libaio/test.py
@@ -24,7 +24,7 @@
 import libaio
 
 class LibAIOTests(unittest.TestCase):
-    def testBasicFunctionality(self):
+    def testReadWrite(self):
         with tempfile.TemporaryFile() as temp, libaio.AIOContext(1) as io_context:
             def readall():
                 temp.seek(0)
@@ -83,14 +83,24 @@ def readall():
                 completion_event_list,
             )
             self.assertEqual(readall(), b'bluez')
-            del completion_event_list[:]
 
+    def testFsync(self):
+        with tempfile.TemporaryFile() as temp, libaio.AIOContext(1) as io_context:
+            completion_event_list = []
+            onCompletion = lambda block, res, res2: (
+                completion_event_list.append((block, res, res2))
+            )
             fsync_block = libaio.AIOBlock(
                 mode=libaio.AIOBLOCK_MODE_FSYNC,
                 target_file=temp,
                 onCompletion=onCompletion,
             )
-            io_context.submit([fsync_block])
+            try:
+                io_context.submit([fsync_block])
+            except OSError as exc:
+                if exc.errno != errno.EINVAL:
+                    raise
+                raise unittest.SkipTest('FSYNC kernel support missing')
             fsync_event_list_reference = [(fsync_block, 0, 0)]
             self.assertEqual(
                 fsync_event_list_reference,
@@ -100,14 +110,24 @@ def readall():
                 fsync_event_list_reference,
                 completion_event_list,
             )
-            del completion_event_list[:]
 
+    def testFDsync(self):
+        with tempfile.TemporaryFile() as temp, libaio.AIOContext(1) as io_context:
+            completion_event_list = []
+            onCompletion = lambda block, res, res2: (
+                completion_event_list.append((block, res, res2))
+            )
             fdsync_block = libaio.AIOBlock(
                 mode=libaio.AIOBLOCK_MODE_FDSYNC,
                 target_file=temp,
                 onCompletion=onCompletion,
             )
-            io_context.submit([fdsync_block])
+            try:
+                io_context.submit([fdsync_block])
+            except OSError as exc:
+                if exc.errno != errno.EINVAL:
+                    raise
+                raise unittest.SkipTest('FDSYNC kernel support missing')
             fdsync_event_list_reference = [(fdsync_block, 0, 0)]
             self.assertEqual(
                 fdsync_event_list_reference,
@@ -117,7 +137,6 @@ def readall():
                 fdsync_event_list_reference,
                 completion_event_list,
             )
-            del completion_event_list[:]
 
     def testPoll(self):
         with libaio.AIOContext(1) as io_context:
@@ -138,7 +157,7 @@ def testPoll(self):
                 except OSError as exc:
                     if exc.errno != errno.EINVAL:
                         raise
-                    raise SkipTest('POLL kernel support missing')
+                    raise unittest.SkipTest('POLL kernel support missing')
                 self.assertEqual([], io_context.getEvents(min_nr=0))
                 self.assertEqual([], completion_event_list)
                 os.write(write_end, b'foo')
@@ -155,7 +174,6 @@ def testPoll(self):
                     poll_event_list_reference,
                     completion_event_list,
                 )
-                del completion_event_list[:]
             finally:
                 os.close(write_end)
                 os.close(read_end)
