{% set name = "uncertainpy" %}
{% set version = "1.2.0" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 1df39206390f1410fccdb4d6f6c611203ded46d6fe176e17593a207c1b42a2e6

build:
  number: 0
  noarch: python
  script: "{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv "

requirements:
  host:
    - pip
    - python >=3
  run:
    - chaospy
    - h5py
    - matplotlib >=2
    - multiprocess
    - numpy
    - python
    - salib
    - scipy
    - seaborn
    - six
    - tqdm
    - xvfbwrapper

test:
  imports:
    - uncertainpy
    - uncertainpy.core
    - uncertainpy.features
    - uncertainpy.models
    - uncertainpy.plotting
    - uncertainpy.plotting.prettyplot
    - uncertainpy.utils

about:
  home: https://github.com/simetenn/uncertainpy
  license: GPL-3.0
  license_family: GPL
  license_file: LICENSE.txt
  summary: A python toolbox for uncertainty quantification and sensitivity analysis tailored towards neuroscience models.
  description: |
    Uncertainpy is a python toolbox for uncertainty quantification and sensitivity analysis tailored towards computational 
    neuroscience.

    Uncertainpy is model independent and treats the model as a black box where the model can be left unchanged. Uncertainpy 
    implements both quasi-Monte Carlo methods and polynomial chaos expansions using either point collocation or the 
    pseudo-spectral method. Both of the polynomial chaos expansion methods have support for the rosenblatt transformation 
    to handle dependent input parameters.

    Uncertainpy is feature based, i.e., if applicable, it recognizes and calculates the uncertainty in features of the model,
    as well as the model itself. Examples of features in neuroscience can be spike timing and the action potential shape.

    Uncertainpy is tailored towards neuroscience models, and comes with several common neuroscience models and features 
    built in, but new models and features can easily be implemented. It should be noted that while Uncertainpy is tailored 
    towards neuroscience, the implemented methods are general, and Uncertainpy can be used for many other types of models 
    and features within other fields.
  doc_url: https://uncertainpy.readthedocs.io/en/latest/?badge=latest
  dev_url: https://github.com/simetenn/uncertainpy

extra:
  recipe-maintainers:
    - volpatto
