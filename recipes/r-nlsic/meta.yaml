{% set version = '1.0.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-nlsic
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/nlsic_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/nlsic/nlsic_{{ version }}.tar.gz
  sha256: e8601bb99230966b6bbf827193a4b4005b9a6150a5b5c58f4e830d57bff9c9bf

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-nnls
  run:
    - r-base
    - r-nnls
    - r-numderiv

test:
  commands:
    - $R -e "library('nlsic')"           # [not win]
    - "\"%R%\" -e \"library('nlsic')\""  # [win]

about:
  home: https://github.com/MathsCell/nlsic
  license: GPL-2.0-only
  summary: We solve non linear least squares problems with optional equality and/or inequality
    constraints. Non linear iterations are globalized with back-tracking method. Linear
    problems are solved by dense QR decomposition from 'LAPACK' which can limit the
    size of treated problems. On the other side, we avoid condition number degradation
    which happens in classical quadratic programming approach. Inequality constraints
    treatment on each non linear iteration is based on 'NNLS' method (by Lawson and
    Hanson). We provide an original function 'lsi_ln' for solving linear least squares
    problem with inequality constraints in least norm sens. Thus if Jacobian of the
    problem is rank deficient a solution still can be provided. However, truncation
    errors are probable in this case. Equality constraints are treated by using a basis
    of Null-space. User defined function calculating residuals must return a list having
    residual vector (not their squared sum) and Jacobian. If Jacobian is not in the
    returned list, package 'numDeriv' is used to calculated finite difference version
    of Jacobian. The 'NLSIC' method was fist published in Sokol et al. (2012) <doi:10.1093/bioinformatics/btr716>.
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'
extra:
  recipe-maintainers:
    - conda-forge/r
    - sgsokol

# Package: nlsic
# Title: Non Linear Least Squares with Inequality Constraints
# Version: 1.0.1
# Authors@R: person(given = "Serguei", family = "Sokol", role = c("aut", "cre"), email = "sokol@insa-toulouse.fr", comment = c(ORCID = "0000-0002-5674-3327"))
# Maintainer: Serguei Sokol <sokol@insa-toulouse.fr>
# Description: We solve non linear least squares problems with optional equality and/or inequality constraints. Non linear iterations are globalized with back-tracking method. Linear problems are solved by dense QR decomposition from 'LAPACK' which can limit the size of treated problems. On the other side, we avoid condition number degradation which happens in classical quadratic programming approach. Inequality constraints treatment on each non linear iteration is based on 'NNLS' method (by Lawson and Hanson). We provide an original function 'lsi_ln' for solving linear least squares problem with inequality constraints in least norm sens. Thus if Jacobian of the problem is rank deficient a solution still can be provided. However, truncation errors are probable in this case. Equality constraints are treated by using a basis of Null-space. User defined function calculating residuals must return a list having residual vector (not their squared sum) and Jacobian. If Jacobian is not in the returned list, package 'numDeriv' is used to calculated finite difference version of Jacobian. The 'NLSIC' method was fist published in Sokol et al. (2012) <doi:10.1093/bioinformatics/btr716>.
# License: GPL-2
# Encoding: UTF-8
# RoxygenNote: 7.1.1
# Depends: nnls
# Suggests: numDeriv, RUnit, limSolve
# URL: https://github.com/MathsCell/nlsic
# BugReports: https://github.com/MathsCell/nlsic/issues
# NeedsCompilation: no
# Packaged: 2022-01-10 09:24:32 UTC; sokol
# Author: Serguei Sokol [aut, cre] (<https://orcid.org/0000-0002-5674-3327>)
# Repository: CRAN
# Date/Publication: 2022-01-11 10:02:42 UTC
