{% set version = '0.2.2' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-r6p
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/R6P_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/R6P/R6P_{{ version }}.tar.gz
  sha256: 930d9184edc2165701eef0e4fd0bd912f46e70d803af4b5d935cb9a413a7f115

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
  host:
    - r-base
    - r-r6
    - r-collections
    - r-dplyr
    - r-purrr
    - r-stringr
    - r-tibble
    - r-tidyr
  run:
    - r-base
    - r-r6
    - r-collections
    - r-dplyr
    - r-purrr
    - r-stringr
    - r-tibble
    - r-tidyr

test:
  commands:
    - $R -e "library('R6P')"           # [not win]
    - "\"%R%\" -e \"library('R6P')\""  # [win]

about:
  home: https://tidylab.github.io/R6P/, https://github.com/tidylab/R6P
  license: MIT
  summary: Build robust and maintainable software with object-oriented design patterns in R.
    Design patterns abstract and present in neat, well-defined components and interfaces
    the experience of many software designers and architects over many years of solving
    similar problems. These are solutions that have withstood the test of time with
    respect to re-usability, flexibility, and maintainability. 'R6P' provides abstract
    base classes with examples for a few known design patterns. The patterns were selected
    by their applicability to analytic projects in R. Using these patterns in R projects
    have proven effective in dealing with the complexity that data-driven applications
    possess.
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
