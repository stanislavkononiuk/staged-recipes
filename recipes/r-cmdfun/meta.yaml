{% set version = '1.0.2' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-cmdfun
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/cmdfun_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/cmdfun/cmdfun_{{ version }}.tar.gz
  sha256: 7288d35777260156bf67ea0c036af12e3130b51378f80a9fc5955111e1c16cdd

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-r.utils
    - r-magrittr
    - r-purrr
    - r-rlang
    - r-testthat
    - r-usethis
  run:
    - r-base
    - r-r.utils
    - r-magrittr
    - r-purrr
    - r-rlang
    - r-testthat
    - r-usethis

test:
  commands:
    - $R -e "library('cmdfun')"           # [not win]
    - "\"%R%\" -e \"library('cmdfun')\""  # [win]

about:
  home: https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun
  license: MIT
  summary: Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework
    for building function calls to seamlessly interface with shell commands by allowing
    lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling
    user-specific paths to tool installs or secrets like API keys. Its focus is to equally
    serve package builders who wish to wrap command line software, and to help analysts
    stay inside R when they might usually leave to execute non-R software.
  license_family: MIT
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: cmdfun
# Type: Package
# Title: Framework for Building Interfaces to Shell Commands
# Version: 1.0.2
# Authors@R: person("Spencer", "Nystrom", email = "nystromdev@gmail.com", role = c("aut", "cre", "cph"), comment = c(ORCID = "0000-0003-1000-1579"))
# Description: Writing interfaces to command line software is cumbersome. 'cmdfun' provides a framework for building function calls to seamlessly interface with shell commands by allowing lazy evaluation of command line arguments. 'cmdfun' also provides methods for handling user-specific paths to tool installs or secrets like API keys. Its focus is to equally serve package builders who wish to wrap command line software, and to help analysts stay inside R when they might usually leave to execute non-R software.
# License: MIT + file LICENSE
# Encoding: UTF-8
# LazyData: true
# Imports: magrittr, purrr, R.utils, rlang, testthat, usethis, utils
# RoxygenNote: 7.0.2
# Suggests: cli, covr, knitr, processx, rmarkdown
# VignetteBuilder: knitr
# URL: https://snystrom.github.io/cmdfun/, https://github.com/snystrom/cmdfun
# BugReports: https://github.com/snystrom/cmdfun
# NeedsCompilation: no
# Packaged: 2020-10-02 14:16:21 UTC; snystrom
# Author: Spencer Nystrom [aut, cre, cph] (<https://orcid.org/0000-0003-1000-1579>)
# Maintainer: Spencer Nystrom <nystromdev@gmail.com>
# Repository: CRAN
# Date/Publication: 2020-10-10 09:30:03 UTC
