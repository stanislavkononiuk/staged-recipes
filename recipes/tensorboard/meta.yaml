{% set version = "0.1.6" %}
{% set build_number = "0" %}

package:
  name: tensorboard
  version: {{ version }}

build:
  # There are two wheels (py2, py3) in pypi, that seem equivalent to me.
  # So for the time being, we try building a noarch package.
  # Also see:
  #  https://github.com/conda-forge/conda-smithy/pull/531
  noarch: python
  number: {{ build_number }}
  entry_points:
    - tensorboard = tensorboard.main:main
  script:
    - pip install --no-deps tensorflow-tensorboard=={{ version }}
    - cp ${RECIPE_DIR}/LICENSE ${SRC_DIR}  # [not win]
    - copy %RECIPE_DIR%/LICENSE %SRC_DIR%  # [win]

requirements:
  # See: https://pypi.python.org/pypi/tensorflow-tensorboard/0.1.5
  build:
    - python
    - pip
  run:
    - python
    - bleach ==1.5.0
    - html5lib ==0.9999999
    - markdown >=2.6.8
    - numpy >=1.11.0
    - protobuf >=3.2.0
    - six >=1.10.0
    - werkzeug >=0.11.10

    #
    # After splitting out of tensorflow, the tensorboard pypi package is problematic:
    #
    #  - tensorflow does not need tensorboard to work
    #    (but depends on it, just to avoid surprising the users that were used to have tensorboard in the package)
    #
    #  - tensorboard does need tensorflow to work
    #    (but does not depend on it explicitly to avoid cyclical dependencies)
    #
    # This means that the tensorboard package is not standalone and should always be installed
    # by installing tensorflow. At the moment we are mirroring in conda-forge the wrongs on
    # pypi.
    #
    # Also note that this makes the noarch nature of the package a bit of a wishful thinking
    # (we can use tensorboard only on platforms with a tensorflow package available).
    #
    # See:
    #  Issue in TB tracker: https://github.com/tensorflow/tensorboard/issues/410
    #  Initial recipe PR: https://github.com/conda-forge/staged-recipes/pull/3866
    #  Issue in the TF recipe: https://github.com/conda-forge/tensorflow-feedstock/issues/42
    #
    # An alternative solution would be to uncomment the tensorflow dependency down here
    # and remove the tensorflow dependency on the tensorboard package. Pros: this would create
    # a saner dependency cycle. Cons: it would be inconsitent with the official pypi releases.
    #
    # - tensorflow >=1.3.0
    #

test:
  imports:
    - tensorboard
  # To be super-strict, we should run the original tests with bazel against the newly created package

about:
  home: https://github.com/tensorflow/tensorboard
  license: Apache 2.0
  license_file: LICENSE
  summary: "TensorFlow's Visualization Toolkit"

extra:
  recipe-maintainers:
    - sdvillal
    - danielfrg
