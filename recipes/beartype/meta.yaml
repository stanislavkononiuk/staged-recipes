{% set name = "beartype" %}
{% set version = "0.1.0" %}
{% set sha256 = "3f09340bd95259031d29916216d7f01c965c40ea21ba14e6314faa11e858d79d" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"
  noarch: python

requirements:
  host:
    - python >=3.5
    - pip
    - setuptools
  run:
    - python >=3.5

test:
  requires:
    - pytest
  source_files:
    - beartype_test
  commands:
    - pytest beartype_test

about:
  home: https://github.com/beartype/beartype
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Unbearably fast runtime type checking in pure Python.
  description: |
    Beartype is an open-source pure-Python runtime type checker emphasizing
    efficiency, portability, and thrilling puns. Unlike comparable static type
    checkers operating at the coarse-grained application level (e.g., Pyre,
    mypy, pyright, pytype), beartype operates exclusively at the fine-grained
    callable level of pure-Python functions and methods via the standard
    decorator design pattern. This renders beartype natively compatible with
    all interpreters and compilers targeting the Python language â€“ including
    CPython, PyPy, and Numba. Unlike comparable runtime type checkers (e.g.,
    pytypes, typeguard), beartype wraps each decorated callable with a
    dynamically generated wrapper efficiently type-checking that specific
    callable. Since "performance by default" is our first-class concern, all
    wrappers are guaranteed to exhibit O(1) time complexity with negligible
    constant factors and be either more efficient (in the common case) or
    exactly as efficient minus the cost of an additional stack frame (in the
    worst case) as equivalent type-checking implemented by hand. Beartype thus
    brings Rust- and C++-inspired zero-cost abstractions into the deliciously
    lawless world of pure Python.
  doc_url: https://github.com/beartype/beartype/blob/master/README.rst
  dev_url: https://github.com/beartype/beartype

extra:
  recipe-maintainers:
    - leycec
